{"title":"微信小程序云开发实现图片的上传、存储、访问","uid":"f5218906270dc804bb69eb4b82ceca1a","slug":"微信小程序云开发实现图片的上传、存储、访问","date":"2021-04-10T13:36:00.000Z","updated":"2022-03-30T17:09:34.028Z","comments":true,"path":"api/articles/微信小程序云开发实现图片的上传、存储、访问.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/wkif/imgforTeachingDemo/202203310008758.jpg","content":"<p>我们在进行项目开发时，经常需要处理用户上传的图片，如果用传统的后端开发，处理起来是比较繁琐的。微信小程序云开发提供了一系列API供开发者完成想要的效果。<br>下面我们要实现用户图片的上传、存储及访问。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;button type&#x3D;&quot;primary&quot; bindtap&#x3D;&quot;upImg&quot;&gt;上传图片&lt;&#x2F;button&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<p>因为只是演示功能，我们用一个按钮实现点击事件的产生。<br>首先我们用到的第一个API就是wx.chooseImage<br>官方文档介绍:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/ImageHosting/video/20210410213807.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">upImg()&#123;\n   var that &#x3D; this;\n   wx.chooseImage(&#123;\n     count: 1,\n     success(res)&#123;\n       console.log(res);\n     &#125;\n   &#125;)\n &#125;,<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后我们试着选中一个图片，然后看控制台的输出内容。<br><img src=\"https://cdn.jsdelivr.net/gh/wkif/ImageHosting/video/20210410213841.png\"><br><strong>这个tempFilePaths是我们需要的数据。</strong><br>接下来我们使用第二个API，<strong>wx.cloud.uploadFile</strong><br>官方文档介绍：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/ImageHosting/video/20210410213855.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">upImg()&#123;\n   var that &#x3D; this;\n   wx.chooseImage(&#123;\n     count: 1,\n     success(res)&#123;\n       console.log(res);\n       wx.cloud.uploadFile(&#123;\n         cloudPath:&#39;test&#x2F;&#39; + Math.floor(Math.random()*1000000),\n         filePath:res.tempFilePaths[0],\n         success(res)&#123;\n           console.log(&quot;成功&quot;,res);\n         &#125;\n       &#125;)\n     &#125;\n   &#125;)\n &#125;,<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>wx.chooseImage里面其实没有什么我们需要填写的参数，直接使用就行。但是wx.cloud.uploadFile很明显需要我们填写cloudPath和filePath，这个cloudPath其实就是我们要在云存储中存放的位置，可以新建一个文件夹，也可以直接往里堆。我是新建了一个名为test的文件夹并且在后面拼接了一个很多位的随机数，避免重复。<br>filePath就是我们上文提到的需要的数据，即wx.chooseImage的返回值中的tempFilePaths。<br>然后我们现在再点击一下按钮，看一下wx.cloud.uploadFile的回调会给我们返回一个什么样的值。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/ImageHosting/video/20210410213953.png\"></p>\n<p>fileID和statusCode<br>fileID就是在云存储中的链接，可以直接在客户端访问到。<br>statusCode是一个状态码，可以用来判断操作是否成功。</p>\n<p>我们现在试一下fileID能不能直接在WXML中通过Image组件访问到</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;image src&#x3D;&quot;cloud:&#x2F;&#x2F;creator-xcq6k.6372-creator-xcq6k-1301361703&#x2F;test&#x2F;461783&quot;&gt;&lt;&#x2F;image&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<p>没有问题，是可以直接访问的。<br>但是这个<strong>fileID</strong>仅仅只是在客户端可以被访问到，在一些业务场景下是不够的。<br>下面这个API可以把<strong>fileID</strong>转化为<strong>https</strong>的<strong>url</strong>地址，供全网访问。<br><strong>wx.cloud.getTempFileURL</strong><br>官方文档介绍：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/ImageHosting/video/20210410214020.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">upImg()&#123;\n  var that &#x3D; this;\n  wx.chooseImage(&#123;\n    count: 1,\n    success(res)&#123;\n      console.log(res);\n      wx.cloud.uploadFile(&#123;\n        cloudPath:&#39;test&#x2F;&#39; + Math.floor(Math.random()*1000000),\n        filePath:res.tempFilePaths[0],\n        success(res)&#123;\n          console.log(&quot;成功&quot;,res);\n          wx.cloud.getTempFileURL(&#123;\n            fileList:[res.fileID],\n            success(res)&#123;\n              console.log(res);\n            &#125;\n          &#125;)\n        &#125;\n      &#125;)\n    &#125;\n  &#125;)\n&#125;,<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/ImageHosting/video/20210410214044.png\"></p>\n<p>这里的<strong>tempFileURL</strong>就是我们需要的<strong>url</strong>。<br>复制一下，打开任意一个浏览器，粘贴到地址栏，就会弹出下载的弹窗</p>\n<p>下载了以后，因为没有后缀名所以是无法直接打开的，可以直接在后面填上.png或者.jpg的后缀。</p>\n<p>其实这里我推荐在当初填云存储的图片路径的时候，即<strong>cloudPath</strong>，就把图片的后缀加上，<strong>可以通过正则表达式获取真实的图片后缀，也可以人为的在后面手动拼接后缀</strong>，都没有问题。<br>如果路径上有图片的后缀的话，其实就可以直接在网页上浏览图片了，当然也可以下载。<br><img src=\"https://cdn.jsdelivr.net/gh/wkif/ImageHosting/video/20210410214113.png\"></p>\n<p>转载：</p>\n<p><a href=\"https://blog.csdn.net/m0_46171043/article/details/109653738\">微信小程序云开发实现图片的上传、存储、访问</a></p>\n","feature":true,"text":"我们在进行项目开发时，经常需要处理用户上传的图片，如果用传统的后端开发，处理起来是比较繁琐的。微信小程序云开发提供了一系列API供开发者完成想要的效果。下面我们要实现用户图片的上传、存储及访问。 &lt;button type&#x3D;&quot;primary&quot; b...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":15,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"微信小程序","slug":"微信小程序","count":4,"path":"api/tags/微信小程序.json"}],"toc":"","author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"埃式筛法","uid":"967c79636de7d94383bc9a503d949682","slug":"埃式筛法","date":"2020-11-30T14:01:00.000Z","updated":"2022-03-30T17:09:10.933Z","comments":true,"path":"api/articles/埃式筛法.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforhexo/20201127205203.jpg","text":"做法：做法其实很简单， 首先将2到n范围内的整数写下来，其中2是最小的素数。将表中所有的2的倍数划去，表中剩下的最小的数字就是3，他不能被更小的数整除，所以3是素数。再将表中所有的3的倍数划去……以此类推，如果表中剩余的最小的数是m，那么m就是素数。然后将表中所有m的倍数划去，像...","link":"","photos":[],"count_time":{"symbolsCount":813,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"C","slug":"C","count":1,"path":"api/tags/C.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"feature":true}}