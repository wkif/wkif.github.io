{"title":"vue3+vite+axios中proxy跨域配置","uid":"fadfce06057e90bf9f3fe30898e7652a","slug":"vue3-vite-axios中proxy跨域配置","date":"2022-06-26T03:08:00.000Z","updated":"2022-06-26T03:20:57.220Z","comments":true,"path":"api/articles/vue3-vite-axios中proxy跨域配置.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/project/202206261120941.png","content":"<h2 id=\"axios引入\"><a href=\"#axios引入\" class=\"headerlink\" title=\"axios引入\"></a>axios引入</h2><p>安装：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install axios -S    <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>src目录下创建api目录，下新建axios.js</p>\n<p>axios.js</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\n\n<span class=\"token comment\">// 创建一个 axios 实例</span>\n<span class=\"token keyword\">const</span> service <span class=\"token operator\">=</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">baseURL</span><span class=\"token operator\">:</span> <span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 所有的请求地址前缀部分</span>\n\t<span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span> <span class=\"token number\">60000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 请求超时时间毫秒</span>\n\t<span class=\"token literal-property property\">withCredentials</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 异步请求携带cookie</span>\n\t<span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 设置后端需要的传参类型</span>\n\t\t<span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string-property property\">'token'</span><span class=\"token operator\">:</span> <span class=\"token string\">'your token'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string-property property\">'X-Requested-With'</span><span class=\"token operator\">:</span> <span class=\"token string\">'XMLHttpRequest'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 添加请求拦截器</span>\nservice<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 在发送请求之前做些什么</span>\n\t\t<span class=\"token keyword\">return</span> config\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 对请求错误做些什么</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 添加响应拦截器</span>\nservice<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// console.log(response)</span>\n\t\t<span class=\"token comment\">// 2xx 范围内的状态码都会触发该函数。</span>\n\t\t<span class=\"token comment\">// 对响应数据做点什么</span>\n\t\t<span class=\"token comment\">// dataAxios 是 axios 返回数据中的 data</span>\n\t\t<span class=\"token keyword\">const</span> dataAxios <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data\n\t\t<span class=\"token comment\">// 这个状态码是和后端约定的</span>\n\t\t<span class=\"token keyword\">const</span> code <span class=\"token operator\">=</span> dataAxios<span class=\"token punctuation\">.</span>reset\n\t\t<span class=\"token keyword\">return</span> dataAxios\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 超出 2xx 范围的状态码都会触发该函数。</span>\n\t\t<span class=\"token comment\">// 对响应错误做点什么</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>调用：</p>\n<pre class=\"line-numbers language-ts\" data-language=\"ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> service <span class=\"token keyword\">from</span> <span class=\"token string\">'../axios'</span>\n\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        url<span class=\"token operator\">:</span> <span class=\"token string\">'/pyq/index.php'</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//Api就是proxy中的target地址</span>\n        method<span class=\"token operator\">:</span> <span class=\"token string\">\"get\"</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">apiGetUserInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        method<span class=\"token operator\">:</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\n        url<span class=\"token operator\">:</span> <span class=\"token string\">'/api/topbaidu/index.php'</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//Api就是proxy中的target地址</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-ts\" data-language=\"ts\"><code class=\"language-ts\"><span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> onBeforeMount <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getTest<span class=\"token punctuation\">,</span> apiGetUserInfo <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../api/demo/test'</span>\n<span class=\"token function\">onBeforeMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">apiGetUserInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 这里的res是一个promise对象</span>\n\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"代理设置\"><a href=\"#代理设置\" class=\"headerlink\" title=\"代理设置\"></a>代理设置</h3><p>根目录下新建 vite.config.js</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"> \nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">proxy</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string-property property\">'/api'</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span><span class=\"token string\">' https://v.api.aa1.cn'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">changeOrigin</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 允许跨域</span>\n            <span class=\"token function-variable function\">rewrite</span><span class=\"token operator\">:</span><span class=\"token parameter\">path</span> <span class=\"token operator\">=></span> path<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\/api</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"axios引入安装： npm install axios -S src目录下创建api目录，下新建axios.js axios.js import axios from 'axios' // 创建一个 axios 实例 const service = axios.create(&...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":23,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"vue3","slug":"vue3","count":3,"path":"api/tags/vue3.json"},{"name":"vite","slug":"vite","count":2,"path":"api/tags/vite.json"},{"name":"Axios","slug":"Axios","count":3,"path":"api/tags/Axios.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#axios%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">axios引入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">代理设置</span></a></li></ol></li></ol>","author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"pinia","uid":"2a60f77314330572f365b0f5b003c4b8","slug":"pinia","date":"2022-06-26T03:09:00.000Z","updated":"2022-06-26T03:19:15.946Z","comments":true,"path":"api/articles/pinia.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/project/202206261119013.png","text":"Pinia介绍：状态管理工具，代替Vuex 安装：npm install pinia 配置：main.ts： import &#123;createPinia&#125; from 'pinia'//导入 const state = createPinia()// app.use...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":23,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"pinia","slug":"pinia","count":1,"path":"api/tags/pinia.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}}},"next_post":{"title":"js发布订阅","uid":"44dcd935b56d2f04aff94002ff328fc3","slug":"js发布订阅","date":"2022-06-10T11:52:00.000Z","updated":"2022-10-14T06:36:14.605Z","comments":true,"path":"api/articles/js发布订阅.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/project/202206101955855.png","text":" 发布-订阅模式，看似陌生，其实不然。工作中经常会用到，例如 Node.js EventEmitter 中的 on 和 emit 方法；Vue 中的 $on 和 $emit 方法。他们都使用了发布-订阅模式，让开发变得更加高效方便。 一、 什么是发布-订阅模式1. 定义发布-订阅...","link":"","photos":[],"count_time":{"symbolsCount":"9.9k","symbolsTime":"9 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":23,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"javascript","slug":"javascript","count":5,"path":"api/tags/javascript.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}}}}