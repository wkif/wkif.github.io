{"title":"重温前端-css篇","uid":"b7900de07f93af39b5cf843c09c67750","slug":"重温前端-css篇","date":"2022-02-13T07:53:00.000Z","updated":"2022-04-24T10:29:02.781Z","comments":true,"path":"api/articles/重温前端-css篇.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/project/202204241828510.jpg","content":"<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><h3 id=\"1-css选择某一个-CSS-first-child-选择器-CSS选择器——伪类选择器\"><a href=\"#1-css选择某一个-CSS-first-child-选择器-CSS选择器——伪类选择器\" class=\"headerlink\" title=\"1.css选择某一个 (CSS :first-child 选择器,CSS选择器——伪类选择器)\"></a>1.css选择某一个 (CSS :first-child 选择器,<strong>CSS选择器——伪类选择器</strong>)</h3><p>q:请将html模块中ul列表的第2个li标签和第4个li标签的背景颜色设置成”rgb(255, 0, 0)”。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>utf-8</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n            <span class=\"token comment\">/*补全代码*/</span>\n            \n        </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>CSS :first-child 选择器</strong>：:first-child 选择器用于选取属于其父元素的首个子元素的指定选择器。</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">ul > :first-child + li</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">ul > :first-child + li + li+ li</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"2、CSS-边框属性\"><a href=\"#2、CSS-边框属性\" class=\"headerlink\" title=\"2、CSS 边框属性\"></a>2、CSS 边框属性</h3><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">p</span>\n  <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span>5px solid red<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以按顺序设置如下属性：</p>\n<ul>\n<li>border-width</li>\n<li>border-style</li>\n<li>border-color</li>\n</ul>\n<h4 id=\"border-style可能的值\"><a href=\"#border-style可能的值\" class=\"headerlink\" title=\"border-style可能的值\"></a>border-style可能的值</h4><table>\n<thead>\n<tr>\n<th align=\"left\">值</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">none</td>\n<td align=\"left\">定义无边框。</td>\n</tr>\n<tr>\n<td align=\"left\">hidden</td>\n<td align=\"left\">与 “none” 相同。不过应用于表时除外，对于表，hidden 用于解决边框冲突。</td>\n</tr>\n<tr>\n<td align=\"left\">dotted</td>\n<td align=\"left\">定义点状边框。在大多数浏览器中呈现为实线。</td>\n</tr>\n<tr>\n<td align=\"left\">dashed</td>\n<td align=\"left\">定义虚线。在大多数浏览器中呈现为实线。</td>\n</tr>\n<tr>\n<td align=\"left\">solid</td>\n<td align=\"left\">定义实线。</td>\n</tr>\n<tr>\n<td align=\"left\">double</td>\n<td align=\"left\">定义双线。双线的宽度等于 border-width 的值。</td>\n</tr>\n<tr>\n<td align=\"left\">groove</td>\n<td align=\"left\">定义 3D 凹槽边框。其效果取决于 border-color 的值。</td>\n</tr>\n<tr>\n<td align=\"left\">ridge</td>\n<td align=\"left\">定义 3D 垄状边框。其效果取决于 border-color 的值。</td>\n</tr>\n<tr>\n<td align=\"left\">inset</td>\n<td align=\"left\">定义 3D inset 边框。其效果取决于 border-color 的值。</td>\n</tr>\n<tr>\n<td align=\"left\">outset</td>\n<td align=\"left\">定义 3D outset 边框。其效果取决于 border-color 的值。</td>\n</tr>\n<tr>\n<td align=\"left\">inherit</td>\n<td align=\"left\">规定应该从父元素继承边框样式。</td>\n</tr>\n</tbody></table>\n<p>eg:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">圣诞节来啦！请用CSS给你的朋友们制作一颗圣诞树吧~这颗圣诞树描述起来是这样的：\n1. &quot;topbranch&quot;是圣诞树的上枝叶，该上枝叶仅通过边框属性、左浮动、左外边距即可实现。边框的属性依次是：宽度为100px、是直线、颜色为green（未显示的边框颜色都为透明）\n2. &quot;middleBranch&quot;是圣诞树的中枝叶，该上枝叶仅通过边框属性即可实现。边框的属性依次是：宽度为200px、是直线、颜色为green（未显示的边框颜色都为透明）\n3. &quot;base&quot;是圣诞树的树干，该树干仅通过左外边距实现居中于中枝叶。树干的宽度、高度分别为70px、200px，颜色为gray。\n注意：\n1. 上枝叶、树干的居中都是通过左外边距实现的\n2. 没有显示的边框，其属性都是透明（属性）\n3. 仅通过border属性完成边框的所有属性设置<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/imgforTeachingDemo/202203310845770.png\"></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>utf-8</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n            <span class=\"token selector\">.topbranch</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span>\n                <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">/*\n                * TODO: 上枝叶效果\n                */</span>\n               <span class=\"token property\">float</span><span class=\"token punctuation\">:</span>left<span class=\"token punctuation\">;</span>\n               <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span>100px solid green<span class=\"token punctuation\">;</span>\n               <span class=\"token property\">border-left</span><span class=\"token punctuation\">:</span>100px solid transparent<span class=\"token punctuation\">;</span>\n               <span class=\"token property\">border-right</span><span class=\"token punctuation\">:</span>100px solid transparent<span class=\"token punctuation\">;</span>\n               <span class=\"token property\">border-top</span><span class=\"token punctuation\">:</span>100px solid transparent<span class=\"token punctuation\">;</span>\n               <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span>100px\n               \n                \n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token selector\">.middleBranch</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span>\n                <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">/*\n                * TODO: 中枝叶效果\n                */</span>\n                <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span>200px solid green<span class=\"token punctuation\">;</span>\n                <span class=\"token property\">border-left</span><span class=\"token punctuation\">:</span>200px solid transparent<span class=\"token punctuation\">;</span>\n                 <span class=\"token property\">border-top</span><span class=\"token punctuation\">:</span>200px solid transparent<span class=\"token punctuation\">;</span>\n                 <span class=\"token property\">border-right</span><span class=\"token punctuation\">:</span>200px solid transparent<span class=\"token punctuation\">;</span>\n                \n                \n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token selector\">.base</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">/*\n                * TODO: 树干效果\n                */</span>\n                <span class=\"token property\">width</span><span class=\"token punctuation\">:</span>70px<span class=\"token punctuation\">;</span>\n                <span class=\"token property\">height</span><span class=\"token punctuation\">:</span>200px<span class=\"token punctuation\">;</span>\n                <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span>gray<span class=\"token punctuation\">;</span>\n                <span class=\"token property\">float</span><span class=\"token punctuation\">:</span>left<span class=\"token punctuation\">;</span>\n                <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span>165px\n                \n            <span class=\"token punctuation\">&#125;</span>\n        </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>topbranch<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>middleBranch<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>base<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3、-CSS选择器——伪元素\"><a href=\"#3、-CSS选择器——伪元素\" class=\"headerlink\" title=\"3、 CSS选择器——伪元素\"></a>3、 <strong>CSS选择器——伪元素</strong></h3><p>伪元素是一个附加在选择器末尾的关键词，通过伪元素您不需要借助元素的 ID 或 class 属性就可以对被选择元素的特定部分定义样式。例如通过伪元素您可以设置段落中第一个字母的样式，或者在元素之前、之后插入一些内容等等。</p>\n<p>在 CSS1 和 CSS2 中，伪元素的使用与伪类相同，都是使一个冒号<code>:</code>与选择器相连。但在 CSS3 中，将伪元素单冒号的使用方法改为了使用双冒号<code>::</code>，以此来区分伪类和伪元素。因此，建议在使用伪元素时使用双冒号而不是单冒号。</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">selector::pseudo-element</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">property</span><span class=\"token punctuation\">:</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>其中，selector 为选择器，pseudo-element 为伪元素的名称，property 为 CSS 中的属性，value 为属性对应的值。</p>\n<p>CSS 中提供了一系列的伪元素，如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>伪元素</th>\n<th>例子</th>\n<th>例子描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>::after</td>\n<td>p::after</td>\n<td>在每个 <p> 元素之后插入内容</td>\n</tr>\n<tr>\n<td>::before</td>\n<td>p::before</td>\n<td>在每个 <p> 元素之前插入内容</td>\n</tr>\n<tr>\n<td>::first-letter</td>\n<td>p::first-letter</td>\n<td>匹配每个 <p> 元素中内容的首字母</td>\n</tr>\n<tr>\n<td>::first-line</td>\n<td>p::first-line</td>\n<td>匹配每个 <p> 元素中内容的首行</td>\n</tr>\n<tr>\n<td>::selection</td>\n<td>p::selection</td>\n<td>匹配用户选择的元素部分</td>\n</tr>\n<tr>\n<td>::placeholder</td>\n<td>input::placeholder</td>\n<td>匹配每个表单输入框（例如 input）的 placeholder 属性</td>\n</tr>\n</tbody></table>\n<h4 id=\"1-after\"><a href=\"#1-after\" class=\"headerlink\" title=\"1. ::after\"></a>1. ::after</h4><p>伪元素 ::after 能够在指定元素的后面插入一些内容，在 ::after 中需要使用 content 属性来定义要追加的内容，而且在 ::after 中必须定义 content 属性才会生效（没有需要插入的内容时可以将 content 属性的值定义为空<code>&quot;&quot;</code>）。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n        <span class=\"token selector\">p.one::after</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">content</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token selector\">p.two::after</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">content</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"要插入的内容\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 6px<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token selector\">p.three::after</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'./smiley.gif'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>伪元素 ::after<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>two<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>伪元素 ::after<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>three<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>伪元素 ::after<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/imgforTeachingDemo/202203310845936.png\" alt=\"image-20220318094953912\"></p>\n<h4 id=\"2-before\"><a href=\"#2-before\" class=\"headerlink\" title=\"2. ::before\"></a>2. ::before</h4><p>伪元素 ::before 能够在指定元素的前面插入一些内容。与 ::after 相似，::before 中也需要使用 content 属性来定义要追加的内容，而且在 ::before 中必须定义 content 属性才会生效（没有需要插入的内容时可以将 content 属性的值定义为空<code>&quot;&quot;</code>）。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n        <span class=\"token selector\">p.one::before</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">content</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token selector\">p.two::before</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">content</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"要插入的内容\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 6px<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token selector\">p.three::before</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'./smiley.gif'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>伪元素 ::before<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>two<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>伪元素 ::before<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>three<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>伪元素 ::before<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/imgforTeachingDemo/202203310845792.png\" alt=\"image-20220318095327303\"></p>\n<h4 id=\"3-first-letter\"><a href=\"#3-first-letter\" class=\"headerlink\" title=\"3. ::first-letter\"></a>3. ::first-letter</h4><p>伪元素 ::first-letter 用来设置指定元素中内容第一个字符的样式，通常用来配合 font-size 和 float 属性制作首字下沉效果。需要注意的是，伪元素 ::first-letter 仅可以用于块级元素，行内元素想要使用该伪元素，则需要先将其转换为块级元素。</p>\n<p>下面通过示例来演示伪元素 ::first-letter 的使用：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n        <span class=\"token selector\">p::first-letter</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2em<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>伪元素 ::first-letter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/imgforTeachingDemo/202203310845237.png\" alt=\"image-20220318095418822\"></p>\n<h4 id=\"4-first-line\"><a href=\"#4-first-line\" class=\"headerlink\" title=\"4. ::first-line\"></a>4. ::first-line</h4><p>伪元素 ::first-line 用来设置指定元素中内容第一行的样式，与 ::first-letter 类似，伪元素 ::first-line 也仅可以用于块级元素，行内元素想要使用该伪元素，则需要先将其转换为块级元素。</p>\n<p>下面通过示例来演示伪元素 ::first-line 的使用：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n        <span class=\"token selector\">p::first-line</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.5em<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>伪元素 ::first-line 用来设置指定元素中内容第一行的样式，与 ::first-letter 类似，伪元素 ::first-line 也仅可以用于块级元素，行内元素想要使用该伪元素，则需要先将其转换为块级元素。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/imgforTeachingDemo/202203310845290.png\" alt=\"image-20220318095501603\"></p>\n<h4 id=\"5-selection\"><a href=\"#5-selection\" class=\"headerlink\" title=\"5. ::selection\"></a>5. ::selection</h4><p>伪元素 ::selection 用来设置对象被选中时的样式，需要注意的是，伪元素 ::selection 中只能定义元素被选中时的 color、background、cursor、outline 以及 text-shadow（IE11 尚不支持定义该属性）等属性。</p>\n<p>下面通过示例来演示伪元素 ::selection 的使用：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n        <span class=\"token selector\">p::selection</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n            <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #CCC<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>伪元素 ::selection 用来设置对象被选中时的样式，需要注意的是，伪元素 ::selection 中只能定义元素被选中时的 color、background、cursor、outline 以及 text-shadow（IE11 尚不支持定义该属性）等属性。 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>运行结果如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/imgforTeachingDemo/202203310846862.gif\" alt=\"伪元素 ::selection 的使用\"><br>图：伪元素 ::selection 的使用</p>\n<h4 id=\"6-placeholder\"><a href=\"#6-placeholder\" class=\"headerlink\" title=\"6. ::placeholder\"></a>6. ::placeholder</h4><p>伪元素 ::placeholder 用来设置表单元素（input、textarea 元素）的占位文本（通过 HTML 的 placeholder 属性设置的文本），示例代码如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;style&gt;\n        input.text::placeholder&#123;\n            color: red;\n            background-color: #CCC;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;input placeholder&#x3D;&quot;请输入一段文本&quot;&gt;未使用伪元素 ::placeholder&lt;br&gt;\n    &lt;input placeholder&#x3D;&quot;请输入一段文本&quot; class&#x3D;&quot;text&quot;&gt;使用伪元素 ::placeholder 的效果\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>运行结果如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wkif/imgforTeachingDemo/202203310846269.gif\" alt=\"伪元素 ::placeholder 的使用\"></p>\n<h3 id=\"4、圆角\"><a href=\"#4、圆角\" class=\"headerlink\" title=\"4、圆角\"></a>4、圆角</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">border-radius<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"5、浮动和清除浮动\"><a href=\"#5、浮动和清除浮动\" class=\"headerlink\" title=\"5、浮动和清除浮动\"></a>5、<strong>浮动和清除浮动</strong></h3><h4 id=\"清除浮动\"><a href=\"#清除浮动\" class=\"headerlink\" title=\"清除浮动:\"></a>清除浮动:</h4><ul>\n<li>父元素内联块元素 inline-block</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">.father&#123;\n display:inline-block\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"6、固定定位\"><a href=\"#6、固定定位\" class=\"headerlink\" title=\"6、固定定位\"></a>6、固定定位</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">position:fixed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h3 id=\"7、CSS单位（一）\"><a href=\"#7、CSS单位（一）\" class=\"headerlink\" title=\"7、CSS单位（一）\"></a>7、<strong>CSS单位（一）</strong></h3><h4 id=\"em和rem\"><a href=\"#em和rem\" class=\"headerlink\" title=\"em和rem\"></a>em和rem</h4><p>简单的说</p>\n<ul>\n<li><strong>em:</strong> 就是字体大小，根据元素自身的字体大小来定，如果自身没有定义字体大小，则继承父元素的字体大小，即1em &#x3D; 1 font-size;</li>\n<li><strong>rem:</strong> 和em差不多，可以看成是root-em，是根据根元素的字体大小来定义的，即html设置的字体大小来定义，默认html的字体大小是16px；</li>\n</ul>\n<h3 id=\"8、继承相关\"><a href=\"#8、继承相关\" class=\"headerlink\" title=\"8、继承相关\"></a>8、继承相关</h3><p>css的继承：就是给父级设置一些属性，子级继承了父级的该属性，这就是我们的css中的继承。 官方解释，继承是一种规则，它允许样式不仅应用于特定的html标签元素，而且应用于其后代元素。</p>\n<p><strong>无继承性的属性</strong></p>\n<p>1、display：规定元素应该生成的框的类型</p>\n<p>2、文本属性：</p>\n<p>vertical-align：垂直文本对齐</p>\n<p>text-decoration：规定添加到文本的装饰</p>\n<p>text-shadow：文本阴影效果</p>\n<p>white-space：空白符的处理</p>\n<p>unicode-bidi：设置文本的方向</p>\n<p>3、盒子模型的属性：width、height、margin 、margin-top、margin-right、margin-bottom、margin-left、border、 border-style、border-top-style、border-right-style、border-bottom-style、border-left-style、border-width、border-top-width、border-right-right、border-bottom-width、border-left-width、border-color、border-top-color、border-right-color、border-bottom-color、border-left-color、border-top、border-right、border-bottom、border-left、padding、padding-top、padding-right、padding-bottom、padding-left</p>\n<p>4、背景属性：background、background-color、background-image、background-repeat、background-position、background-attachment</p>\n<p>5、定位属性：float、clear、position、top、right、bottom、left、min-width、min-height、max-width、max-height、overflow、clip、z-index</p>\n<p>6、生成内容属性：content、counter-reset、counter-increment</p>\n<p>7、轮廓样式属性：outline-style、outline-width、outline-color、outline</p>\n<p>8、页面样式属性：size、page-break-before、page-break-after</p>\n<p>9、声音样式属性：pause-before、pause-after、pause、cue-before、cue-after、cue、play-during</p>\n<p><strong>有继承性的属性</strong></p>\n<p>1、字体系列属性</p>\n<p>font：组合字体</p>\n<p>font-family：规定元素的字体系列</p>\n<p>font-weight：设置字体的粗细</p>\n<p>font-size：设置字体的尺寸</p>\n<p>font-style：定义字体的风格</p>\n<p>font-variant：设置小型大写字母的字体显示文本，这意味着所有的小写字母均会被转换为大写，但是所有使用小型大写 字体的字母与其余文本相比，其字体尺寸更小。</p>\n<p>font-stretch：对当前的 font-family 进行伸缩变形。所有主流浏览器都不支持。</p>\n<p>font-size-adjust：为某个元素规定一个 aspect 值，这样就可以保持首选字体的 x-height。</p>\n<p>2、文本系列属性</p>\n<p>text-indent：文本缩进</p>\n<p>text-align：文本水平对齐</p>\n<p>line-height：行高</p>\n<p>word-spacing：增加或减少单词间的空白（即字间隔）</p>\n<p>letter-spacing：增加或减少字符间的空白（字符间距）</p>\n<p>text-transform：控制文本大小写</p>\n<p>direction：规定文本的书写方向</p>\n<p>color：文本颜色 a元素除外</p>\n<p>3、元素可见性：visibility</p>\n<p>4、表格布局属性：caption-side、border-collapse、border-spacing、empty-cells、table-layout</p>\n<p>5、列表布局属性：list-style-type、list-style-image、list-style-position、list-style</p>\n<p>6、生成内容属性：quotes</p>\n<p>7、光标属性：cursor</p>\n<p>8、页面样式属性：page、page-break-inside、windows、orphans</p>\n<p>9、声音样式属性：speak、speak-punctuation、speak-numeral、speak-header、speech-rate、volume、voice-family、 pitch、pitch-range、stress、richness、、azimuth、elevation</p>\n<p><strong>所有元素可以继承的属性</strong></p>\n<p>1、元素可见性：visibility</p>\n<p>2、光标属性：cursor</p>\n<p><strong>内联元素可以继承的属性</strong></p>\n<p>1、字体系列属性</p>\n<p>2、除text-indent、text-align之外的文本系列属性</p>\n<p><strong>块级元素可以继承的属性</strong></p>\n<p>1、text-indent、text-align</p>\n<h3 id=\"9、css预处理工具\"><a href=\"#9、css预处理工具\" class=\"headerlink\" title=\"9、css预处理工具\"></a>9、css预处理工具</h3><p><strong>参考答案</strong>：</p>\n<p><strong>CSS 预处理器</strong>是一个能让你通过预处理器自己独有的语法来生成CSS的程序。</p>\n<p>css预处理器种类繁多，三种主流css预处理器是Less、Sass（Scss）及Stylus；它们各自的背景如下:</p>\n<p>Sass：</p>\n<p>2007年诞生，最早也是最成熟的CSS预处理器，拥有ruby社区的支持和compass这一最强大的css框架，目前受LESS影响，已经进化到了全面兼容CSS的SCSS（SCSS 需要使用分号和花括号而不是换行和缩进）。</p>\n<p>Less：</p>\n<p>2009年出现，受SASS的影响较大，但又使用CSS的语法，让大部分开发者和设计师更容易上手，在ruby社区之外支持者远超过SASS。其缺点是比起SASS来，可编程功能不够。优点是简单和兼容CSS，反过来也影响了SASS演变到了SCSS的时代，著名的Twitter Bootstrap就是采用LESS做底层语言的。</p>\n<p>Stylus：</p>\n<p>2010年产生，来自Node.js社区，主要用来给Node项目进行CSS预处理支持，在此社区之内有一定支持者，在广泛的意义上人气还完全不如SASS和LESS。</p>\n<p><strong>比较</strong></p>\n<p>在使用 CSS 预处理器之前最重要的是理解语法，幸运的是基本上大多数预处理器的语法跟 CSS 都差不多。</p>\n<p>首先 Sass 和 Less 都使用的是标准的 CSS 语法，因此如果可以很方便的将已有的 CSS 代码转为预处理器代码，默认 Sass 使用 .sass 扩展名，而 Less 使用 .less 扩展名。</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">h1</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0982C1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这是一个再普通不过的，不过 Sass 同时也支持老的语法，就是不包含花括号和分号的方式：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">h1\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0982c1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>而 Stylus 支持的语法要更多样性一点，它默认使用 .styl 的文件扩展名，下面是 Stylus 支持的语法</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/* style.styl */</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0982C1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/* omit brackets */</span>\nh1\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0982C1<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/* omit colons and semi-colons */</span>\nh1\ncolor #0982C1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以在同一个样式单中使用不同的变量，例如下面的写法也不会报错：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">h1</span> <span class=\"token punctuation\">&#123;</span>\n  color #0982c1\n<span class=\"token punctuation\">&#125;</span>\nh2\n<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.2em<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"10、行内元素和块级元素什么区别，然后怎么相互转换\"><a href=\"#10、行内元素和块级元素什么区别，然后怎么相互转换\" class=\"headerlink\" title=\"10、行内元素和块级元素什么区别，然后怎么相互转换\"></a>10、行内元素和块级元素什么区别，然后怎么相互转换</h3><p><strong>参考答案:</strong></p>\n<p><strong>块级元素</strong></p>\n<p>1.总是从新的一行开始，即各个块级元素独占一行，默认垂直向下排列；</p>\n<p>2.高度、宽度、margin及padding都是可控的，设置有效，有边距效果；</p>\n<p>3.宽度没有设置时，默认为100%；</p>\n<p>4.块级元素中可以包含块级元素和行内元素。</p>\n<p><strong>行内元素</strong></p>\n<p>1.和其他元素都在一行，即行内元素和其他行内元素都会在一条水平线上排列；</p>\n<p>2.高度、宽度是不可控的，设置无效，由内容决定。</p>\n<p>3.根据标签语义化的理念，行内元素最好只包含行内元素，不包含块级元素。</p>\n<p><strong>转换</strong></p>\n<p>当然块级元素与行内元素之间的特性是可以相互转换的。HTML可以将元素分为行内元素、块状元素和行内块状元素三种。</p>\n<p>使用display属性能够将三者任意转换：</p>\n<p>(1)display:inline;转换为行内元素；</p>\n<p>(2)display:block;转换为块状元素；</p>\n<p>(3)display:inline-block;转换为行内块状元素。</p>\n<h3 id=\"11、样式优先级\"><a href=\"#11、样式优先级\" class=\"headerlink\" title=\"11、样式优先级\"></a>11、样式优先级</h3><p><strong>参考答案</strong>：</p>\n<p>样式类型</p>\n<p>样式类型分为三类</p>\n<ol>\n<li>行间</li>\n</ol>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font-size:12px;color:#000;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>我的行间CSS样式。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>内联</li>\n</ol>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n   h1&#123;font-size:12px;\n      color:#000;\n      &#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>外部</li>\n</ol>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/style.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>选择器类型</p>\n<ul>\n<li>1、ID　　#id</li>\n<li>2、class　　.class</li>\n<li>3、标签　　p</li>\n<li>4、通用　　*</li>\n<li>5、属性　　[type&#x3D;”text”]</li>\n<li>6、伪类　　:hover</li>\n<li>7、伪元素　　::first-line</li>\n<li>8、子选择器、相邻选择器</li>\n</ul>\n<p>权重计算规则</p>\n<p>第一等：代表内联样式，如: style&#x3D;””，权值为1000。<br>第二等：代表ID选择器，如：#content，权值为0100。<br>第三等：代表类，伪类和属性选择器，如.content，权值为0010。<br>第四等：代表类型选择器和伪元素选择器，如div p，权值为0001。<br>通配符、子选择器、相邻选择器等的。如*、&gt;、+,权值为0000。<br>继承的样式没有权值。</p>\n<p>比较规则</p>\n<p>遵循如下法则：</p>\n<ul>\n<li>选择器都有一个权值，权值越大越优先；</li>\n<li>当权值相等时，后出现的样式表设置要优于先出现的样式表设置；</li>\n<li>创作者的规则高于浏览者：即网页编写者设置的 CSS 样式的优先权高于浏览器所设置的样式；</li>\n<li>继承的 CSS 样式不如后来指定的 CSS 样式；</li>\n<li>在同一组属性设置中标有!important规则的优先级最大</li>\n<li>通配符、子选择器、相邻选择器等的。虽然权值为0000，但是也比继承的样式优先。</li>\n</ul>\n<p>！important</p>\n<ol>\n<li>!important 的作用是提升优先级，换句话说。加了这句的样式的优先级是最高的（比内联样式的优先级还高)。</li>\n</ol>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span> \np&#123;\n    color:red !important;\n&#125; \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>color:blue;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>我显示红色<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>ie7+和别的浏览器对important的这种作用的支持度都很好。只有ie6有些bug</li>\n</ol>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">p<span class=\"token punctuation\">&#123;</span>\n      color<span class=\"token operator\">:</span>red <span class=\"token operator\">!</span>important<span class=\"token punctuation\">;</span>\n      color<span class=\"token operator\">:</span>blue<span class=\"token punctuation\">;</span>    \n <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//会显示blue</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>但是这并不说明ie6不支持important，只是支持上有些bug。看下面</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">p<span class=\"token punctuation\">&#123;</span>\n     color<span class=\"token operator\">:</span>red <span class=\"token operator\">!</span>important<span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>\np<span class=\"token punctuation\">&#123;</span>\n    color<span class=\"token operator\">:</span>blue<span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">//这样就会显示的是red。说明ie6还是支持important的。&lt;/pre></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"12、盒子塌陷是什么？\"><a href=\"#12、盒子塌陷是什么？\" class=\"headerlink\" title=\"12、盒子塌陷是什么？\"></a>12、盒子塌陷是什么？</h3><p><strong>参考答案：</strong></p>\n<p><strong>盒子塌陷</strong></p>\n<p>本应该在父盒子内部的元素跑到了外部。</p>\n<p>原因：</p>\n<p>当父元素没设置足够大小的时候，而子元素设置了浮动的属性，子元素就会跳出父元素的边界（脱离文档流），尤其是当父元素的高度为auto时，而父元素中又没有其它非浮动的可见元素时，父盒子的高度就会直接塌陷为零， 我们称这是<strong>CSS高度塌陷</strong>。</p>\n<p><strong>关于盒子塌陷的几种解决方法</strong></p>\n<p>（1）最简单，直接，粗暴的方法就是盒子大小写死，给每个盒子设<strong>定固定的width和height</strong>，直到合适为止，这样的好处是简单方便，兼容性好，适合只改动少量内容不涉及盒子排布的版面。缺点是非自适应，浏览器的窗口大小直接影响用户体验。</p>\n<p>（2）给外部的父盒子也添加浮动，让其也脱离标准文档流，这种方法方便，但是对页面的布局不是很友好，不易维护。</p>\n<p>（3）给父盒子添加overflow属性。</p>\n<p> overflow:auto; 有可能出现滚动条，影响美观。</p>\n<p> overflow:hidden; 可能会带来内容不可见的问题。</p>\n<p>（4）父盒子里最下方引入清除浮动块。最简单的有：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">clear</span><span class=\"token punctuation\">:</span>both<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>有很多人是这么解决的，但是我们并不推荐，因为其引入了不必要的冗余元素 。</p>\n<p> (5)用after伪元素清除浮动</p>\n<p>给外部盒子的after伪元素设置clear属性，再隐藏它</p>\n<p>这其实是对空盒子方案的改进，一种纯CSS的解决方案，不用引入冗余元素。</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.clearfix</span> <span class=\"token punctuation\">&#123;</span>*<span class=\"token property\">zoom</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.clearfix:before,.clearfix:after</span> <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token property\">display</span><span class=\"token punctuation\">:</span> table<span class=\"token punctuation\">;</span>\n\n<span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n\n<span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.clearfix:after</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> both<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这也是bootstrap框架采用的清除浮动的方法。</p>\n<p>这是一种纯CSS的解决浮动造成盒子塌陷方法，没有引入任何冗余元素，推荐使用此方法来解决CSS盒子塌陷。</p>\n<p>备注：第五种方法虽好，但是低版本IE不兼容，具体选择哪种解决方法，可根据实际情况决定。</p>\n<p>(6) 给父盒子添加border</p>\n<p>(7) 给父盒子设置padding-top</p>\n<h3 id=\"13、css-伪类与伪元素区别\"><a href=\"#13、css-伪类与伪元素区别\" class=\"headerlink\" title=\"13、css 伪类与伪元素区别\"></a>13、css 伪类与伪元素区别</h3><p><strong>参考答案</strong>：</p>\n<ol>\n<li>伪类(pseudo-classes)</li>\n</ol>\n<ul>\n<li>其核⼼就是⽤来选择DOM树之外的信息,不能够被普通选择器选择的⽂档之外的元素，⽤来添加⼀些选择器的特殊效果。</li>\n<li>⽐如:hover :active :visited :link :visited :first-child :focus :lang等</li>\n<li>由于状态的变化是⾮静态的，所以元素达到⼀个特定状态时，它可能得到⼀个伪类的样式；当状态改变时，它⼜会失去这个样式。</li>\n<li>由此可以看出，它的功能和class有些类似，但它是基于⽂档之外的抽象，所以叫 伪类。</li>\n</ul>\n<ol>\n<li>伪元素(Pseudo-elements)</li>\n</ol>\n<ul>\n<li>DOM树没有定义的虚拟元素</li>\n<li>核⼼就是需要创建通常不存在于⽂档中的元素，</li>\n<li>⽐如::before ::after 它选择的是元素指定内容，表示选择元素内容的之前内容或之后内容。</li>\n<li>伪元素控制的内容和元素是没有差别的，但是它本身只是基于元素的抽象，并不存在于⽂档中，所以称为伪元素。⽤于将特殊的效果添加到某些选择器</li>\n</ul>\n<ol>\n<li>伪类与伪元素的区别</li>\n</ol>\n<ul>\n<li>表示⽅法<ul>\n<li>CSS2 中伪类、伪元素都是以单冒号:表示,</li>\n<li>CSS2.1 后规定伪类⽤单冒号表示,伪元素⽤双冒号::表示，</li>\n<li>浏览器同样接受 CSS2 时代已经存在的伪元素(:before, :after, :first�line, :first-letter 等)的单冒号写法。</li>\n<li>CSS2 之后所有新增的伪元素(如::selection)，应该采⽤双冒号的写法。</li>\n<li>CSS3中，伪类与伪元素在语法上也有所区别，伪元素修改为以::开头。浏览器对以:开头的伪元素也继续⽀持，但建议规范书写为::开头</li>\n</ul>\n</li>\n<li>定义不同<ul>\n<li>伪类即假的类，可以添加类来达到效果</li>\n<li>伪元素即假元素，需要通过添加元素才能达到效果</li>\n</ul>\n</li>\n<li>总结:<ul>\n<li>伪类和伪元素都是⽤来表示⽂档树以外的”元素”。</li>\n<li>伪类和伪元素分别⽤单冒号:和双冒号::来表示。</li>\n<li>伪类和伪元素的区别，关键点在于如果没有伪元素(或伪类)，</li>\n<li>是否需要添加元素才能达到效果，如果是则是伪元素，反之则是伪类</li>\n<li>伪类和伪元素都不出现在源⽂件和DOM树中。也就是说在html源⽂件中是看不到伪类和伪元素的。</li>\n<li>伪类其实就是基于普通DOM元素⽽产⽣的不同状态，他是DOM元素的某⼀特征。</li>\n<li>伪元素能够创建在DOM树中不存在的抽象对象，⽽且这些抽象对象是能够访问到的。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"14、行内元素的margin-和-padding\"><a href=\"#14、行内元素的margin-和-padding\" class=\"headerlink\" title=\"14、行内元素的margin 和 padding\"></a>14、行内元素的margin 和 padding</h3><p><strong>参考答案：</strong></p>\n<ul>\n<li>水平方向：水平方向上，都有效；</li>\n<li>垂直方向：垂直方向上，都无效；（<code>padding-top</code> 和 <code>padding-bottom</code> 会显示出效果，但是高度不会撑开，不会对周围元素有影响）</li>\n</ul>\n<h3 id=\"15、min-width-x2F-max-width-和-min-height-x2F-max-height-属性间的覆盖规则？\"><a href=\"#15、min-width-x2F-max-width-和-min-height-x2F-max-height-属性间的覆盖规则？\" class=\"headerlink\" title=\"15、min-width&#x2F;max-width 和 min-height&#x2F;max-height 属性间的覆盖规则？\"></a>15、min-width&#x2F;max-width 和 min-height&#x2F;max-height 属性间的覆盖规则？</h3><p><strong>参考答案</strong>：</p>\n<ol>\n<li>max-width 会覆盖 width，即使 width 是行内样式或者设置了 !important。</li>\n<li>min-width 会覆盖 max-width，此规则发生在 min-width 和 max-width 冲突的时候；</li>\n</ol>\n<h3 id=\"16、未知高度元素垂直居中、水平居中的实现方式有哪些？\"><a href=\"#16、未知高度元素垂直居中、水平居中的实现方式有哪些？\" class=\"headerlink\" title=\"16、未知高度元素垂直居中、水平居中的实现方式有哪些？\"></a>16、未知高度元素垂直居中、水平居中的实现方式有哪些？</h3><p><strong>参考答案：</strong></p>\n<p><strong>1、绝对定位+css3 transform:translate(-50%，-50%)</strong></p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.wrap</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span>relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.child</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span>50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span>50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-transform</span><span class=\"token punctuation\">:</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">,</span>-50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>2、css3 的flex布局</strong></p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.wrap</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span>flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span>center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.child</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">align-self</span><span class=\"token punctuation\">:</span>center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>3、table布局</strong></p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">&lt;div class=\"wrap\">\n   &lt;div class=\"child\">\n          &lt;div>sadgsdgasgd&lt;/div>\n   &lt;/div>\n&lt;/div>\n.wrap</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span>table<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span>center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.child</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>#ccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span>table-cell<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">vertical-align</span><span class=\"token punctuation\">:</span>middle<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.child div</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span>300px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span>150px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>0 auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","feature":true,"text":"CSS1.css选择某一个 (CSS :first-child 选择器,CSS选择器——伪类选择器)q:请将html模块中ul列表的第2个li标签和第4个li标签的背景颜色设置成”rgb(255, 0, 0)”。 &lt;html> &lt;head> &lt;meta char...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":18,"path":"api/categories/学习笔记.json"},{"name":"前端","slug":"学习笔记/前端","count":3,"path":"api/categories/学习笔记/前端.json"}],"tags":[{"name":"CSS","slug":"CSS","count":1,"path":"api/tags/CSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CSS\"><span class=\"toc-text\">CSS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-css%E9%80%89%E6%8B%A9%E6%9F%90%E4%B8%80%E4%B8%AA-CSS-first-child-%E9%80%89%E6%8B%A9%E5%99%A8-CSS%E9%80%89%E6%8B%A9%E5%99%A8%E2%80%94%E2%80%94%E4%BC%AA%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8\"><span class=\"toc-text\">1.css选择某一个 (CSS :first-child 选择器,CSS选择器——伪类选择器)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81CSS-%E8%BE%B9%E6%A1%86%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">2、CSS 边框属性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#border-style%E5%8F%AF%E8%83%BD%E7%9A%84%E5%80%BC\"><span class=\"toc-text\">border-style可能的值</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81-CSS%E9%80%89%E6%8B%A9%E5%99%A8%E2%80%94%E2%80%94%E4%BC%AA%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">3、 CSS选择器——伪元素</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-after\"><span class=\"toc-text\">1. ::after</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-before\"><span class=\"toc-text\">2. ::before</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-first-letter\"><span class=\"toc-text\">3. ::first-letter</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-first-line\"><span class=\"toc-text\">4. ::first-line</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-selection\"><span class=\"toc-text\">5. ::selection</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-placeholder\"><span class=\"toc-text\">6. ::placeholder</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E3%80%81%E5%9C%86%E8%A7%92\"><span class=\"toc-text\">4、圆角</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5%E3%80%81%E6%B5%AE%E5%8A%A8%E5%92%8C%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8\"><span class=\"toc-text\">5、浮动和清除浮动</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8\"><span class=\"toc-text\">清除浮动:</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6%E3%80%81%E5%9B%BA%E5%AE%9A%E5%AE%9A%E4%BD%8D\"><span class=\"toc-text\">6、固定定位</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7%E3%80%81CSS%E5%8D%95%E4%BD%8D%EF%BC%88%E4%B8%80%EF%BC%89\"><span class=\"toc-text\">7、CSS单位（一）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#em%E5%92%8Crem\"><span class=\"toc-text\">em和rem</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8%E3%80%81%E7%BB%A7%E6%89%BF%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">8、继承相关</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9%E3%80%81css%E9%A2%84%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">9、css预处理工具</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10%E3%80%81%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E5%92%8C%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%8C%E7%84%B6%E5%90%8E%E6%80%8E%E4%B9%88%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">10、行内元素和块级元素什么区别，然后怎么相互转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11%E3%80%81%E6%A0%B7%E5%BC%8F%E4%BC%98%E5%85%88%E7%BA%A7\"><span class=\"toc-text\">11、样式优先级</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12%E3%80%81%E7%9B%92%E5%AD%90%E5%A1%8C%E9%99%B7%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">12、盒子塌陷是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#13%E3%80%81css-%E4%BC%AA%E7%B1%BB%E4%B8%8E%E4%BC%AA%E5%85%83%E7%B4%A0%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">13、css 伪类与伪元素区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#14%E3%80%81%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E7%9A%84margin-%E5%92%8C-padding\"><span class=\"toc-text\">14、行内元素的margin 和 padding</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#15%E3%80%81min-width-x2F-max-width-%E5%92%8C-min-height-x2F-max-height-%E5%B1%9E%E6%80%A7%E9%97%B4%E7%9A%84%E8%A6%86%E7%9B%96%E8%A7%84%E5%88%99%EF%BC%9F\"><span class=\"toc-text\">15、min-width&#x2F;max-width 和 min-height&#x2F;max-height 属性间的覆盖规则？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#16%E3%80%81%E6%9C%AA%E7%9F%A5%E9%AB%98%E5%BA%A6%E5%85%83%E7%B4%A0%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E3%80%81%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F\"><span class=\"toc-text\">16、未知高度元素垂直居中、水平居中的实现方式有哪些？</span></a></li></ol></li></ol>","author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"webpack学习笔记","uid":"4524d999cf615adfc697a0734aafb525","slug":"webpack学习笔记","date":"2022-04-02T07:36:00.000Z","updated":"2022-04-24T10:29:50.086Z","comments":true,"path":"api/articles/webpack学习笔记.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/project/202204241829561.jpg","text":"学习中。。。 webpack为什么需要Webpack原始开发模式各种js文件引入，顺序不能乱，引入的数据太大，各种js之间有关联，可以考虑所有文件复制到一个js文件里，但又有作用域问题、文件太大、可维护性差 作用域问题：grunt和gulp两个工具来解决 方法：立即执行函数 ; ...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":18,"path":"api/categories/学习笔记.json"},{"name":"前端","slug":"学习笔记/前端","count":3,"path":"api/categories/学习笔记/前端.json"}],"tags":[{"name":"webpack","slug":"webpack","count":1,"path":"api/tags/webpack.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"重温前端-js篇","uid":"1c758d147c4078e17f7ecc45f0df48d9","slug":"重温前端-js篇","date":"2022-02-03T07:42:00.000Z","updated":"2022-04-24T10:29:24.530Z","comments":true,"path":"api/articles/重温前端-js篇.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/project/202204241829907.jpg","text":"Javascript1、JS中的instanceof运算符instanceof运算符用来判断一个构造函数的prototype属性所指向的对象是否存在另外一个要检测对象的原型链上 obj instanceof Object;&#x2F;&#x2F;true 实例obj在不在Obje...","link":"","photos":[],"count_time":{"symbolsCount":"78k","symbolsTime":"1:11"},"categories":[{"name":"学习笔记","slug":"学习笔记","count":18,"path":"api/categories/学习笔记.json"},{"name":"前端","slug":"学习笔记/前端","count":3,"path":"api/categories/学习笔记/前端.json"}],"tags":[{"name":"Javascript","slug":"Javascript","count":1,"path":"api/tags/Javascript.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"feature":true}}