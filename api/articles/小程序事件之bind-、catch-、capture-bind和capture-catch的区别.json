{"title":"小程序事件之bind 、catch 、capture-bind和capture-catch的区别","uid":"add7208ee63417129b8b6e45029f606b","slug":"小程序事件之bind-、catch-、capture-bind和capture-catch的区别","date":"2022-05-22T12:34:00.000Z","updated":"2022-05-22T12:38:33.970Z","comments":true,"path":"api/articles/小程序事件之bind-、catch-、capture-bind和capture-catch的区别.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/project/202205222038395.jpg","content":"<h1 id=\"小程序事件之bind-、catch-、capture-bind和capture-catch的区别\"><a href=\"#小程序事件之bind-、catch-、capture-bind和capture-catch的区别\" class=\"headerlink\" title=\"小程序事件之bind 、catch 、capture-bind和capture-catch的区别\"></a>小程序事件之bind 、catch 、capture-bind和capture-catch的区别</h1><h3 id=\"事件分类\"><a href=\"#事件分类\" class=\"headerlink\" title=\"事件分类\"></a>事件分类</h3><h4 id=\"事件分为冒泡事件和非冒泡事件\"><a href=\"#事件分为冒泡事件和非冒泡事件\" class=\"headerlink\" title=\"事件分为冒泡事件和非冒泡事件\"></a>事件分为冒泡事件和非冒泡事件</h4><ol>\n<li>冒泡事件：当一个组件上的事件被触发后，该事件会向父节点传递。</li>\n<li>非冒泡事件：当一个组件上的事件被触发后，该事件不会向父节点传递。</li>\n</ol>\n<p>事件的绑定：</p>\n<p>  bind和catch都是用来绑定事件的，与 <code>bind</code> 不同， <code>catch</code> 会阻止事件向上冒泡</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>outer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  outer view\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>middle<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">catchtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    middle view\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      inner view\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>上例中，点击 inner view 会先后调用<code>handleTap3</code>和<code>handleTap2</code>(因为tap事件会冒泡到 middle view，而 middle view 阻止了 tap 事件冒泡，不再向父节点传递)，点击 middle view 会触发<code>handleTap2</code>，点击 outer view 会触发<code>handleTap1</code></p>\n<h3 id=\"事件的捕获阶段\"><a href=\"#事件的捕获阶段\" class=\"headerlink\" title=\"事件的捕获阶段\"></a>事件的捕获阶段</h3><p> \\1. 事件是有两个阶段的：捕获阶段 和 冒泡阶段， 且捕获阶段位于冒泡阶段之前。</p>\n<p> \\2. 在捕获阶段中，事件到达节点的顺序与冒泡阶段恰好相反</p>\n<p> \\3. 在捕获阶段监听事件时，可以采用<code>capture-bind</code>、<code>capture-catch</code>关键字，后者将中断捕获阶段和取消冒泡阶段</p>\n<p> 示例：</p>\n<p>点击 inner view 会先后调用<code>handleTap2</code>、<code>handleTap4</code>、<code>handleTap3</code>、<code>handleTap1</code></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>outer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>touchstart</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">capture-bind:</span>touchstart</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  outer view\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>touchstart</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">capture-bind:</span>touchstart</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    inner view\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p> 如果把上面的代码改成如下，将只会触发<code>handleTap2</code></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>outer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>touchstart</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">capture-catch:</span>touchstart</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  outer view\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>touchstart</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">capture-bind:</span>touchstart</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    inner view\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<p>转载自：</p>\n<p><a href=\"https://www.cnblogs.com/hzhuxin/p/15074300.html\">https://www.cnblogs.com/hzhuxin/p/15074300.html</a></p>\n","text":"小程序事件之bind 、catch 、capture-bind和capture-catch的区别事件分类事件分为冒泡事件和非冒泡事件 冒泡事件：当一个组件上的事件被触发后，该事件会向父节点传递。 非冒泡事件：当一个组件上的事件被触发后，该事件不会向父节点传递。 事件的绑定： bi...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"微信小程序","slug":"微信小程序","count":4,"path":"api/tags/微信小程序.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%8B%E4%BB%B6%E4%B9%8Bbind-%E3%80%81catch-%E3%80%81capture-bind%E5%92%8Ccapture-catch%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">小程序事件之bind 、catch 、capture-bind和capture-catch的区别</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">事件分类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E5%88%86%E4%B8%BA%E5%86%92%E6%B3%A1%E4%BA%8B%E4%BB%B6%E5%92%8C%E9%9D%9E%E5%86%92%E6%B3%A1%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">事件分为冒泡事件和非冒泡事件</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E7%9A%84%E6%8D%95%E8%8E%B7%E9%98%B6%E6%AE%B5\"><span class=\"toc-text\">事件的捕获阶段</span></a></li></ol></li></ol></li></ol>","author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JS数组reduce()方法详解及高级技巧","uid":"0dd2f8e1d48b223c2f63dbed14392a9e","slug":"JS数组reduce-方法详解及高级技巧","date":"2022-05-23T03:47:00.000Z","updated":"2022-10-14T06:35:46.942Z","comments":true,"path":"api/articles/JS数组reduce-方法详解及高级技巧.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforhexo/20201202142640.jpg","text":" reduce()方法可以搞定的东西，for循环，或者forEach方法有时候也可以搞定，那为啥要用reduce()？这个问题，之前我也想过，要说原因还真找不到，唯一能找到的是：通往成功的道路有很多，但是总有一条路是最捷径的，亦或许reduce()逼格更高… 1、语法arr.re...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":25,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"javascript","slug":"javascript","count":6,"path":"api/tags/javascript.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}}},"next_post":{"title":"Anim小程序开发框架","uid":"584a7ab2a96f920d35da32116b25c0f1","slug":"Anim小程序开发框架","date":"2022-05-22T12:33:00.000Z","updated":"2022-05-22T12:37:59.241Z","comments":true,"path":"api/articles/Anim小程序开发框架.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/project/202205222037059.png","text":"Anim小程序开发框架介绍Anim 框架是基于原生小程序 Mina 框架开发的，采用 rollup 打包，只需要引入 anim.js 即可快速使用。 特点： 基于小程序 runtime 的增强型开发框架，无需引入各类编译环境，开箱即用。 可兼容原生使用，无需对项目进行大改，按需使...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}}}}