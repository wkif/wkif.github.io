{"title":"dom-to-image失真，修改生成后的清晰度","uid":"3f32563c24cbde8ea976a8241cdeca0d","slug":"dom-to-image失真，修改生成后的清晰度","date":"2022-10-12T23:02:00.000Z","updated":"2022-10-12T23:13:40.137Z","comments":true,"path":"api/articles/dom-to-image失真，修改生成后的清晰度.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/project/202204192117290.jpg","content":"<h2 id=\"背景：\"><a href=\"#背景：\" class=\"headerlink\" title=\"背景：\"></a>背景：</h2><p>项目中遇到了网页截图的场景，开始使用了html2canvas ，本地一切都好，但正式环境中出现问题，dom中有图片，以为是这些图片跨域，最后按照解决办法也不行；再后来又看到是dom要设置宽高，但试过依旧不可以。最终换个库来实现需求</p>\n<h2 id=\"dom-to-image\"><a href=\"#dom-to-image\" class=\"headerlink\" title=\"dom-to-image\"></a>dom-to-image</h2><p>github: <a href=\"https://github.com/tsayen/dom-to-image\">https://github.com/tsayen/dom-to-image</a></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>后来发现了基于此库的新项目 dom-to-image-more（<a href=\"https://www.npmjs.com/package/dom-to-image-more%EF%BC%89\">https://www.npmjs.com/package/dom-to-image-more）</a></p></blockquote>\n<h2 id=\"改造\"><a href=\"#改造\" class=\"headerlink\" title=\"改造\"></a>改造</h2><p>项目中使用发现清晰度有点低，客户也指出来，但这个库貌似并没有相关配置可以实现，无奈只得开始对其进行修改</p>\n<h2 id=\"文件替换\"><a href=\"#文件替换\" class=\"headerlink\" title=\"文件替换\"></a>文件替换</h2><p>文件路径： node_modules\\dom-to-image\\src\\dom-to-image.js</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">global</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> util <span class=\"token operator\">=</span> <span class=\"token function\">newUtil</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> inliner <span class=\"token operator\">=</span> <span class=\"token function\">newInliner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> fontFaces <span class=\"token operator\">=</span> <span class=\"token function\">newFontFaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> images <span class=\"token operator\">=</span> <span class=\"token function\">newImages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Default impl options</span>\n    <span class=\"token keyword\">var</span> defaultOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Default is to fail on error, no placeholder</span>\n        <span class=\"token literal-property property\">imagePlaceholder</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Default cache bust is false, it will use the cache</span>\n        <span class=\"token literal-property property\">cacheBust</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> domtoimage <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">toSvg</span><span class=\"token operator\">:</span> toSvg<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">toPng</span><span class=\"token operator\">:</span> toPng<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">toJpeg</span><span class=\"token operator\">:</span> toJpeg<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">toBlob</span><span class=\"token operator\">:</span> toBlob<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">toPixelData</span><span class=\"token operator\">:</span> toPixelData<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">impl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">fontFaces</span><span class=\"token operator\">:</span> fontFaces<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">images</span><span class=\"token operator\">:</span> images<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">util</span><span class=\"token operator\">:</span> util<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">inliner</span><span class=\"token operator\">:</span> inliner<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> module <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span>\n        module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> domtoimage<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n        global<span class=\"token punctuation\">.</span>domtoimage <span class=\"token operator\">=</span> domtoimage<span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\">/**\n     * @param &#123;Node&#125; node - The DOM Node object to render\n     * @param &#123;Object&#125; options - Rendering options\n     * @param &#123;Function&#125; options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param &#123;String&#125; options.bgcolor - color for the background, any valid CSS color value.\n     * @param &#123;Number&#125; options.width - width to be applied to node before rendering.\n     * @param &#123;Number&#125; options.height - height to be applied to node before rendering.\n     * @param &#123;Object&#125; options.style - an object whose properties to be copied to node's style before rendering.\n     * @param &#123;Number&#125; options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param &#123;String&#125; options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param &#123;Boolean&#125; options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return &#123;Promise&#125; - A promise that is fulfilled with a SVG image data URL\n     * */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">toSvg</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        options <span class=\"token operator\">=</span> options <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">copyOptions</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">cloneNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>embedFonts<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>inlineImages<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>applyOptions<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">clone</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">makeSvgDataUri</span><span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">,</span>\n                    options<span class=\"token punctuation\">.</span>width <span class=\"token operator\">||</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    options<span class=\"token punctuation\">.</span>height <span class=\"token operator\">||</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">applyOptions</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">clone</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>bgcolor<span class=\"token punctuation\">)</span> clone<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>bgcolor<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span> clone<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span> clone<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>height <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">)</span>\n                Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">property</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    clone<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> clone<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @param &#123;Node&#125; node - The DOM Node object to render\n     * @param &#123;Object&#125; options - Rendering options, @see &#123;@link toSvg&#125;\n     * @return &#123;Promise&#125; - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">toPixelData</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> options <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">canvas</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                    util<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    util<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @param &#123;Node&#125; node - The DOM Node object to render\n     * @param &#123;Object&#125; options - Rendering options, @see &#123;@link toSvg&#125;\n     * @return &#123;Promise&#125; - A promise that is fulfilled with a PNG image data URL\n     * */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">toPng</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> options <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">canvas</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @param &#123;Node&#125; node - The DOM Node object to render\n     * @param &#123;Object&#125; options - Rendering options, @see &#123;@link toSvg&#125;\n     * @return &#123;Promise&#125; - A promise that is fulfilled with a JPEG image data URL\n     * */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">toJpeg</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        options <span class=\"token operator\">=</span> options <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">canvas</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>quality <span class=\"token operator\">||</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @param &#123;Node&#125; node - The DOM Node object to render\n     * @param &#123;Object&#125; options - Rendering options, @see &#123;@link toSvg&#125;\n     * @return &#123;Promise&#125; - A promise that is fulfilled with a PNG image blob\n     * */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">toBlob</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> options <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>util<span class=\"token punctuation\">.</span>canvasToBlob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">copyOptions</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Copy options to impl options for use in impl</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>imagePlaceholder<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            domtoimage<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>imagePlaceholder <span class=\"token operator\">=</span> defaultOptions<span class=\"token punctuation\">.</span>imagePlaceholder<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            domtoimage<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>imagePlaceholder <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>imagePlaceholder<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>cacheBust<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            domtoimage<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>cacheBust <span class=\"token operator\">=</span> defaultOptions<span class=\"token punctuation\">.</span>cacheBust<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            domtoimage<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>cacheBust <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>cacheBust<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">draw</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">domNode<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">toSvg</span><span class=\"token punctuation\">(</span>domNode<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>util<span class=\"token punctuation\">.</span>makeImage<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">image</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> <span class=\"token function\">newCanvas</span><span class=\"token punctuation\">(</span>domNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> canvas<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">newCanvas</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">domNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span>mozImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span>webkitImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span>msImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span>imageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> scale <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">||</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 默认值1</span>\n            canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span>domNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span>domNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>scale<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加了scale参数</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>bgcolor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>bgcolor<span class=\"token punctuation\">;</span>\n                ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">return</span> canvas<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">cloneNode</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> filter<span class=\"token punctuation\">,</span> root</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>root <span class=\"token operator\">&amp;&amp;</span> filter <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>makeNodeCopy<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">clone</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">cloneChildren</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> clone<span class=\"token punctuation\">,</span> filter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">clone</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">processClone</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> clone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">makeNodeCopy</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLCanvasElement</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">makeImage</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">cloneNode</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">cloneChildren</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">original<span class=\"token punctuation\">,</span> clone<span class=\"token punctuation\">,</span> filter</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> children <span class=\"token operator\">=</span> original<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token function\">cloneChildrenInOrder</span><span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">,</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">asArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> filter<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">return</span> clone<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">cloneChildrenInOrder</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parent<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">,</span> filter</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">var</span> done <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">child</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    done <span class=\"token operator\">=</span> done\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token keyword\">return</span> <span class=\"token function\">cloneNode</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> filter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">childClone</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childClone<span class=\"token punctuation\">)</span> parent<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>childClone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> done<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">processClone</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">original<span class=\"token punctuation\">,</span> clone</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>clone <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Element</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> clone<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>cloneStyle<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>clonePseudoElements<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>copyUserInput<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>fixSvg<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">return</span> clone<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">cloneStyle</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token function\">copyStyle</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>original<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> clone<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">function</span> <span class=\"token function\">copyStyle</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">source<span class=\"token punctuation\">,</span> target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span>cssText<span class=\"token punctuation\">)</span> target<span class=\"token punctuation\">.</span>cssText <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span>cssText<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">else</span> <span class=\"token function\">copyProperties</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">function</span> <span class=\"token function\">copyProperties</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">source<span class=\"token punctuation\">,</span> target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        util<span class=\"token punctuation\">.</span><span class=\"token function\">asArray</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            target<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span>\n                                name<span class=\"token punctuation\">,</span>\n                                source<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyValue</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                source<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyPriority</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">clonePseudoElements</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token punctuation\">[</span><span class=\"token string\">':before'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">':after'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token function\">clonePseudoElement</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">function</span> <span class=\"token function\">clonePseudoElement</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">var</span> style <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>original<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">var</span> content <span class=\"token operator\">=</span> style<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>content <span class=\"token operator\">===</span> <span class=\"token string\">''</span> <span class=\"token operator\">||</span> content <span class=\"token operator\">===</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> className <span class=\"token operator\">=</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">uid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    clone<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> clone<span class=\"token punctuation\">.</span>className <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> className<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">var</span> styleElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    styleElement<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token function\">formatPseudoElementStyle</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    clone<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>styleElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">function</span> <span class=\"token function\">formatPseudoElementStyle</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">className<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">,</span> style</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">var</span> selector <span class=\"token operator\">=</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> className <span class=\"token operator\">+</span> <span class=\"token string\">':'</span> <span class=\"token operator\">+</span> element<span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">var</span> cssText <span class=\"token operator\">=</span> style<span class=\"token punctuation\">.</span>cssText <span class=\"token operator\">?</span> <span class=\"token function\">formatCssText</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">formatCssProperties</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">return</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>selector <span class=\"token operator\">+</span> <span class=\"token string\">'&#123;'</span> <span class=\"token operator\">+</span> cssText <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">function</span> <span class=\"token function\">formatCssText</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">style</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token keyword\">var</span> content <span class=\"token operator\">=</span> style<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">return</span> style<span class=\"token punctuation\">.</span>cssText <span class=\"token operator\">+</span> <span class=\"token string\">' content: '</span> <span class=\"token operator\">+</span> content <span class=\"token operator\">+</span> <span class=\"token string\">';'</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span>\n\n                        <span class=\"token keyword\">function</span> <span class=\"token function\">formatCssProperties</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">style</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n                            <span class=\"token keyword\">return</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">asArray</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>formatProperty<span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'; '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">';'</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token keyword\">function</span> <span class=\"token function\">formatProperty</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                                <span class=\"token keyword\">return</span> name <span class=\"token operator\">+</span> <span class=\"token string\">': '</span> <span class=\"token operator\">+</span>\n                                    style<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyValue</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n                                    <span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyPriority</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">' !important'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">&#125;</span>\n                        <span class=\"token punctuation\">&#125;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">copyUserInput</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>original <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLTextAreaElement</span><span class=\"token punctuation\">)</span> clone<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> original<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>original <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLInputElement</span><span class=\"token punctuation\">)</span> clone<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span> original<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">fixSvg</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>clone <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">SVGElement</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                clone<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xmlns'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.w3.org/2000/svg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>clone <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">SVGRectElement</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">[</span><span class=\"token string\">'width'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'height'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">attribute</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> clone<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span>attribute<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n                    clone<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span>attribute<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">embedFonts</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> fontFaces<span class=\"token punctuation\">.</span><span class=\"token function\">resolveAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cssText</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">var</span> styleNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>styleNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                styleNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>cssText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">inlineImages</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> images<span class=\"token punctuation\">.</span><span class=\"token function\">inlineAll</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">makeSvgDataUri</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                node<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xmlns'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.w3.org/1999/xhtml'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLSerializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">serializeToString</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>util<span class=\"token punctuation\">.</span>escapeXhtml<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">xhtml</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">'&lt;foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">'</span> <span class=\"token operator\">+</span> xhtml <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/foreignObject>'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">foreignObject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">'&lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"'</span> <span class=\"token operator\">+</span> width <span class=\"token operator\">+</span> <span class=\"token string\">'\" height=\"'</span> <span class=\"token operator\">+</span> height <span class=\"token operator\">+</span> <span class=\"token string\">'\">'</span> <span class=\"token operator\">+</span>\n                    foreignObject <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/svg>'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">svg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">'data:image/svg+xml;charset=utf-8,'</span> <span class=\"token operator\">+</span> svg<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">newUtil</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">escape</span><span class=\"token operator\">:</span> escape<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">parseExtension</span><span class=\"token operator\">:</span> parseExtension<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">mimeType</span><span class=\"token operator\">:</span> mimeType<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">dataAsUrl</span><span class=\"token operator\">:</span> dataAsUrl<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">isDataUrl</span><span class=\"token operator\">:</span> isDataUrl<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">canvasToBlob</span><span class=\"token operator\">:</span> canvasToBlob<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">resolveUrl</span><span class=\"token operator\">:</span> resolveUrl<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">getAndEncode</span><span class=\"token operator\">:</span> getAndEncode<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">uid</span><span class=\"token operator\">:</span> <span class=\"token function\">uid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> delay<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">asArray</span><span class=\"token operator\">:</span> asArray<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">escapeXhtml</span><span class=\"token operator\">:</span> escapeXhtml<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">makeImage</span><span class=\"token operator\">:</span> makeImage<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> width<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> height\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">mimes</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">/*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */</span>\n            <span class=\"token keyword\">var</span> <span class=\"token constant\">WOFF</span> <span class=\"token operator\">=</span> <span class=\"token string\">'application/font-woff'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> <span class=\"token constant\">JPEG</span> <span class=\"token operator\">=</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token string-property property\">'woff'</span><span class=\"token operator\">:</span> <span class=\"token constant\">WOFF</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string-property property\">'woff2'</span><span class=\"token operator\">:</span> <span class=\"token constant\">WOFF</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string-property property\">'ttf'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/font-truetype'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string-property property\">'eot'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/vnd.ms-fontobject'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string-property property\">'png'</span><span class=\"token operator\">:</span> <span class=\"token string\">'image/png'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string-property property\">'jpg'</span><span class=\"token operator\">:</span> <span class=\"token constant\">JPEG</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string-property property\">'jpeg'</span><span class=\"token operator\">:</span> <span class=\"token constant\">JPEG</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string-property property\">'gif'</span><span class=\"token operator\">:</span> <span class=\"token string\">'image/gif'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string-property property\">'tiff'</span><span class=\"token operator\">:</span> <span class=\"token string\">'image/tiff'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string-property property\">'svg'</span><span class=\"token operator\">:</span> <span class=\"token string\">'image/svg+xml'</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">parseExtension</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> match <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.([^\\.\\/]*?)$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> match<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">mimeType</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> extension <span class=\"token operator\">=</span> <span class=\"token function\">parseExtension</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">mimes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>extension<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">isDataUrl</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> url<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(data:)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">toBlob</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">canvas</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">var</span> binaryString <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">atob</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> length <span class=\"token operator\">=</span> binaryString<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> binaryArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                    binaryArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> binaryString<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>binaryArray<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'image/png'</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">canvasToBlob</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">canvas</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>toBlob<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toBlob</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token function\">toBlob</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">resolveUrl</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> baseUrl</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> doc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>implementation<span class=\"token punctuation\">.</span><span class=\"token function\">createHTMLDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> base <span class=\"token operator\">=</span> doc<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            doc<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> doc<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            doc<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            base<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> baseUrl<span class=\"token punctuation\">;</span>\n            a<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">uid</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">'u'</span> <span class=\"token operator\">+</span> <span class=\"token function\">fourRandomChars</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">function</span> <span class=\"token function\">fourRandomChars</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">/* see http://stackoverflow.com/a/6248722/2519373 */</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'0000'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">makeImage</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">uri</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">var</span> image <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                image<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n                image<span class=\"token punctuation\">.</span>onerror <span class=\"token operator\">=</span> reject<span class=\"token punctuation\">;</span>\n                image<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> uri<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">getAndEncode</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> <span class=\"token constant\">TIMEOUT</span> <span class=\"token operator\">=</span> <span class=\"token number\">30000</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>domtoimage<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>cacheBust<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// Cache bypass so we dont have CORS issues with cached images</span>\n                <span class=\"token comment\">// Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache</span>\n                url <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\?</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"&amp;\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"?\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                request<span class=\"token punctuation\">.</span>onreadystatechange <span class=\"token operator\">=</span> done<span class=\"token punctuation\">;</span>\n                request<span class=\"token punctuation\">.</span>ontimeout <span class=\"token operator\">=</span> timeout<span class=\"token punctuation\">;</span>\n                request<span class=\"token punctuation\">.</span>responseType <span class=\"token operator\">=</span> <span class=\"token string\">'blob'</span><span class=\"token punctuation\">;</span>\n                request<span class=\"token punctuation\">.</span>timeout <span class=\"token operator\">=</span> <span class=\"token constant\">TIMEOUT</span><span class=\"token punctuation\">;</span>\n                request<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                request<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> placeholder<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>domtoimage<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>imagePlaceholder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">var</span> split <span class=\"token operator\">=</span> domtoimage<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>imagePlaceholder<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">,</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>split <span class=\"token operator\">&amp;&amp;</span> split<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        placeholder <span class=\"token operator\">=</span> split<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n\n                <span class=\"token keyword\">function</span> <span class=\"token function\">done</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">!==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>status <span class=\"token operator\">!==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>placeholder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>placeholder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cannot fetch resource: '</span> <span class=\"token operator\">+</span> url <span class=\"token operator\">+</span> <span class=\"token string\">', status: '</span> <span class=\"token operator\">+</span> request<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span>\n\n                        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n\n                    <span class=\"token keyword\">var</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    encoder<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onloadend</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">var</span> content <span class=\"token operator\">=</span> encoder<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">,</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n                    encoder<span class=\"token punctuation\">.</span><span class=\"token function\">readAsDataURL</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n\n                <span class=\"token keyword\">function</span> <span class=\"token function\">timeout</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>placeholder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>placeholder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">'timeout of '</span> <span class=\"token operator\">+</span> <span class=\"token constant\">TIMEOUT</span> <span class=\"token operator\">+</span> <span class=\"token string\">'ms occured while fetching resource: '</span> <span class=\"token operator\">+</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n\n                <span class=\"token keyword\">function</span> <span class=\"token function\">fail</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">dataAsUrl</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">content<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'data:'</span> <span class=\"token operator\">+</span> type <span class=\"token operator\">+</span> <span class=\"token string\">';base64,'</span> <span class=\"token operator\">+</span> content<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">escape</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">([.*+?^$&#123;&#125;()|\\[\\]\\/\\\\])</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\$1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">delay</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ms</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">asArray</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arrayLike</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> length <span class=\"token operator\">=</span> arrayLike<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arrayLike<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> array<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">escapeXhtml</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">#</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'%23'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\n</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'%0A'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">width</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> leftBorder <span class=\"token operator\">=</span> <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token string\">'border-left-width'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> rightBorder <span class=\"token operator\">=</span> <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token string\">'border-right-width'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">.</span>scrollWidth <span class=\"token operator\">+</span> leftBorder <span class=\"token operator\">+</span> rightBorder<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">height</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> topBorder <span class=\"token operator\">=</span> <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token string\">'border-top-width'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> bottomBorder <span class=\"token operator\">=</span> <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token string\">'border-bottom-width'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">.</span>scrollHeight <span class=\"token operator\">+</span> topBorder <span class=\"token operator\">+</span> bottomBorder<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">px</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> styleProperty</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyValue</span><span class=\"token punctuation\">(</span>styleProperty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'px'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">newInliner</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> <span class=\"token constant\">URL_REGEX</span> <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">url\\(['\"]?([^'\"]+?)['\"]?\\)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">inlineAll</span><span class=\"token operator\">:</span> inlineAll<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">shouldProcess</span><span class=\"token operator\">:</span> shouldProcess<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">impl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token literal-property property\">readUrls</span><span class=\"token operator\">:</span> readUrls<span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">inline</span><span class=\"token operator\">:</span> inline\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">shouldProcess</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token constant\">URL_REGEX</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">readUrls</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> match<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>match <span class=\"token operator\">=</span> <span class=\"token constant\">URL_REGEX</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">isDataUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">inline</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> baseUrl<span class=\"token punctuation\">,</span> <span class=\"token keyword\">get</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">return</span> baseUrl <span class=\"token operator\">?</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">resolveUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> baseUrl<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> url<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>get <span class=\"token operator\">||</span> util<span class=\"token punctuation\">.</span>getAndEncode<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">return</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">dataAsUrl</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">mimeType</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dataUrl</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">return</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token function\">urlAsRegex</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$1'</span> <span class=\"token operator\">+</span> dataUrl <span class=\"token operator\">+</span> <span class=\"token string\">'$3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">urlAsRegex</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(url\\\\([\\'\"]?)('</span> <span class=\"token operator\">+</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">')([\\'\"]?\\\\))'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">inlineAll</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string<span class=\"token punctuation\">,</span> baseUrl<span class=\"token punctuation\">,</span> <span class=\"token keyword\">get</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">nothingToInline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>readUrls<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">urls</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">var</span> done <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    urls<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        done <span class=\"token operator\">=</span> done<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token keyword\">return</span> <span class=\"token function\">inline</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> baseUrl<span class=\"token punctuation\">,</span> get<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span> done<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">nothingToInline</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token function\">shouldProcess</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">newFontFaces</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">resolveAll</span><span class=\"token operator\">:</span> resolveAll<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">impl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token literal-property property\">readAll</span><span class=\"token operator\">:</span> readAll\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">resolveAll</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">readAll</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">webFonts</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>\n                        webFonts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">webFont</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token keyword\">return</span> webFont<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cssStrings</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">return</span> cssStrings<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">readAll</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">asArray</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>styleSheets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>getCssRules<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>selectWebFontRules<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">rules</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">return</span> rules<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>newWebFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">selectWebFontRules</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cssRules</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> cssRules\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">rule</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">return</span> rule<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> CSSRule<span class=\"token punctuation\">.</span><span class=\"token constant\">FONT_FACE_RULE</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">rule</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">return</span> inliner<span class=\"token punctuation\">.</span><span class=\"token function\">shouldProcess</span><span class=\"token punctuation\">(</span>rule<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">getCssRules</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">styleSheets</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">var</span> cssRules <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                styleSheets<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sheet</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                        util<span class=\"token punctuation\">.</span><span class=\"token function\">asArray</span><span class=\"token punctuation\">(</span>sheet<span class=\"token punctuation\">.</span>cssRules <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>cssRules<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>cssRules<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error while reading CSS rules from '</span> <span class=\"token operator\">+</span> sheet<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> cssRules<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">newWebFont</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">webFontRule</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token function-variable function\">resolve</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">resolve</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">var</span> baseUrl <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>webFontRule<span class=\"token punctuation\">.</span>parentStyleSheet <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">return</span> inliner<span class=\"token punctuation\">.</span><span class=\"token function\">inlineAll</span><span class=\"token punctuation\">(</span>webFontRule<span class=\"token punctuation\">.</span>cssText<span class=\"token punctuation\">,</span> baseUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token function-variable function\">src</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">return</span> webFontRule<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">newImages</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">inlineAll</span><span class=\"token operator\">:</span> inlineAll<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">impl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token literal-property property\">newImage</span><span class=\"token operator\">:</span> newImage\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">newImage</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token literal-property property\">inline</span><span class=\"token operator\">:</span> inline\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">inline</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">get</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">isDataUrl</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>get <span class=\"token operator\">||</span> util<span class=\"token punctuation\">.</span>getAndEncode<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">return</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">dataAsUrl</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">mimeType</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dataUrl</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            element<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> resolve<span class=\"token punctuation\">;</span>\n                            element<span class=\"token punctuation\">.</span>onerror <span class=\"token operator\">=</span> reject<span class=\"token punctuation\">;</span>\n                            element<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> dataUrl<span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">inlineAll</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Element</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token function\">inlineBackground</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLImageElement</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">return</span> <span class=\"token function\">newImage</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">else</span>\n                        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>\n                            util<span class=\"token punctuation\">.</span><span class=\"token function\">asArray</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">child</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                                <span class=\"token keyword\">return</span> <span class=\"token function\">inlineAll</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">inlineBackground</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">var</span> background <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'background'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>background<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> inliner<span class=\"token punctuation\">.</span><span class=\"token function\">inlineAll</span><span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">inlined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        node<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span>\n                            <span class=\"token string\">'background'</span><span class=\"token punctuation\">,</span>\n                            inlined<span class=\"token punctuation\">,</span>\n                            node<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyPriority</span><span class=\"token punctuation\">(</span><span class=\"token string\">'background'</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>在使用的地方直接添加参数</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 跳转到生成名片</span>\n  <span class=\"token function\">clickGeneratePictureBydomtoimage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clickGeneratePictureBydomtoimage'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> that<span class=\"token punctuation\">.</span>activeIndex<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> node <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mint-swipe-item\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">var</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span><span class=\"token number\">375</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 高度宽度自行设定</span>\n<span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span><span class=\"token number\">450</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span><span class=\"token number\">8</span>\n    <span class=\"token punctuation\">&#125;</span>  \n  domtoimage<span class=\"token punctuation\">.</span><span class=\"token function\">toPng</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dataUrl</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token comment\">//do something</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'oops, something went wrong!'</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<p><img src=\"https://s1.328888.xyz/2022/10/13/8Py3U.png\" alt=\"image-20221013145411712\"></p>\n","feature":true,"text":"背景：项目中遇到了网页截图的场景，开始使用了html2canvas ，本地一切都好，但正式环境中出现问题，dom中有图片，以为是这些图片跨域，最后按照解决办法也不行；再后来又看到是dom要设置宽高，但试过依旧不可以。最终换个库来实现需求 dom-to-imagegithub: h...","link":"","photos":[],"count_time":{"symbolsCount":"31k","symbolsTime":"28 mins."},"categories":[{"name":"Bug记录","slug":"Bug记录","count":1,"path":"api/categories/Bug记录.json"},{"name":"do1","slug":"Bug记录/do1","count":1,"path":"api/categories/Bug记录/do1.json"}],"tags":[{"name":"dom-to-image","slug":"dom-to-image","count":1,"path":"api/tags/dom-to-image.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%83%8C%E6%99%AF%EF%BC%9A\"><span class=\"toc-text\">背景：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#dom-to-image\"><span class=\"toc-text\">dom-to-image</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%94%B9%E9%80%A0\"><span class=\"toc-text\">改造</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E6%9B%BF%E6%8D%A2\"><span class=\"toc-text\">文件替换</span></a></li></ol>","author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"# Vue3  UI库/相关工具/可视化/生态全分享","uid":"9e59abb1a5821151a8ad4a565a244857","slug":"Vue3-UI库-相关工具-可视化-生态全分享","date":"2022-10-14T06:30:00.000Z","updated":"2022-10-14T06:34:19.270Z","comments":true,"path":"api/articles/Vue3-UI库-相关工具-可视化-生态全分享.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforhexo/202203310005873.jpg","text":"Vue3UI库&#x2F;相关工具&#x2F;可视化&#x2F;生态全分享技术胖整理分享 1.Web UI库1. ElementUI Plus一套为开发者、设计师和产品经理准备的基于 Vue 3.0 的桌面端组件库https://element-plus.org/zh-CN/ 2...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":23,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"vue3","slug":"vue3","count":3,"path":"api/tags/vue3.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"前端面试题目","uid":"4bd7150fd9e4dc678a3c2ce6062a159a","slug":"前端面试题目","date":"2022-03-31T00:42:00.000Z","updated":"2022-05-05T13:37:24.415Z","comments":true,"path":"api/articles/前端面试题目.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforhexo/202203310851324.jpg","text":"html基础1.自定义列表&lt;!DOCTYPE html> &lt;html lang=\"zh\"> &lt;head> &lt;meta charset=\"UTF-8\"> &lt;meta name=\"viewport\" content=\"width=device-width...","link":"","photos":[],"count_time":{"symbolsCount":"133k","symbolsTime":"2:01"},"categories":[],"tags":[{"name":"面试","slug":"面试","count":1,"path":"api/tags/面试.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"feature":true}}