{"title":"React系列：Rematch","uid":"12222745b624f54de1940113dfa4ed3d","slug":"React系列：Rematch","date":"2023-08-05T03:31:00.000Z","updated":"2023-08-09T03:13:22.235Z","comments":true,"path":"api/articles/React系列：Rematch.json","keywords":null,"cover":null,"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>link: <a href=\"https://rematchjs.org/\">https://rematchjs.org/</a></p>\n<p><a href=\"https://rematch.gitbook.io/handbook/\">https://rematch.gitbook.io/handbook/</a></p></blockquote>\n<p>Rematch是没有boilerplate的Redux最佳实践。没有多余的action types，action creators，switch 语句或者thunks。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">yarn add @rematch&#x2F;core<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>为了规范管理，建议将Rematch相关文件放到同一目录下（eg: models）</p>\n<h3 id=\"新建-model-ts\"><a href=\"#新建-model-ts\" class=\"headerlink\" title=\"新建 model.ts\"></a>新建 model.ts</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>此文件用来编写相同功能模块的state， reducers， async actions 和 action creators ，当模块过多，多个模块在同一个 models 文件时，不便于维护，所以此文件可以根据具体功能划分为多个models，例如：user.ts,book.ts等</p></blockquote>\n<pre class=\"line-numbers language-TS\" data-language=\"TS\"><code class=\"language-TS\">import &#123; createModel &#125; from &quot;@rematch&#x2F;core&quot;;\n\nexport const count &#x3D; createModel()(&#123;\n  state: 0, &#x2F;&#x2F; initial state\n  reducers: &#123;\n    &#x2F;&#x2F; handle state changes with pure functions\n    increment(state, payload: number) &#123;\n      return state + payload;\n    &#125;,\n  &#125;,\n  effects: (dispatch) &#x3D;&gt; (&#123;\n    &#x2F;&#x2F; handle state changes with impure functions.\n    &#x2F;&#x2F; use async&#x2F;await for async actions\n    async incrementAsync(payload: number, state) &#123;\n      console.log(&quot;This is current root state&quot;, state);\n      await new Promise((resolve) &#x3D;&gt; setTimeout(resolve, 1000));\n      dispatch.count.increment(payload);\n    &#125;,\n  &#125;),\n&#125;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>以上面这个官网的例子为例：每个Model 对象包含三个属性和方法：state，reducers，effects，其中 state 为初始state，reducers对象里面可以定义多个方法对state进行修改，对于需要异步修改state的情况，需要使用effects</p>\n<p>如对于一个维护用户登录信息的Model，可以像下面定义  Login.ts：</p>\n<pre class=\"line-numbers language-ts\" data-language=\"ts\"><code class=\"language-ts\">import &#123; createModel &#125; from &#39;@rematch&#x2F;core&#39;\nimport &#123; loginApi &#125; from &quot;..&#x2F;utils&#x2F;fetch&#x2F;login&quot;\n\nexport interface IAction &#123;\n  name: string,\n  pass: string,\n  callback?: Function\n&#125;\nexport const login &#x3D; createModel()(&#123;\n  name:&#39;login&#39;,\n  state: &#123;\n    userInfo: &#123;\n      name: &#39;kif&#39;\n    &#125;,\n    isLogin: false,\n    token: &#39;&#39;\n  &#125;, \n  reducers: &#123;\n    setUserInfo(state, payload: any) &#123;\n      return &#123; ...state, userInfo: payload &#125;\n    &#125;,\n    setlogin(state, playload: boolean) &#123;\n      return &#123; ...state, isLogin: playload &#125;\n    &#125;,\n    setToken(state, playload: string) &#123;\n      return &#123; ...state, token: playload &#125;\n    &#125;\n  &#125;,\n  effects: (dispatch) &#x3D;&gt; (&#123;\n    async login(payload: IAction, rootState) &#123;\n      const res &#x3D; await loginApi(payload)\n      console.log(&#39;effects login!!&#39;,res)\n      if(res.code&#x3D;&#x3D;&#x3D;200)&#123;\n        dispatch.login.setlogin(true)\n        dispatch.login.setToken(res.token)\n      &#125;\n    &#125;,\n  &#125;),\n&#125;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上面定义了 初始化state为一个对象：</p>\n<pre class=\"line-numbers language-ts\" data-language=\"ts\"><code class=\"language-ts\">state: &#123;\n   userInfo: &#123;\n     name: &#39;kif&#39;\n   &#125;,\n   isLogin: false,\n   token: &#39;&#39;\n &#125;, <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>包含三个状态量，分别有三个修改方法：setUserInfo，setlogin，setToken;一个异步修改方法 login，其中异步修改方法调用了两个修改函数；</p>\n<h3 id=\"新建-models-ts\"><a href=\"#新建-models-ts\" class=\"headerlink\" title=\"新建 models.ts\"></a>新建 models.ts</h3><p>注意区分此文件和上面的文件！对于可能存在的多个model，我们在这个models文件里面统一暴露出去。</p>\n<pre class=\"line-numbers language-ts\" data-language=\"ts\"><code class=\"language-ts\">import &#123; Models &#125; from &#39;@rematch&#x2F;core&#39;\nimport &#123; login &#125; from &#39;.&#x2F;login&#39;\nexport interface RootModel extends Models&lt;RootModel&gt; &#123;\n  login: typeof login\n&#125;\nexport const models: RootModel &#x3D; &#123;\n  login\n&#125;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>文件引入上面的login.ts 等model，并封装一个 RootModel类型和名为models对象， 之后RootModel类型可以在每一个model创建的时候进行类型规范，即：</p>\n<pre class=\"line-numbers language-ts\" data-language=\"ts\"><code class=\"language-ts\">import &#123; createModel &#125; from &#39;@rematch&#x2F;core&#39;\nimport &#123; RootModel &#125; from &#39;.&#x2F;modles&#39;\nexport const login &#x3D; createModel&lt;RootModel&gt;()(&#123;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"新建index-ts\"><a href=\"#新建index-ts\" class=\"headerlink\" title=\"新建index.ts\"></a>新建index.ts</h3><p>对于上面封装好的models，在此文件初始化</p>\n<pre class=\"line-numbers language-ts\" data-language=\"ts\"><code class=\"language-ts\">import &#123; init, RematchDispatch, RematchRootState &#125; from &#39;@rematch&#x2F;core&#39;;\nimport type &#123; RootModel &#125; from &#39;.&#x2F;modles&#39;;\nimport &#123; models &#125; from &#39;.&#x2F;modles&#39;;\n\nexport const store &#x3D; init(&#123;\n  models,\n&#125;)\nexport type Store &#x3D; typeof store\nexport type Dispatch &#x3D; RematchDispatch&lt;RootModel&gt;\nexport type RootState &#x3D; RematchRootState&lt;RootModel&gt;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>至此Rematch相关初始化工作就完成了，下面需要在tsx中使用。</p>\n<h3 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h3><p>在APP.tsx或者其他父级View上“注入”,例如下面APP.tsx</p>\n<pre class=\"line-numbers language-ts\" data-language=\"ts\"><code class=\"language-ts\">import React from &#39;react&#39;\nimport &#123; Provider &#125; from &#39;react-redux&#39;;\nimport &#123; store &#125; from &#39;.&#x2F;src&#x2F;models&#x2F;store&#39;;\n\nexport default function App() &#123;\n  return (\n      &lt;Provider store&#x3D;&#123;store&#125;&gt;\n        &lt;Navigator &#x2F;&gt;\n      &lt;&#x2F;Provider&gt;\n  )\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"访问state\"><a href=\"#访问state\" class=\"headerlink\" title=\"访问state\"></a>访问state</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">import &#123; store &#125; from &#39;.&#x2F;models&#x2F;store&#39;\nconst &#123;isLogin&#125; &#x3D; store.getStore().login<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"触发effects事件\"><a href=\"#触发effects事件\" class=\"headerlink\" title=\"触发effects事件\"></a>触发effects事件</h3><ol>\n<li>依赖于useDispatch</li>\n</ol>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> StyleSheet<span class=\"token punctuation\">,</span> Text<span class=\"token punctuation\">,</span> View<span class=\"token punctuation\">,</span> Button <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useDispatch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>  Dispatch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../models/store'</span>\n\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> dispatch <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useDispatch</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Dispatch<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">login</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    dispatch<span class=\"token punctuation\">.</span>login<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'lkif'</span><span class=\"token punctuation\">,</span>\n      pass<span class=\"token operator\">:</span> <span class=\"token string\">'123123'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">View</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>\n      flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      justifyContent<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n      alignItems<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">login</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>login<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onPress</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">View</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>通过 <code>const dispatch = useDispatch&lt;Dispatch&gt;();</code> 创建类型为Dispatch的对象，进而访问name为login的model的login异步事件；</p>\n","feature":true,"text":" link: https://rematchjs.org/ https://rematch.gitbook.io/handbook/ Rematch是没有boilerplate的Redux最佳实践。没有多余的action types，action creators，switch ...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":27,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"React","slug":"React","count":1,"path":"api/tags/React.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BA-model-ts\"><span class=\"toc-text\">新建 model.ts</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BA-models-ts\"><span class=\"toc-text\">新建 models.ts</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BAindex-ts\"><span class=\"toc-text\">新建index.ts</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#View\"><span class=\"toc-text\">View</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BF%E9%97%AEstate\"><span class=\"toc-text\">访问state</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A6%E5%8F%91effects%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">触发effects事件</span></a></li></ol></li></ol>","author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Math.toFixed中的四舍五入问题","uid":"6514695d9ddb3c6dddb5452c70383bdb","slug":"Math.fixed中的四舍五入问题","date":"2023-08-28T03:09:00.000Z","updated":"2023-08-28T01:45:36.982Z","comments":true,"path":"api/articles/Math.fixed中的四舍五入问题.json","keywords":null,"cover":"https://kiftravel.oss-cn-beijing.aliyuncs.com/img/202308280943672.jpg","text":"Math.toFixed中的四舍五入问题MDNNumber.prototype.toFixed()toFixed() 方法使用定点表示法来格式化一个数值。 语法numObj.toFixed(digits) 参数 digits 小数点后数字的个数；介于 0 到 20（包括）之间，实...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":27,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"toFixed","slug":"toFixed","count":1,"path":"api/tags/toFixed.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"前端面试题目","uid":"4bd7150fd9e4dc678a3c2ce6062a159a","slug":"前端面试题目","date":"2022-03-31T00:42:00.000Z","updated":"2022-05-05T13:37:24.415Z","comments":true,"path":"api/articles/前端面试题目.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforhexo/202203310851324.jpg","text":"html基础1.自定义列表&lt;!DOCTYPE html> &lt;html lang=\"zh\"> &lt;head> &lt;meta charset=\"UTF-8\"> &lt;meta name=\"viewport\" content=\"width=device-width...","link":"","photos":[],"count_time":{"symbolsCount":"133k","symbolsTime":"2:01"},"categories":[],"tags":[{"name":"面试","slug":"面试","count":1,"path":"api/tags/面试.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"feature":true}}