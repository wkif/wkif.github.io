{"title":"GUID生成算法","uid":"a39c7435e01b208d6a8bdb3f64120a16","slug":"GUID生成算法","date":"2020-11-27T01:20:00.000Z","updated":"2022-03-30T16:10:47.363Z","comments":true,"path":"api/articles/GUID生成算法.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforhexo/20201202142640.jpg","content":"<p>随机数不管是前端还是后端都会用到的一个地方，不管是从验证码还是各种生成的状态码，基本都是随机生成的，还有就是一些抽奖的算法，也是用随机数来处理的，生成随机数的方法目前是很多的，但是其实很多是重复性很大的，今天简单的讲一下怎么生成随机数重复性很低的一种办法GUID（Globally Unique Identifier）一种由算法生成的二进制长度为128位的数字标识符</p>\n<p>不重复的原理：GUID 的总数达到了2^128（3.4×10^38）个，所以随机生成两个相同GUID的可能性非常小，但并不为0。用于生成GUID的算法通常都加入了非随机的参数（如时间），以保证这种重复的情况不会发生。</p>\n<p>不BB上代码：</p>\n<p>GUID的 js：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">function GUID() &#123;\n\n    this.date &#x3D; new Date();\n\n    &#x2F;* 判断是否初始化过，如果初始化过以下代码，则以下代码将不再执行，实际中只执行一次 *&#x2F;\n\n    if (typeof this.newGUID !&#x3D; &#39;function&#39;) &#123;\n\n\n\n        &#x2F;* 生成GUID码 *&#x2F;\n\n        GUID.prototype.newGUID &#x3D; function() &#123;\n\n            this.date &#x3D; new Date();\n\n            var guidStr &#x3D; &#39;&#39;;\n\n                sexadecimalDate &#x3D; this.hexadecimal(this.getGUIDDate(), 16);\n\n                sexadecimalTime &#x3D; this.hexadecimal(this.getGUIDTime(), 16);\n\n            for (var i &#x3D; 0; i &lt; 9; i++) &#123;\n\n                guidStr +&#x3D; Math.floor(Math.random()*16).toString(16);\n\n            &#125;\n\n            guidStr +&#x3D; sexadecimalDate;\n\n            guidStr +&#x3D; sexadecimalTime;\n\n            while(guidStr.length &lt; 32) &#123;\n\n                guidStr +&#x3D; Math.floor(Math.random()*16).toString(16);\n\n            &#125;\n\n            return this.formatGUID(guidStr);\n\n        &#125;\n\n        &#x2F;*\n\n   * 功能：获取当前日期的GUID格式，即8位数的日期：19700101\n\n     值：返回GUID日期格式的字条串\n\n        *&#x2F;\n\n        GUID.prototype.getGUIDDate &#x3D; function() &#123;\n\n            return this.date.getFullYear() + this.addZero(this.date.getMonth() + 1) + this.addZero(this.date.getDay());\n\n        &#125;\n\n        &#x2F;*\n\n   * 功能：获取当前时间的GUID格式，即8位数的时间，包括毫秒，毫秒为2位数：12300933\n\n     值：返回GUID日期格式的字条串\n\n        *&#x2F;\n\n        GUID.prototype.getGUIDTime &#x3D; function() &#123;\n\n            return this.addZero(this.date.getHours()) + this.addZero(this.date.getMinutes()) + this.addZero(this.date.getSeconds()) + this.addZero( parseInt(this.date.getMilliseconds() &#x2F; 10 ));\n\n        &#125;\n\n        &#x2F;*\n\n   * 功能: 为一位数的正整数前面添加0，如果是可以转成非NaN数字的字符串也可以实现\n\n     : 参数表示准备再前面添加0的数字或可以转换成数字的字符串\n\n        * 返回值: 如果符合条件，返回添加0后的字条串类型，否则返回自身的字符串\n\n        *&#x2F;\n\n        GUID.prototype.addZero &#x3D; function(num) &#123;\n\n            if (Number(num).toString() !&#x3D; &#39;NaN&#39; &amp;&amp; num &gt;&#x3D; 0 &amp;&amp; num &lt; 10) &#123;\n\n                return &#39;0&#39; + Math.floor(num);\n\n            &#125; else &#123;\n\n                return num.toString();\n\n            &#125;\n\n        &#125;\n\n        &#x2F;*\n\n   * 功能：将y进制的数值，转换为x进制的数值\n\n     ：第1个参数表示欲转换的数值；第2个参数表示欲转换的进制；第3个参数可选，表示当前的进制数，如不写则为10\n\n        * 返回值：返回转换后的字符串\n\n        *&#x2F;\n\n        GUID.prototype.hexadecimal &#x3D; function(num, x, y) &#123;\n\n            if (y !&#x3D; undefined) &#123;\n\n                return parseInt(num.toString(), y).toString(x);\n\n            &#125; else &#123;\n\n                return parseInt(num.toString()).toString(x);\n\n            &#125;\n\n        &#125;\n\n        &#x2F;*\n\n   * 功能：格式化32位的字符串为GUID模式的字符串\n\n     ：第1个参数表示32位的字符串\n\n        * 返回值：标准GUID格式的字符串\n\n        *&#x2F;\n\n        GUID.prototype.formatGUID &#x3D; function(guidStr) &#123;\n\n            var str1 &#x3D; guidStr.slice(0, 8) + &#39;-&#39;,\n\n                str2 &#x3D; guidStr.slice(8, 12) + &#39;-&#39;,\n\n                str3 &#x3D;  guidStr.slice(12, 16) + &#39;-&#39;,\n\n                str4 &#x3D; guidStr.slice(16, 20) + &#39;-&#39;,\n\n                str5 &#x3D; guidStr.slice(20);\n\n            return str1 + str2 + str3 + str4 + str5;\n\n        &#125;\n\n    &#125;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>HTML代码：</p>\n<!DOCTYPE html>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;html&gt;\n\n&lt;head&gt;\n\n\n&lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n\n\n&lt;title&gt;&lt;&#x2F;title&gt;\n\n&lt;script src&#x3D;&quot;..&#x2F;js&#x2F;guid.js&quot; type&#x3D;&quot;text&#x2F;javascript&quot; charset&#x3D;&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;\n\n&lt;&#x2F;head&gt;\n\n&lt;body&gt;\n\n\n\n&lt;&#x2F;body&gt;\n\n&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;\n\n\nvar guid &#x3D; new GUID();\n\nvar radom &#x3D; guid.newGUID();\n\n&#x2F;*正则处理一下，将中间的-去掉*&#x2F;\n\nvar str &#x3D; radom.replace(&#x2F;-&#x2F;g, &quot;&quot;);\n\nalert(radom);\n\nalert(str);\n\n&lt;&#x2F;script&gt;\n\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p>作者：何处锦绣不灰堆</p>\n<p>来源：CSDN</p>\n<p>原文：<a href=\"https://blog.csdn.net/qq_41485414/article/details/80106955\">https://blog.csdn.net/qq_41485414/article/details/80106955</a></p>\n","text":"随机数不管是前端还是后端都会用到的一个地方，不管是从验证码还是各种生成的状态码，基本都是随机生成的，还有就是一些抽奖的算法，也是用随机数来处理的，生成随机数的方法目前是很多的，但是其实很多是重复性很大的，今天简单的讲一下怎么生成随机数重复性很低的一种办法GUID（Globally...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":26,"path":"api/categories/学习笔记.json"}],"tags":[],"toc":"","author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"埃式筛法","uid":"967c79636de7d94383bc9a503d949682","slug":"埃式筛法","date":"2020-11-30T14:01:00.000Z","updated":"2022-10-14T06:51:37.804Z","comments":true,"path":"api/articles/埃式筛法.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforhexo/20201127205203.jpg","text":"做法：做法其实很简单， 首先将2到n范围内的整数写下来，其中2是最小的素数。将表中所有的2的倍数划去，表中剩下的最小的数字就是3，他不能被更小的数整除，所以3是素数。再将表中所有的3的倍数划去……以此类推，如果表中剩余的最小的数是m，那么m就是素数。然后将表中所有m的倍数划去，像...","link":"","photos":[],"count_time":{"symbolsCount":813,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"C语言","slug":"C语言","count":3,"path":"api/tags/C语言.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}}},"next_post":{"title":"Oracle数据库学习","uid":"4caa006bdb2340f9480c9d6a3166e014","slug":"Oracle数据库学习","date":"2020-11-27T00:36:00.000Z","updated":"2020-12-26T12:18:19.985Z","comments":true,"path":"api/articles/Oracle数据库学习.json","keywords":null,"cover":[],"text":"SQL基础主键 在关系数据库中，一张表中的每一行数据被称为一条记录。一条记录就是由多个字段组成的。例如，students表的两行记录： id class_id name gender score 1 1 小明 M 90 2 1 小红 F 95 每一条记录都包含若干定义好的字段。同...","link":"","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"32 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":26,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"SQL","slug":"SQL","count":1,"path":"api/tags/SQL.json"},{"name":"Oracle","slug":"Oracle","count":1,"path":"api/tags/Oracle.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}}}}