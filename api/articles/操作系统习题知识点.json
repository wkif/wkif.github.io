{"title":"操作系统习题知识点","uid":"c63c5858f324489e9342422070a9376f","slug":"操作系统习题知识点","date":"2020-12-07T10:47:00.000Z","updated":"2022-03-30T15:59:22.662Z","comments":true,"path":"api/articles/操作系统习题知识点.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforhexo/20201202142640.jpg","content":"<h2 id=\"知识点：\"><a href=\"#知识点：\" class=\"headerlink\" title=\"知识点：\"></a>知识点：</h2><h3 id=\"第一章：操作系统引论\"><a href=\"#第一章：操作系统引论\" class=\"headerlink\" title=\"第一章：操作系统引论\"></a>第一章：操作系统引论</h3><p>操作系统有硬件和软件组成，硬件是CPUC软件建立与活动的基础，而软件是对硬件功能的扩充。硬件包括CPU、内存、I&#x2F;O设备和总线等，软件通常分为应用软件、支撑软件和系统软件。</p>\n<h4 id=\"冯洛伊曼体系：\"><a href=\"#冯洛伊曼体系：\" class=\"headerlink\" title=\"冯洛伊曼体系：\"></a>冯洛伊曼体系：</h4><p>存储器、运算器、控制器、输入设备、输出设备。</p>\n<h4 id=\"操作系统的基本功能：\"><a href=\"#操作系统的基本功能：\" class=\"headerlink\" title=\"操作系统的基本功能：\"></a>操作系统的基本功能：</h4><p>管理系统内各种资源方便用户使用。</p>\n<h4 id=\"操作系统五大功能：\"><a href=\"#操作系统五大功能：\" class=\"headerlink\" title=\"操作系统五大功能：\"></a>操作系统五大功能：</h4><p>存储管理（内存分配、地址映射、内存保护、内存扩充），</p>\n<p>作业和进程管理（作业和进程调度、进程控制、进程通信），</p>\n<p>设备管理（缓冲区管理、设备分配、设备驱动、设备无关性），</p>\n<p>文件管理（文件存储空间管理、文件的一般管理、目录管理、文件读写管理和存取控制），</p>\n<p>用户接口服务（程序接口、图形接口、命令行接口）。</p>\n<h4 id=\"操作系统定义：\"><a href=\"#操作系统定义：\" class=\"headerlink\" title=\"操作系统定义：\"></a>操作系统定义：</h4><p>管理和控制计算机系统内的各种硬件软件资源、有效地组织多道程序正常运行的系统软件（或程序组合），是用户和计算机之间的接口。</p>\n<h4 id=\"操作系统发展的动力：\"><a href=\"#操作系统发展的动力：\" class=\"headerlink\" title=\"操作系统发展的动力：\"></a>操作系统发展的动力：</h4><p>硬件技术的更新、应用需求的扩大。</p>\n<h4 id=\"操作系统基本种类：\"><a href=\"#操作系统基本种类：\" class=\"headerlink\" title=\"操作系统基本种类：\"></a>操作系统基本种类：</h4><p>批处理系统、分时操作系统、实时操作系统、网络系统和分布式操作系统。</p>\n<h4 id=\"操作系统基本特征：\"><a href=\"#操作系统基本特征：\" class=\"headerlink\" title=\"操作系统基本特征：\"></a>操作系统基本特征：</h4><p>并发、共享和不确定性。</p>\n<h4 id=\"操作系统结构：\"><a href=\"#操作系统结构：\" class=\"headerlink\" title=\"操作系统结构：\"></a>操作系统结构：</h4><p>整体结构、层次结构、虚拟机结构和客户-服务器结构。</p>\n<h4 id=\"系统初启的引导过程：\"><a href=\"#系统初启的引导过程：\" class=\"headerlink\" title=\"系统初启的引导过程：\"></a>系统初启的引导过程：</h4><p>硬件检测、加载引导程序、初始化内核、用户登录。</p>\n<h4 id=\"脱机I-x2F-O：\"><a href=\"#脱机I-x2F-O：\" class=\"headerlink\" title=\"脱机I&#x2F;O：\"></a>脱机I&#x2F;O：</h4><p>输入&#x2F;输出工作不受主机直接控制，而由卫星机专门负责完成I&#x2F;O，主机专门完成快速计算任务，从而二者可以并行操作。</p>\n<h4 id=\"联机I-x2F-O：\"><a href=\"#联机I-x2F-O：\" class=\"headerlink\" title=\"联机I&#x2F;O：\"></a>联机I&#x2F;O：</h4><p>指作业的输入、调入内存及结果输出都在CPU直接控制下进行。</p>\n<h4 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h4><p> 是指计算机物理装置本身，它是计算机系统的物理基础。如CPU、内存、设备等。</p>\n<h4 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h4><p>是相对硬件而言的，它是与数据处理系统的操作有关的计算机程序、过程、规则及相关文档资料的总称。简单地说，软件是计算机执行的程序</p>\n<h4 id=\"单道程序设计\"><a href=\"#单道程序设计\" class=\"headerlink\" title=\"单道程序设计\"></a>单道程序设计</h4><p>每次主机内存中仅存放一道作业,每当它运行期间发出输入输出请求后，高速的CPU便处于等待低速的I&#x2F;O完成状态。(基本特征: 顺序性)</p>\n<h4 id=\"多道程序设计\"><a href=\"#多道程序设计\" class=\"headerlink\" title=\"多道程序设计\"></a>多道程序设计</h4><p>在这种设计技术下，内存中能同时存放多道程序，在管理程序的控制下交替地执行。这些作业共享CPU和系统中的其他资源。</p>\n<h4 id=\"并发\"><a href=\"#并发\" class=\"headerlink\" title=\"并发\"></a>并发</h4><p>是指两个或多个活动在同一给定的时间间隔中进行。它是宏观上的概念。</p>\n<h4 id=\"吞吐量\"><a href=\"#吞吐量\" class=\"headerlink\" title=\"吞吐量\"></a>吞吐量</h4><p> 在一段给定的时间内，计算机所能完成的总工作量。</p>\n<h4 id=\"分时\"><a href=\"#分时\" class=\"headerlink\" title=\"分时\"></a>分时</h4><p>就是对时间的共享。在分时系统中，分时主要是指若干并发程序对CPU时间的共享。</p>\n<h4 id=\"实时\"><a href=\"#实时\" class=\"headerlink\" title=\"实时\"></a>实时</h4><p> 表示“及时”或“即时”。</p>\n<h4 id=\"系统调用\"><a href=\"#系统调用\" class=\"headerlink\" title=\"系统调用\"></a>系统调用</h4><p>是用户在程序中能以“函数调用”形式调用的、由操作系统提供的子功能的集合。每一个子功能称做一条系统调用命令。它是操作系统对外的接口，是用户级程序取得操作系统服务的唯一途径。</p>\n<h4 id=\"操作系统为用户提供的服务包括：\"><a href=\"#操作系统为用户提供的服务包括：\" class=\"headerlink\" title=\"操作系统为用户提供的服务包括：\"></a>操作系统为用户提供的服务包括：</h4><p>命令和数据输入&#x2F;输出的管理，内存的分配，用户文件的管理，CPU的分配，设备管理等。</p>\n<h4 id=\"核心态和用户态\"><a href=\"#核心态和用户态\" class=\"headerlink\" title=\"核心态和用户态\"></a>核心态和用户态</h4><p>当执行操作系统程序时，处理机处于核心态。它有较高的特权，可以执行所有的指令，包括一般用户程序中不能使用的特权指令，从而能对所有寄存器和内存进行访问、启动I&#x2F;O操作等。</p>\n<p>用户程序是在用户态下执行，它的权限较低，只能执行指令集中非特权指令。</p>\n<p>设置这两种不同状态的目的是为了保护操作系统程序（特别是其内核部分），防止受到用户程序的损害。</p>\n<h4 id=\"设计实时操作系统必须首先考虑\"><a href=\"#设计实时操作系统必须首先考虑\" class=\"headerlink\" title=\"设计实时操作系统必须首先考虑\"></a>设计实时操作系统必须首先考虑</h4><p>实时系统的一个重要特征就是对时间的严格限制和要求。实时系统的首要任务是调度一切可利用的资源完成实时控制任务，其次才着眼于提高计算机系统的使用效率。所以，设计实时操作系统必须首先考虑处理各种事件的时间限制。</p>\n<h4 id=\"特权指令和系统调用\"><a href=\"#特权指令和系统调用\" class=\"headerlink\" title=\"特权指令和系统调用\"></a>特权指令和系统调用</h4><p>特权指令是一类只能在核心态下执行的机器指令。而系统调用不是机器指令，它往往以函数调用的形式出现，实现操作系统提供的子功能，它是操作系统与用户的编程接口。在用户程序中可以使用系统调用来获得操作系统服务。</p>\n<p>在系统调用代码中可以使用特权指令。</p>\n<h4 id=\"采用层次结构的好处\"><a href=\"#采用层次结构的好处\" class=\"headerlink\" title=\"采用层次结构的好处\"></a>采用层次结构的好处</h4><p>①结构关系清晰，提高系统的可靠性和安全性。</p>\n<p>②各层模块的功能明确，提高系统的可扩充性和可移植性。</p>\n<p>③各层间具有单向依赖性，增强系统的可维护性。</p>\n<p>④符合软件工程的思想，便于实施研制开发。</p>\n<h4 id=\"微内核模式设计系统的优点\"><a href=\"#微内核模式设计系统的优点\" class=\"headerlink\" title=\"微内核模式设计系统的优点\"></a>微内核模式设计系统的优点</h4><p>①精减核心的功能，提供了一种简单的高度模块化的体系结构，提高了系统设计及使用的灵活性。</p>\n<p>②可移植性好。所有与具体机器特征相关的代码，全部隔离在微内核中。</p>\n<p>③可伸缩性好。操作系统能方便地进行定制、扩充或缩减，以适应硬件的快速更新和应用需求的不断变化。</p>\n<p>④实时性好。微内核可以方便地支持实时处理。</p>\n<p>⑤提供多线程机制，支持多处理器的体系结构和分布式系统及计算机网络。</p>\n<p>⑥系统安全性好。传统的操作系统将安全性功能建立在内核之外，因而它并不是很安全的。而微内核则将安全性作为系统内特性来进行设计。</p>\n<h4 id=\"中断\"><a href=\"#中断\" class=\"headerlink\" title=\"中断\"></a>中断</h4><p>与硬件相关，外部设备通过发送中断信号通知CPU抽空处理设备请求。</p>\n<h4 id=\"原语\"><a href=\"#原语\" class=\"headerlink\" title=\"原语\"></a>原语</h4><p>处于操作系统的最底层，是最接近硬件的部分。具有原子性一其操作只能一气呵成。</p>\n<h4 id=\"RAM\"><a href=\"#RAM\" class=\"headerlink\" title=\"RAM:\"></a>RAM:</h4><p>随机访问存储器( random-access memory的缩写)特征:可随机读写，读写速度快，断电后数据消<br>失。</p>\n<h4 id=\"ROM\"><a href=\"#ROM\" class=\"headerlink\" title=\"ROM:\"></a>ROM:</h4><p>只读存储器(read only memory)特征:数据写入之后不可更改，即使断电数据也不消失。</p>\n<h4 id=\"EPROM\"><a href=\"#EPROM\" class=\"headerlink\" title=\"EPROM:\"></a>EPROM:</h4><p>电可编程序只读存储器(Electrically Programmable Read- Only- Memory)，-种特殊的ROM。</p>\n<h4 id=\"BIOS\"><a href=\"#BIOS\" class=\"headerlink\" title=\"BIOS:\"></a>BIOS:</h4><p> Basic Input Output System 基本输入输出系统</p>\n<h4 id=\"实时操作系统\"><a href=\"#实时操作系统\" class=\"headerlink\" title=\"实时操作系统\"></a>实时操作系统</h4><p>是指当外界事件或数据产生时，能够接受并以足够快的速度予以处理，其处理<br>的结果又能在规定的时间之内来控制生产过程或对处理系统做出快速响应，并控制所有实时任<br>务协调一致运行的操作系统。</p>\n<h4 id=\"响应比\"><a href=\"#响应比\" class=\"headerlink\" title=\"响应比\"></a>响应比</h4><p>响应比&#x3D; (等待的时间+要求服务的时间) &#x2F;要求服务的时间</p>\n<p>eg:进程A要求服务5秒，进程B要求服务10秒，且进程B更重要。若两进程同时到达，则等待10秒之后:<br>进程A响应比&#x3D;3，进程B响应比&#x3D;2。处理顺序: 进程A-&gt;进程B</p>\n<h4 id=\"系统调用-VS-库函数\"><a href=\"#系统调用-VS-库函数\" class=\"headerlink\" title=\"系统调用 VS 库函数\"></a>系统调用 VS 库函数</h4><p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207190941.png\"></p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207205848.png\"></p>\n<h3 id=\"第二章：进程和线程\"><a href=\"#第二章：进程和线程\" class=\"headerlink\" title=\"第二章：进程和线程\"></a>第二章：进程和线程</h3><p>当进程顺序执行时，具有封闭性和可再现性。为提高计算机的运行速度和增强系统的处理能力，广泛采用了多道程序设计技术。该技术可以实现程序的并发执行和资源的共享。但是程序与计算活动失去了一一对应，而且程序并发执行时产生相互制约的关系。为了更好地描述程序的并发过程，引入了“进程”概念。</p>\n<h4 id=\"进程可表述为：\"><a href=\"#进程可表述为：\" class=\"headerlink\" title=\"进程可表述为：\"></a>进程可表述为：</h4><p>程序在并发环境中的执行状态。</p>\n<p>进程最基本的特征：动态性和并发性。</p>\n<h4 id=\"进程状态间转化：\"><a href=\"#进程状态间转化：\" class=\"headerlink\" title=\"进程状态间转化：\"></a>进程状态间转化：</h4><p>进程的三态模型：</p>\n<p>按进程在执行过程中的不同情况至少要定义三种状态：</p>\n<ul>\n<li><p>运行（running）态：进程占有处理器正在运行的状态。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>进程已获得CPU，其程序正在执行。在单处理机系统中，只有一个进程处于执行状态； 在多处理机系统中，则有多个进程处于执行状态。</p></blockquote>\n</li>\n<li><p>就绪（ready）态：进程具备运行条件，等待系统分配处理器以便运行的状态。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>当进程已分配到除CPU以外的所有必要资源后，只要再获得CPU，便可立即执行，进程这时的状态称为就绪状态。在一个系统中处于就绪状态的进程可能有多个，通常将它们排成一个队列，称为就绪队列。</p></blockquote>\n</li>\n<li><p>等待（wait）态：又称阻塞态或睡眠态，指进程不具备运行条件，正在等待某个时间完成的状态。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>也称为等待或睡眠状态，一个进程正在等待某一事件发生（例如请求I&#x2F;O而等待I&#x2F;O完成等）而暂时停止运行，这时即使把处理机分配给进程也无法运行，故称该进程处于阻塞状态。</p></blockquote>\n</li>\n</ul>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201208103645.png\" alt=\"进程三态转换\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">引起进程状态转换的具体原因如下：\n\n运行态→等待态：等待使用资源；如等待外设传输；等待人工干预。\n\n等待态→就绪态：资源得到满足；如外设传输结束；人工干预完成。\n\n运行态→就绪态：运行时间片到；出现有更高优先权进程。\n\n就绪态—→运行态：CPU 空闲时选择一个就绪进程。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>进程的五态模型：</p>\n<p>五态模型在三态模型的基础上增加了新建态（new）和终止态（exit）。</p>\n<ul>\n<li><p>新建态：对应于进程被创建时的状态，尚未进入就绪队列。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>创建一个进程需要通过两个步骤：</p>\n<p>1.为新进程分配所需要资源和建立必要的管理信息。</p>\n<p>2.设置该进程为就绪态，并等待被调度执行。</p></blockquote>\n</li>\n<li><p>终止态：指进程完成任务到达正常结束点，或出现无法克服的错误而异常终止，或被操作系统及有终止权的进程所终止时所处的状态。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>处于终止态的进程不再被调度执行，下一步将被系统撤销，最终从系统中消失。</p>\n<p>终止一个进程需要两个步骤：</p>\n<p>1.先等待操作系统或相关的进程进行善后处理（如抽取信息）。</p>\n<p>2.然后回收占用的资源并被系统删除。</p></blockquote>\n</li>\n</ul>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201208103853.png\" alt=\"进程的五态转换\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">引起进程状态转换的具体原因如下：\n\nNULL→新建态：执行一个程序，创建一个子进程。\n\n新建态→就绪态：当操作系统完成了进程创建的必要操作，并且当前系统的性能和虚拟内存的容量均允许。\n\n运行态→终止态：当一个进程到达了自然结束点，或是出现了无法克服的错误，或是被操作系统所终结，或是被其他有终止权的进程所终结。\n\n运行态→就绪态：运行时间片到；出现有更高优先权进程。\n\n运行态→等待态：等待使用资源；如等待外设传输；等待人工干预。\n\n就绪态→终止态：未在状态转换图中显示，但某些操作系统允许父进程终结子进程。\n\n等待态→终止态：未在状态转换图中显示，但某些操作系统允许父进程终结子进程。\n\n终止态→NULL：完成善后操作。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"PCB\"><a href=\"#PCB\" class=\"headerlink\" title=\"PCB\"></a>PCB</h4><p>每个进程都有唯一的一个进程控制块（PCB），它是进程存在的唯一标识，PCB表的物理组织方式有若干种，常见的有线性表、链接表和索引表方式。线性表简单，链接表灵活，索引表处理速度快。</p>\n<p>PCB中有表明进程状态的信息，该进程的状态包括运行态、就绪态和阻塞态，它利用状态信息来描述进程的动态性质。</p>\n<p>PCB一般包括：进程名、特征信息、进程状态信息、调度优先权、通信信息、现场保护区等。</p>\n<p>PCB作用：每个进程有唯一的进程控制块，操作系统根据控制块对进程实施控制和管理，进程的状态、并发特征都是通过PCB表示出来的，PCB是进程存在的唯一标识。</p>\n<p>核心利用原语对进程实施操作，包括创建进程、阻塞进程、终止进程和唤醒进程等操作。</p>\n<h4 id=\"线程：\"><a href=\"#线程：\" class=\"headerlink\" title=\"线程：\"></a>线程：</h4><p>是进程中实施调度和分配的基本单位。</p>\n<p>进程只作为资源的分配单位和拥有者，而线程才是CPU调度的单位和占有者。</p>\n<h4 id=\"线程两种实现方式：\"><a href=\"#线程两种实现方式：\" class=\"headerlink\" title=\"线程两种实现方式：\"></a>线程两种实现方式：</h4><p>在用户空间实现，切换速度快，</p>\n<p>在核心空间实现，支持多线程并发。</p>\n<p>利用组合方式可以取长补短。</p>\n<p>进程在活动过程中会彼此发生作用，主要是同步、互斥和通信关系。同步是合作关系，互斥是竞争关系，通信是信息交流。</p>\n<h4 id=\"临界资源：\"><a href=\"#临界资源：\" class=\"headerlink\" title=\"临界资源：\"></a>临界资源：</h4><p>一次只允许一个设备使用的资源。</p>\n<h4 id=\"临界区域（CS）：\"><a href=\"#临界区域（CS）：\" class=\"headerlink\" title=\"临界区域（CS）：\"></a>临界区域（CS）：</h4><p>对临界资源实施操作的那段<strong>程序</strong></p>\n<p>利用信号量和P、V操作可以很好的解决进程间的同步和互斥问题。</p>\n<p>详见（<a href=\"http://blog.chinaunix.net/uid-24567872-id-87642.html\">信号量P，V操作</a>）</p>\n<h4 id=\"管程\"><a href=\"#管程\" class=\"headerlink\" title=\"管程\"></a>管程</h4><p>是功能更强的同步机制，它自动实现进程互斥进入管程。管程中可以引入条件变量，利用两个操作原语实现进程同步。</p>\n<h4 id=\"为什么引入进程概念\"><a href=\"#为什么引入进程概念\" class=\"headerlink\" title=\"为什么引入进程概念\"></a>为什么引入进程概念</h4><p>由于多道程序并发执行时共享系统资源，共同决定这些资源的状态，因此系统中各程序在执行过程中就出现了相互制约的新关系，程序的执行出现“走走停停”的新状态。用程序这个静态概念已不能如实反映程序并发执行过程中的这些特征。为此，人们引入了“进程（Process）”这一概念来描述程序动态执行过程的性质。</p>\n<h4 id=\"进程和程序\"><a href=\"#进程和程序\" class=\"headerlink\" title=\"进程和程序\"></a>进程和程序</h4><p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201209175022.png\" alt=\"进程和程序\"></p>\n<p>进程与程序之间存在密切关系，进程的功能是通过程序的运行得以实现的，进程活动的主体是程序。进程不能脱离开具体程序而独自存在。</p>\n<h4 id=\"进程的互斥与同步概念\"><a href=\"#进程的互斥与同步概念\" class=\"headerlink\" title=\"进程的互斥与同步概念\"></a>进程的互斥与同步概念</h4><p>同步：逻辑上相关的两个或者多个进程为完成同一个任务，通过协调活动来使用同一资源，而产生的执行时序的约束关系</p>\n<p>互斥：逻辑上相互无关的两个或多个京城由于争用同一资源而发生的相互制约的关系</p>\n<h4 id=\"临界区进入准则：\"><a href=\"#临界区进入准则：\" class=\"headerlink\" title=\"临界区进入准则：\"></a>临界区进入准则：</h4><p>位数临界区域得到充分使用，必须严格禁止两个或多个进程同时进入，即欲进入的若干进程徐满足下列要求：</p>\n<p>1.单个入区</p>\n<p>2.独自占用</p>\n<p>3.尽快退出</p>\n<p>4.“落败让权”</p>\n<h4 id=\"进程通信\"><a href=\"#进程通信\" class=\"headerlink\" title=\"进程通信\"></a>进程通信</h4><p>—-低级进程通信</p>\n<p>———-互斥</p>\n<p>———-同步</p>\n<p>—-高级进程通信</p>\n<p>———-共享存储器方式</p>\n<p>———-消息传递方式</p>\n<p>—————-直接消息传递</p>\n<p>—————-间接消息传递</p>\n<p>———-管道文件方式</p>\n<h4 id=\"消息传递系统\"><a href=\"#消息传递系统\" class=\"headerlink\" title=\"消息传递系统\"></a>消息传递系统</h4><p>原语：send 、receive</p>\n<h3 id=\"第三章：死锁\"><a href=\"#第三章：死锁\" class=\"headerlink\" title=\"第三章：死锁\"></a>第三章：死锁</h3><h4 id=\"死锁：\"><a href=\"#死锁：\" class=\"headerlink\" title=\"死锁：\"></a>死锁：</h4><p>指多个进程循环等待他方占有的资源而无限期的僵持下去的局面</p>\n<h4 id=\"产生的原因：\"><a href=\"#产生的原因：\" class=\"headerlink\" title=\"产生的原因：\"></a>产生的原因：</h4><p>根本原因：资源有限且操作不当</p>\n<p>一种是竞争资源引起的死锁，另一种原因是进程推进顺序不当。</p>\n<h4 id=\"产生条件：\"><a href=\"#产生条件：\" class=\"headerlink\" title=\"产生条件：\"></a>产生条件：</h4><p>互斥条件、不可抢占条件、占有且申请条件、循环等待条件</p>\n<h4 id=\"对待死锁的策略：\"><a href=\"#对待死锁的策略：\" class=\"headerlink\" title=\"对待死锁的策略：\"></a>对待死锁的策略：</h4><p>预防、避免、检测与恢复，以及完全忽略</p>\n<h4 id=\"死锁预防\"><a href=\"#死锁预防\" class=\"headerlink\" title=\"死锁预防\"></a>死锁预防</h4><p>基本思路：要求进程申请资源时遵循某种协议，从而打破产生死锁的四个必要条件中的一个或者几个，保证系统不会陷入死锁。</p>\n<p>预防方法中最有效的是<strong>实施资源有序分配策略</strong>，即把资源事先编号，按序分配，所有进程对资源的请求必须资源序号递增的顺序提出，·使进程在申请、占有资源时不会形成回路。</p>\n<h4 id=\"死锁避免：\"><a href=\"#死锁避免：\" class=\"headerlink\" title=\"死锁避免：\"></a>死锁避免：</h4><p>是排除死锁的动态策略，关键是确定资源分配的安全性。</p>\n<p>代表：<strong>银行家算法：</strong></p>\n<p>根据进程对资源的请求，试探分配后系统是否处于安全状态。若安全才分配。</p>\n<h4 id=\"死锁的检测和恢复\"><a href=\"#死锁的检测和恢复\" class=\"headerlink\" title=\"死锁的检测和恢复\"></a>死锁的检测和恢复</h4><p>系统有专门的机构负责，在死锁发生时，会检测死锁发生的位置和原因，且通过外力破坏死锁发生的必要条件。</p>\n<h4 id=\"资源分配图\"><a href=\"#资源分配图\" class=\"headerlink\" title=\"资源分配图\"></a>资源分配图</h4><p>系统资源都为单体资源的情况下，若资源分配图中出现回路，则系统存在死锁。</p>\n<p>系统资源都为多体资源的情况下，若系统存在死锁，则资源分配图一定存在回路，反之不一定。</p>\n<h4 id=\"系统选择“牺牲者”的主要依据：\"><a href=\"#系统选择“牺牲者”的主要依据：\" class=\"headerlink\" title=\"系统选择“牺牲者”的主要依据：\"></a>系统选择“牺牲者”的主要依据：</h4><p>代价因素·    </p>\n<h3 id=\"第四章：调度\"><a href=\"#第四章：调度\" class=\"headerlink\" title=\"第四章：调度\"></a>第四章：调度</h3><p>详见：</p>\n<h4 id=\"CPU调度：\"><a href=\"#CPU调度：\" class=\"headerlink\" title=\"CPU调度：\"></a>CPU调度：</h4><p>CPU调度是操作系统最核心的调度，它根据算法选择合适的进程，并把CPU分配给进程使用。</p>\n<p><strong>每个操作系统必须的</strong></p>\n<h4 id=\"处理机调度分为三级\"><a href=\"#处理机调度分为三级\" class=\"headerlink\" title=\"处理机调度分为三级\"></a>处理机调度分为三级</h4><p>作业调度（高级调度）</p>\n<p>中级调度</p>\n<p>进程调度（低级调度）</p>\n<h4 id=\"中级调度\"><a href=\"#中级调度\" class=\"headerlink\" title=\"中级调度\"></a>中级调度</h4><p>实现进程的挂起和进程映像的转换</p>\n<h4 id=\"作业调度（高级调度）的基本功能：\"><a href=\"#作业调度（高级调度）的基本功能：\" class=\"headerlink\" title=\"作业调度（高级调度）的基本功能：\"></a>作业调度（高级调度）的基本功能：</h4><p>选择有权竞争CPU的进程，一般来说，资源分配策略（特别是内存管理）对作业调度影响很大。</p>\n<h4 id=\"作业状态：\"><a href=\"#作业状态：\" class=\"headerlink\" title=\"作业状态：\"></a>作业状态：</h4><p>提交状态、后备状态、执行状态和完成状态</p>\n<p>作业控制快JCB</p>\n<p>为了管理和控制作业而引入，记录该作业的有关信息</p>\n<p>作业调度功能：</p>\n<p>1.记录各个作业的情况</p>\n<p>2.按照某种算法在后备作业队列中挑选作业，</p>\n<p>3.为选中的作业分配资源 </p>\n<p>4.为选中的作业分配进程，并把进程放到就绪队列中。</p>\n<p>5.作业结束后的善后工作</p>\n<p>常用算法：</p>\n<p>先来先服务、短作业优先、最短剩余时间优先。</p>\n<h4 id=\"进程调度（低级调度）\"><a href=\"#进程调度（低级调度）\" class=\"headerlink\" title=\"进程调度（低级调度）\"></a>进程调度（低级调度）</h4><p>是从就绪队列中选择进程并把CPU分配给它。</p>\n<p>功能：</p>\n<p>保存现场、挑选进程、恢复现场</p>\n<p>基本方式：</p>\n<p>非抢占方式、抢占方式</p>\n<p>常用调度算法：</p>\n<p>轮转法、优先级法、多级队列法、短进程优先、高响应比优先等</p>\n<h4 id=\"调度准则\"><a href=\"#调度准则\" class=\"headerlink\" title=\"调度准则\"></a>调度准则</h4><h4 id=\"评价调度策略的性能指标\"><a href=\"#评价调度策略的性能指标\" class=\"headerlink\" title=\"评价调度策略的性能指标\"></a>评价调度策略的性能指标</h4><h5 id=\"CPU利用率\"><a href=\"#CPU利用率\" class=\"headerlink\" title=\"CPU利用率\"></a>CPU利用率</h5><p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201209220424.png\"></p>\n<p>Eg：某计算机只支持单道程序，某个作业刚开始需要在CPU上运行5秒，再用打印机打印输出6秒，之后再在CPU运行7秒。问：在此过程中，CPU利用率、打印机利用率分别为多少？<br>直接给出计算结果。</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201209220449.png\"></p>\n<h5 id=\"吞吐量-1\"><a href=\"#吞吐量-1\" class=\"headerlink\" title=\"吞吐量\"></a><strong>吞吐量</strong></h5><p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201209220644.png\"></p>\n<p>Eg：某计算机处理完10道作业，费时100秒，请计算系统吞吐量。</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201209220722.png\"></p>\n<h5 id=\"周转时间\"><a href=\"#周转时间\" class=\"headerlink\" title=\"周转时间\"></a><strong>周转时间</strong></h5><p><strong>周转时间&#x3D;作业完成时间点−作业提交时间点</strong></p>\n<p>对于用户来说，他们关心自己的单个作业的周转时间，但是对于操作系统来说，操作系统更关心整体表现，于是出现了<strong>平均周转时间</strong>，即 周转时间的平均值。下面是平均周转时间的计算公式。</p>\n<p><strong>平均周转时间&#x3D;各作业周转时间之和&#x2F;作业数目</strong></p>\n<p>举个例子：<br>小明去打酱油，他打酱油很快，只需要1分钟。但是到酱油铺后，由于人太多了，小明等了10分钟才轮到自己，这是小明打酱油的经历。现在小红去打醋，她打醋要花10分钟，她到醋铺后只等了1分钟就轮到了自己。<br>我们可以算出他们的周转时间都是11分钟，但是他们的体验感有所不同，小明打酱油1分钟却等了10分钟，他肯定很暴躁。而小红打醋10分钟却只等了1分钟，她觉得这样的体验挺OK的。<br>回到操作系统，类比一下，打酱油和打醋都是作业，小明和小红作为用户。可以看出，他们在周转时间相同的情况下，体验是不一样的。</p>\n<p>于是，人们提出了<strong>带权周转时间</strong>来衡量满意度。公式如下。</p>\n<p><strong>带权周转时间&#x3D;作业周转时间 &#x2F; 作业实际运行的时间&#x3D;（作业完成时间点−作业提交时间点）&#x2F;作业实际运行的时间</strong></p>\n<p>可以看出，带权周转时间肯定大于等于一，因为作业周转时间包括了作业实际运行的时间。而且，带权周转时间越小，用户满意度越高，反之则越低。例如上面的小明小红，他们的平均周转时间分别是11、1.1。<br>当然，操作系统更关心他们的整体满意度，所以出现了平均带权周转时间，即 带权周转时间的平均值，公式如下。</p>\n<p><strong>均带权周转时间&#x3D;各作业带权周转时间之和&#x2F;作业数目</strong></p>\n<h5 id=\"等待时间\"><a href=\"#等待时间\" class=\"headerlink\" title=\"等待时间\"></a><strong>等待时间</strong></h5><p><strong>等待时间&#x3D;周转时间−运行时间</strong></p>\n<h5 id=\"响应时间\"><a href=\"#响应时间\" class=\"headerlink\" title=\"响应时间\"></a><strong>响应时间</strong></h5><p><strong>响应时间，指从用户提交请求到首次产生响应所用的时间。</strong></p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201209221127.png\" alt=\"image-20201209221127783\"></p>\n<h4 id=\"调度算法：\"><a href=\"#调度算法：\" class=\"headerlink\" title=\"调度算法：\"></a><strong>调度算法：</strong></h4><p>详见：</p>\n<h4 id=\"线程调度：\"><a href=\"#线程调度：\" class=\"headerlink\" title=\"线程调度：\"></a>线程调度：</h4><p>分为：用户级调度和核心级调度</p>\n<h4 id=\"实时调度：\"><a href=\"#实时调度：\" class=\"headerlink\" title=\"实时调度：\"></a>实时调度：</h4><h4 id=\"实时任务类型：\"><a href=\"#实时任务类型：\" class=\"headerlink\" title=\"实时任务类型：\"></a>实时任务类型：</h4><p>1.根据对截至时间的要求分为：硬实时任务和软实时任务</p>\n<h5 id=\"硬实时任务：\"><a href=\"#硬实时任务：\" class=\"headerlink\" title=\"硬实时任务：\"></a>硬实时任务：</h5><p>指系统必须满足对戒指时间的要求。</p>\n<h5 id=\"软实时任务：\"><a href=\"#软实时任务：\" class=\"headerlink\" title=\"软实时任务：\"></a>软实时任务：</h5><p>任务与预期的截至时间相关联，但不会严格要求。</p>\n<p>2.按照任务执行是否有周期性规律分为周期性任务和非周期性任务。</p>\n<h4 id=\"中断-1\"><a href=\"#中断-1\" class=\"headerlink\" title=\"中断\"></a>中断</h4><h5 id=\"中断的概念\"><a href=\"#中断的概念\" class=\"headerlink\" title=\"中断的概念\"></a><strong>中断的概念</strong></h5><p>中断是指程序执行过程中，遇到急需处理的事件时，暂时中止CPU上现行程序的运行，转去执行相应的事件处理程序，待处理完成后再返回原程序被中断处或调度其他程序执行的过程</p>\n<p>操作系统是“中断驱动”的；换言之，中断（广义）是激活操作系统的唯一方式</p>\n<p>中断有广义和狭义之分，上述中断时指广义的中断</p>\n<h5 id=\"中断源：\"><a href=\"#中断源：\" class=\"headerlink\" title=\"中断源：\"></a>中断源：</h5><p>引起中断的事件或者发出中断请求的来源</p>\n<h5 id=\"中断请求\"><a href=\"#中断请求\" class=\"headerlink\" title=\"中断请求\"></a>中断请求</h5><p>中断源向CPU发出的中断请求 </p>\n<h5 id=\"断点\"><a href=\"#断点\" class=\"headerlink\" title=\"断点\"></a>断点</h5><p>发生中断是被打断程序的暂停点</p>\n<h5 id=\"中断系统\"><a href=\"#中断系统\" class=\"headerlink\" title=\"中断系统\"></a><strong>中断系统</strong></h5><p>中断系统是计算机系统中响应和处理中断的系统，包括硬件子系统和软件子系统两部分</p>\n<p>中断响应由硬件子系统完成</p>\n<p>中断处理由软件子系统完成</p>\n<h5 id=\"中断系统的作用：\"><a href=\"#中断系统的作用：\" class=\"headerlink\" title=\"中断系统的作用：\"></a>中断系统的作用：</h5><p>1.提高主机利用率，</p>\n<p>2.及时进行事故处理</p>\n<p>3.实现分时操作</p>\n<p>4.实现实时操作</p>\n<p>5.方便程序调试</p>\n<h5 id=\"中断类型：\"><a href=\"#中断类型：\" class=\"headerlink\" title=\"中断类型：\"></a>中断类型：</h5><p>中断、异常</p>\n<h5 id=\"中断的处理过程：\"><a href=\"#中断的处理过程：\" class=\"headerlink\" title=\"中断的处理过程：\"></a>中断的处理过程：</h5><p>硬件：</p>\n<p>终止当前程序的执行，保存断点信息、转到相应的处理程序。</p>\n<p>软件：</p>\n<p>保存现场，分析原因，处理中断，中断返回。</p>\n<p>对中断的处理是在核心态下进行的。</p>\n<h4 id=\"处理机调度的主要目的\"><a href=\"#处理机调度的主要目的\" class=\"headerlink\" title=\"处理机调度的主要目的\"></a>处理机调度的主要目的</h4><p>就是为了分配处理机</p>\n<h4 id=\"引入中级调度的目的：\"><a href=\"#引入中级调度的目的：\" class=\"headerlink\" title=\"引入中级调度的目的：\"></a>引入中级调度的目的：</h4><p>提高内存利用率和吞吐量</p>\n<h4 id=\"作业调度与进程调度之间的差别：\"><a href=\"#作业调度与进程调度之间的差别：\" class=\"headerlink\" title=\"作业调度与进程调度之间的差别：\"></a>作业调度与进程调度之间的差别：</h4><p>作业调度是宏观调度，它所选择的作业只是具有获得处理机的资格，但尚未占有处理机，不能立即在其上实际运行；而进程调度是微观调度，动态地把处理机实际地分配给所选择的进程，使之真正活动起来。另外，进程调度相当频繁，而作业调度执行的次数一般很少。</p>\n<p>作业调度从外存的后备队列中选择一批作业调入内存，为它们创建进程，这些进程被送入就绪队列。进程调度从就绪队列中选出一个进程来，并把它的状态改为运行态，把CPU分配给它。当运行进程要等待某一事件时，就让出CPU，进入相应的阻塞队列，并进行进程调度。运行进程完成后，由作业调度进行善后处理工作。</p>\n<h3 id=\"第五章：存储管理\"><a href=\"#第五章：存储管理\" class=\"headerlink\" title=\"第五章：存储管理\"></a>第五章：存储管理</h3><h4 id=\"逻辑地址：\"><a href=\"#逻辑地址：\" class=\"headerlink\" title=\"逻辑地址：\"></a>逻辑地址：</h4><p>应用程序编译后每个模块都以0地址开始编址，这种地址称为逻辑地址或相对地址</p>\n<h4 id=\"物理地址：\"><a href=\"#物理地址：\" class=\"headerlink\" title=\"物理地址：\"></a>物理地址：</h4><p>内存中各物理存储单元都以同一个基地址开始编址，这种地址称为物理地址或绝对地址</p>\n<h4 id=\"重定位：\"><a href=\"#重定位：\" class=\"headerlink\" title=\"重定位：\"></a>重定位：</h4><p>解决逻辑地址和物理地址之间的映射关系</p>\n<h5 id=\"静态重定位：\"><a href=\"#静态重定位：\" class=\"headerlink\" title=\"静态重定位：\"></a>静态重定位：</h5><p>在程序装入内存时进行地址转换。由装入程序执行，早期小型 OS 使用。</p>\n<h5 id=\"动态重定位：\"><a href=\"#动态重定位：\" class=\"headerlink\" title=\"动态重定位：\"></a>动态重定位：</h5><p>在 CPU 执行程序时进行地址转换，依赖硬件来进行转换。如果不用硬件，效率会极大地下降。</p>\n<h4 id=\"分区法：\"><a href=\"#分区法：\" class=\"headerlink\" title=\"分区法：\"></a>分区法：</h4><h5 id=\"固定分区法：\"><a href=\"#固定分区法：\" class=\"headerlink\" title=\"固定分区法：\"></a>固定分区法：</h5><p>内存中分区个数不变，各个分区大小固定</p>\n<p>缺点：浪费严重，碎片化多</p>\n<h5 id=\"动态分区法：\"><a href=\"#动态分区法：\" class=\"headerlink\" title=\"动态分区法：\"></a>动态分区法：</h5><p>各个分区在相应进程建立时才分配，使其大小正好是进程大小</p>\n<p>缺点：一段时间后碎片化严重</p>\n<h4 id=\"处理碎片问题：\"><a href=\"#处理碎片问题：\" class=\"headerlink\" title=\"处理碎片问题：\"></a>处理碎片问题：</h4><h5 id=\"紧缩\"><a href=\"#紧缩\" class=\"headerlink\" title=\"紧缩\"></a>紧缩</h5><p>把所有的碎片连成一片连续的空闲区（通过移动已分区的内容），可以很好解决碎片化，但是需要读写大量分区中信息，耗费大量CPU时间，时间成本高</p>\n<h5 id=\"分页管理\"><a href=\"#分页管理\" class=\"headerlink\" title=\"分页管理\"></a>分页管理</h5><p><strong>解决动态分区法碎片利用率问题</strong></p>\n<p>分页存储管理将进程的逻辑地址分为若干页。对每个页进行编号，从0开始，如：第0页，第1页。相应的，把内存中的物理地址分为若干块，同时对他们进行编号，如0#，1#等。在内存分配时，以块为单位，将若干页面分别装入多个不相邻的物理块中。由于进程的最后一页经常装不满，就形成了不可利用的碎片，称为“页面碎片”</p>\n<p>分页地址中地址结构如下：</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201212203446.png\"></p>\n<h6 id=\"页表\"><a href=\"#页表\" class=\"headerlink\" title=\"页表\"></a>页表</h6><p>在分页系统中，为了保证进程可以在内存中找到每个页面对应的物理块，系统为每一个进程建立了一张页面映像表，简称页表。在进程地址空间内的所有页，依次在页表中有一页表项，其中记录了相应页在内存对应的物理块号。如下图：</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201212201953.png\"></p>\n<p>页表解决了块外碎片问题，但减低了性能，页面大小制约因素（太大块内碎片，浪费；太小页表项多，查询时间成本大），所以还要优化——》分段技术</p>\n<p>例题15：</p>\n<h5 id=\"分段管理：\"><a href=\"#分段管理：\" class=\"headerlink\" title=\"分段管理：\"></a>分段管理：</h5><p><strong>解决了编译后出现多个0地址</strong></p>\n<p>在分段存储管理方式中，作业的地址空间被划分为若干个段，每个段定义了一组逻辑信息。例如，有主程序段MAIN、子程序段X、数据段D及栈段S等，通常，用段号代替段名。每个段都从0开始编址，并采用一段连续的地址空间。</p>\n<p>段的长度由相应的逻辑信息组的长度决定，因此每个短对长度并不相等。</p>\n<p>分段地址中地址具有的结构</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201212203327.png\"></p>\n<h6 id=\"段表\"><a href=\"#段表\" class=\"headerlink\" title=\"段表\"></a>段表</h6><p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201212204247.png\"></p>\n<h5 id=\"段页式存储管理方式\"><a href=\"#段页式存储管理方式\" class=\"headerlink\" title=\"段页式存储管理方式\"></a>段页式存储管理方式</h5><p>分页系统以页面作为内存分配的基本单位，能够有效提高内存的利用率，而分段系统以段作为内存分配的基本单位，它能够更好的满足用户多方面的需求。而段页式系统这很好的集两者之长。</p>\n<p>段页式系统的基本原理是分段和分页原理的结合，即先将用户程序分为若干段，再把系统分为若干页，为每一个段分配一个段明。</p>\n<p>段页地址结构包括三部分：段号，段内页号，页内地址</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201212204410.png\"></p>\n<p>1.等分内存</p>\n<p>2.进程的地址空间采用分段方式，将每段再划分为若干页，页面的大小与内存块相同，每段的每个页面都从0开始编址</p>\n<p>段表的内容和分段系统不同，它还包括页表大小和页内始址，下图就是利用段表进行从逻辑地址到物理地址的转变</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201212211207.png\"></p>\n<h4 id=\"存储管理的基本模式：\"><a href=\"#存储管理的基本模式：\" class=\"headerlink\" title=\"存储管理的基本模式：\"></a>存储管理的基本模式：</h4><ol>\n<li><p>单连续存储管理</p>\n</li>\n<li><p>段式存储管理</p>\n</li>\n<li><p>页式存储管理</p>\n</li>\n<li><p>段页式存储管理</p>\n</li>\n</ol>\n<h3 id=\"第六章：文件系统\"><a href=\"#第六章：文件系统\" class=\"headerlink\" title=\"第六章：文件系统\"></a>第六章：文件系统</h3><p>文件：</p>\n<p>是被命名的数据的集合体，是由操作系统定义和执行的抽象数据</p>\n<h4 id=\"文件系统功能：\"><a href=\"#文件系统功能：\" class=\"headerlink\" title=\"文件系统功能：\"></a>文件系统功能：</h4><p>文件管理、目录管理、文件存储空间管理、文件共享和保护、提供方便的用户接口</p>\n<h4 id=\"两种形式的结构\"><a href=\"#两种形式的结构\" class=\"headerlink\" title=\"两种形式的结构\"></a>两种形式的结构</h4><p>　　① <strong>文件的逻辑结构</strong>，这是从用户观点出发所观察到的文件组织形式，是用户可以直接处理的数据及其结构，独立于文件的物理特性，又称为文件组织。</p>\n<p>　　② <strong>文件的物理结构</strong>，又称为文件的存储结构，是指文件在外存上的存储组织形式，不仅与存储介质有关，还与外存分配方式有关。</p>\n<h4 id=\"什么是虚拟存储器？它有哪些基本特征？\"><a href=\"#什么是虚拟存储器？它有哪些基本特征？\" class=\"headerlink\" title=\"什么是虚拟存储器？它有哪些基本特征？\"></a>什么是虚拟存储器？它有哪些基本特征？</h4><p>是用户能作为可编址内存对待的虚拟存储空间，它使用户逻辑存储器与物理存储器分离</p>\n<h2 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h2><h3 id=\"1-用户可以通过-B-两种方式来使用计算机。\"><a href=\"#1-用户可以通过-B-两种方式来使用计算机。\" class=\"headerlink\" title=\"1.用户可以通过( B) 两种方式来使用计算机。\"></a>1.用户可以通过( B) 两种方式来使用计算机。</h3><p>A.命令接口和函数<br>B.命令接口和系统调用<br>C.命令接口和文件管理<br>D.设备管理方式和系统调用</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207185100.png\"></p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207185416.png\" alt=\"win下联机命令接口\"></p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207185337.png\" alt=\"win下脱机命令接口实例\"></p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207185630.png\" alt=\"win下程序接口\"></p>\n<p>备注：</p>\n<p>易懵概念和常见问法:<br>系统调用&#x3D;系统调用命令&#x3D;广义指令<br>操作系统提供给用户直接(间接)使用的接口是?<br>—-&gt;命令接口(程序接口&#x2F;系统调用)<br>操作系统提供给编程人员&#x2F;应用程序使用的接口是?<br>—-&gt;程序接口&#x2F;系统调用</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207191515.png\"></p>\n<h3 id=\"2-系统调用是由操作系统提供给用户的，它-B-。\"><a href=\"#2-系统调用是由操作系统提供给用户的，它-B-。\" class=\"headerlink\" title=\"2.系统调用是由操作系统提供给用户的，它(B ) 。\"></a>2.系统调用是由操作系统提供给用户的，它(B ) 。</h3><p>A.直接通过键盘交互方式使用<br>B.只能通过用户程序间接使用<br>C.是命令接口中的命令<br>D.与系统的命令一样</p>\n<p>系统调用:由操作系统实现的所有系统调用所构成的集合即程序接口或应用编程接口。是应用程序同系统之间的接口。</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207190257.png\"></p>\n<h3 id=\"3-系统调用的目的是-A）\"><a href=\"#3-系统调用的目的是-A）\" class=\"headerlink\" title=\"3.系统调用的目的是(A）\"></a>3.系统调用的目的是(A）</h3><p>A.请求系统服务<br>B.中止系统服务<br>C.申请系统资源<br>D.释放系统资源</p>\n<h3 id=\"4-用户在程序中试图读某文件的第100个逻辑块，使用操作系统提供的-B-接口。\"><a href=\"#4-用户在程序中试图读某文件的第100个逻辑块，使用操作系统提供的-B-接口。\" class=\"headerlink\" title=\"4.用户在程序中试图读某文件的第100个逻辑块，使用操作系统提供的(B ) 接口。\"></a>4.用户在程序中试图读某文件的第100个逻辑块，使用操作系统提供的(B ) 接口。</h3><p>A.系统调用<br>B.键盘命令<br>C.原语<br>D.图形用户接口</p>\n<p>逻辑块:内存块&gt;计算机资源<br>读: I&#x2F;O操作,核心态服务<br>题目转换为→用户在程序中要访问一部分计算机资源，并且需要进入核心态使用内核服务,<br>需要使用操作系统() 接口</p>\n<h3 id=\"5-操作系统与用户通信接口通常不包括-）\"><a href=\"#5-操作系统与用户通信接口通常不包括-）\" class=\"headerlink\" title=\"5.操作系统与用户通信接口通常不包括(）\"></a>5.操作系统与用户通信接口通常不包括(）</h3><p>A. shell<br>B.命令解释器<br>C.广义指令<br>D.缓存管理指令</p>\n<p>Shell属于命令解析器，属于命令接口<br>广 义指令就是系统调用指令</p>\n<p>系统中的缓存，全部由操作系统管理,对用户是透明的，操作系统不提供管理系统缓存的系统调用。</p>\n<h3 id=\"6-下列选项中，-不属于多道程序设计的基本特征是-C-。\"><a href=\"#6-下列选项中，-不属于多道程序设计的基本特征是-C-。\" class=\"headerlink\" title=\"6.下列选项中， 不属于多道程序设计的基本特征是( C) 。\"></a>6.下列选项中， 不属于多道程序设计的基本特征是( C) 。</h3><p>A.制约性<br>B.间断性<br>C.顺序性<br>D.共享性</p>\n<h3 id=\"7-计算机开机后，操作系统最终被加载到-A-。-2013年计算机联考真题\"><a href=\"#7-计算机开机后，操作系统最终被加载到-A-。-2013年计算机联考真题\" class=\"headerlink\" title=\"7.计算机开机后，操作系统最终被加载到( A) 。[2013年计算机联考真题]\"></a>7.计算机开机后，操作系统最终被加载到( A) 。[2013年计算机联考真题]</h3><p>A. BIOS<br>B. ROM<br>C. EPROM<br>D. RAM</p>\n<p>RAM:随机访问存储器( random-access memory的缩写)特征:可随机读写，读写速度快，断电后数据消<br>失。<br>ROM:只读存储器(read only memory)特征:数据写入之后不可更改，即使断电数据也不消失。<br>EPROM:电可编程序只读存储器(Electrically Programmable Read- Only- Memory)，-种特殊的ROM。<br>BIOS: Basic Input Output System 基本输入输出系统</p>\n<p>例子:为一个裸机安装操作系统<br>Step 1:一般要先进入BIOS系统，选择安装模式(CD或U盘? )<br>Step 2:安装系统的过程，其实是将操作系统相关数据写入硬盘的过程_(C盘)<br>Step 3:安装完毕，正常开机启动。操作系统相关数据从硬盘加载到RAM中，才能被CPU处理</p>\n<p>裸机里有什么?<br>裸机的主板.上有ROM、有RAM、有空空如也的硬盘。<br>一台裸机只有RON中有数据，因此BIOS-定是存在ROM中 </p>\n<h3 id=\"8-批处理系统的主要缺点是-D-。\"><a href=\"#8-批处理系统的主要缺点是-D-。\" class=\"headerlink\" title=\"8.批处理系统的主要缺点是( D) 。\"></a>8.批处理系统的主要缺点是( D) 。</h3><p>A.系统吞吐量小<br>B. CPU利用率不高<br>C.资源利用率低<br>D.无交互能力</p>\n<p>单道批处理系统：单道性、顺序性、自动性</p>\n<p>多道批处理系统：制约性、多道、间断性、宏观上并行、微观上串行</p>\n<h3 id=\"9-操作系统的基本类型主要有-B-。\"><a href=\"#9-操作系统的基本类型主要有-B-。\" class=\"headerlink\" title=\"9.操作系统的基本类型主要有(B )。\"></a>9.操作系统的基本类型主要有(B )。</h3><p>A.批处理操作系统、分时操作系统和多任务系统<br>B.批处理操作系统、分时操作系统和实时操作系统<br>C.单用户系统、多用户系统和批处理操作系统<br>D.实时操作系统、分时操作系统和多用户系统</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207210754.png\"></p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207210702.png\"></p>\n<h3 id=\"10-下列关于批处理系统的叙述中，正确的是-A-。\"><a href=\"#10-下列关于批处理系统的叙述中，正确的是-A-。\" class=\"headerlink\" title=\"10.下列关于批处理系统的叙述中，正确的是(A )。\"></a>10.下列关于批处理系统的叙述中，正确的是(A )。</h3><p>I.批处理系统允许多个用户与计算机直接交互<br>II.批处理系统分为单道批处理系统和多道批处理系统<br>I.中断技术使得多道批处理系统和I&#x2F;O设备可与CPU并行工作<br>A.仅I、III<br>B.仅I|<br>C.仅I、II<br>D.仅1、III</p>\n<h3 id=\"11-与单道程序系统相比，多道程序系统的优点是-D-。\"><a href=\"#11-与单道程序系统相比，多道程序系统的优点是-D-。\" class=\"headerlink\" title=\"11.与单道程序系统相比，多道程序系统的优点是( D) 。\"></a>11.与单道程序系统相比，多道程序系统的优点是( D) 。</h3><p>I . CPU利用率高<br>II.系统开销小<br>III.系统吞吐量大<br>IV. I&#x2F;O设备利用率高<br>A.仅I、III<br>B.仅I、IV<br>C.仅II、III<br>D.仅I、III、IV<br>单道程序系统:内存中最多只有-道作业，作业之间是串行执行的。若当前作业等待I&#x2F;O，则CPU闲置等待。<br>多道程序系统:内存中有多道作业，作业之间并发执行。若当前作业等待I&#x2F;O，则CPU转 而处理另一道作业。<br>CPU利用率: CPU“忙” 的时间所占的比例<br>系统开销:除了处理作业之外，系统在进程、内存等管理上消耗的时间<br>系统吞吐量:单位时间内CPU完成作业数量 （相同作业下，总耗时越少，吞吐量越大）<br>I&#x2F;0设备利用率: I&#x2F;0设 备”忙”的时间所占的比例</p>\n<p>eg：</p>\n<p>作业A: CPU 5ms –&gt; I&#x2F;0 5ms –&gt; CPU 5ms –&gt; I&#x2F;O 5ms<br>作业B: CPU 5ms –&gt; I&#x2F;0 5ms – CPU 5ms –&gt; 1&#x2F;0 5ms</p>\n<p>单道：</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207212616.png\"></p>\n<p>完成2个作业，总耗时40ms， CPU利用 率&#x3D;20&#x2F;40&#x3D;50%，&#x2F;0设备利用率&#x3D;20&#x2F;40&#x3D;50%</p>\n<p>多道：</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201207212826.png\"></p>\n<p>完成2个作业，总耗时25ms，CPU利用率&#x3D;20&#x2F;25&#x3D;80%，&#x2F;0设备利用率&#x3D;20&#x2F;25&#x3D;80%</p>\n<h3 id=\"12-实时操作系统必须在-B-内处理来自外部的事件。\"><a href=\"#12-实时操作系统必须在-B-内处理来自外部的事件。\" class=\"headerlink\" title=\"12.实时操作系统必须在( B) 内处理来自外部的事件。\"></a>12.实时操作系统必须在( B) 内处理来自外部的事件。</h3><p>A.一个机器周期<br>B.被控制对象规定时间<br>C.周转时间<br>D.时间片</p>\n<p>实时操作系统:是指当外界事件或数据产生时，能够接受并以足够快的速度予以处理，其处理<br>的结果又能在规定的时间之内来控制生产过程或对处理系统做出快速响应，并控制所有实时任<br>务协调-致运行的操作系统。<br>产生目的:为了能在某个时间限制内完成某些紧急任务而不需要时间片排队</p>\n<h3 id=\"13-实时系统的进程调度，通常采用-C-算法。\"><a href=\"#13-实时系统的进程调度，通常采用-C-算法。\" class=\"headerlink\" title=\"13.实时系统的进程调度，通常采用( C) 算法。\"></a>13.实时系统的进程调度，通常采用( C) 算法。</h3><p>A.先来先服务<br>B.时间片轮转<br>C.抢占式的优先级高者优先<br>D.高响应比优先</p>\n<p>实时操作系统:将时间作为关键参数。系统必须能足够及时地处理某些紧急的外部事件。<br>Key:响应比&#x3D; (等待的时间+要求服务的时间) &#x2F;要求服务的时间<br>eg:进程A要求服务5秒，进程B要求服务10秒，且进程B更重要。若两进程同时到达，则等待10秒之后:<br>进程A响应比&#x3D;3，进程B响应比&#x3D;2。处理顺序: 进程A-&gt;进程B</p>\n<p>这种情况下A会先处理，不符合.</p>\n<p>先来先服务:早期的单道批处理系统<br>时间片轮转:分时操作系统<br>抢占式的优先级高者优先:实时操作系统<br>高响应比优先:常用于多道程序系统中的作业调度</p>\n<h3 id=\"14-分时系统的一个重要性能是系统的响应时间-对操作系统-C-因素进行改进有利于改善系统的响应时间。\"><a href=\"#14-分时系统的一个重要性能是系统的响应时间-对操作系统-C-因素进行改进有利于改善系统的响应时间。\" class=\"headerlink\" title=\"14.分时系统的一个重要性能是系统的响应时间,对操作系统(C ) 因素进行改进有利于改善系统的响应时间。\"></a>14.分时系统的一个重要性能是系统的响应时间,对操作系统(C ) 因素进行改进有利于改善系统的响应时间。</h3><p>A.加大时间片<br>B.采用静态页式管理<br>C.优先级+非抢占式调度算法<br>D.代码可重入</p>\n<p>分时操作系统的工作方式: -台主机连接了若干个终端，每个终端有一个用户在使用。用户交互式地向系统提出命令请求，系统接受每个用户的命令,采用时间片轮转方式处理服务请求,并通过交互方式在终端上向用户显示结果</p>\n<p>响应时间:从用户提交请求到系统首次产生响应所用的时间</p>\n<h3 id=\"16-虚拟存储技术是（A）。\"><a href=\"#16-虚拟存储技术是（A）。\" class=\"headerlink\" title=\"16    虚拟存储技术是（A）。\"></a>16    虚拟存储技术是（A）。</h3><p>A. 补充内存物理空间不足的技术      B. 补充相对地址空间的技术</p>\n<p>C. 扩充外存空间的技术              D. 扩充输入输出缓冲区的技术 </p>\n<h3 id=\"17-段页式存储管理汲取了页式管理和段式管理的长处，其实现原理结合了页式和段式管理的基本思想，即（B）。\"><a href=\"#17-段页式存储管理汲取了页式管理和段式管理的长处，其实现原理结合了页式和段式管理的基本思想，即（B）。\" class=\"headerlink\" title=\"17.段页式存储管理汲取了页式管理和段式管理的长处，其实现原理结合了页式和段式管理的基本思想，即（B）。\"></a>17.段页式存储管理汲取了页式管理和段式管理的长处，其实现原理结合了页式和段式管理的基本思想，即（B）。</h3><p>A. 用分段方法来分配和管理物理存储空间，用分页方法来管理用户地址空间。 </p>\n<p>​    B. 用分段方法来分配和管理用户地址空间，用分页方法来管理物理存储空间。 </p>\n<p>​    C. 用分段方法来分配和管理主存空间，用分页方法来管理辅存空间。 </p>\n<p>​    D. 用分段方法来分配和管理辅存空间，用分页方法来管理主存空间。</p>\n<h3 id=\"18-（B）是指将作业不需要或暂时不需要的部分移到外存，让出内存空间以调入其他所需数据。\"><a href=\"#18-（B）是指将作业不需要或暂时不需要的部分移到外存，让出内存空间以调入其他所需数据。\" class=\"headerlink\" title=\"18.（B）是指将作业不需要或暂时不需要的部分移到外存，让出内存空间以调入其他所需数据。\"></a>18.（B）是指将作业不需要或暂时不需要的部分移到外存，让出内存空间以调入其他所需数据。</h3><p>​    A. 覆盖技术                        B. 交换技术</p>\n<p>​    C. 虚拟技术                        D. 物理扩充</p>\n<h3 id=\"19-通道是一种（C）。\"><a href=\"#19-通道是一种（C）。\" class=\"headerlink\" title=\"19.通道是一种（C）。\"></a>19.通道是一种（C）。</h3><p>A. I&#x2F;O端口                          B. 数据通道   </p>\n<p>C. I&#x2F;O专用处理机                    D. 软件工具</p>\n<h3 id=\"1-下面各项中，-C-不是引入操作系统的最主要目的。\"><a href=\"#1-下面各项中，-C-不是引入操作系统的最主要目的。\" class=\"headerlink\" title=\"1.下面各项中， (C  ) 不是引入操作系统的最主要目的。\"></a>1.下面各项中， (C  ) 不是引入操作系统的最主要目的。</h3><p>A.方便用户使用             B.更有效地利用软.硬件资源</p>\n<p>C.及时响应用户请求           D.改善系统性能</p>\n<h3 id=\"2-分时系统响应时间与-D-有关。\"><a href=\"#2-分时系统响应时间与-D-有关。\" class=\"headerlink\" title=\"2.分时系统响应时间与(  D)有关。\"></a>2.分时系统响应时间与(  D)有关。</h3><p>A.每个应用进程分配的时间片长度     B.进程大小</p>\n<p>C.就绪进程数目             D.就绪进程数目和时间片长度</p>\n<h3 id=\"3-采用多道程序设计能-B-。\"><a href=\"#3-采用多道程序设计能-B-。\" class=\"headerlink\" title=\"3.采用多道程序设计能( B )。\"></a>3.采用多道程序设计能( B )。</h3><p>A.增加平均周转时间         B.发挥并提高并行工作能力</p>\n<p>C.缩短每道程序的执行时间      D.降低对处理器调度的要求</p>\n<h3 id=\"4-下面对进程的描述中，错误的是-D-。\"><a href=\"#4-下面对进程的描述中，错误的是-D-。\" class=\"headerlink\" title=\"4.下面对进程的描述中，错误的是( D )。\"></a>4.下面对进程的描述中，错误的是( D )。</h3><p> A.进程是动态的概念    B.进程执行需要处理机</p>\n<p> C.进程是有生命期的    D.进程是指令的集合</p>\n<h3 id=\"5-多道程序系统中，当-B-时，进程从执行状态转变为就绪状态。\"><a href=\"#5-多道程序系统中，当-B-时，进程从执行状态转变为就绪状态。\" class=\"headerlink\" title=\"5.多道程序系统中，当( B )时，进程从执行状态转变为就绪状态。\"></a>5.多道程序系统中，当( B )时，进程从执行状态转变为就绪状态。</h3><p>A.进程被进程调度程序选中      B.时间片到</p>\n<p>C.等待某一事件           D.等待的事件发生</p>\n<h3 id=\"6-下列选项中，导致创建新进程的操作是-C-。\"><a href=\"#6-下列选项中，导致创建新进程的操作是-C-。\" class=\"headerlink\" title=\"6.下列选项中，导致创建新进程的操作是( C )。\"></a>6.下列选项中，导致创建新进程的操作是( C )。</h3><p>I 用户登录成功           II 设备分配     III启动程序执行</p>\n<p>A.仅I和II     B.仅II和III    C.仅I和III     D.I II和III</p>\n<h3 id=\"7-下列因素中，-C-不一定是引起进程调度的因素。\"><a href=\"#7-下列因素中，-C-不一定是引起进程调度的因素。\" class=\"headerlink\" title=\"7.下列因素中，( C  )不一定是引起进程调度的因素。\"></a>7.下列因素中，( C  )不一定是引起进程调度的因素。</h3><p>   A.一个进程运行完毕        B.运行进程被阻塞 </p>\n<p>  C.一个高优先级进程被创建     D.实时调度中，一个紧迫的任务到来</p>\n<h3 id=\"8-一种既有利于短小作业又兼顾到长作业的作业调度算法是-C-。\"><a href=\"#8-一种既有利于短小作业又兼顾到长作业的作业调度算法是-C-。\" class=\"headerlink\" title=\"8.一种既有利于短小作业又兼顾到长作业的作业调度算法是( C  )。\"></a>8.一种既有利于短小作业又兼顾到长作业的作业调度算法是( C  )。</h3><p>A.先来先服务   B.轮转      C.最高响应比优先 D.均衡调度</p>\n<h3 id=\"9-“死锁”问题的讨论是针对-D-的。\"><a href=\"#9-“死锁”问题的讨论是针对-D-的。\" class=\"headerlink\" title=\"9. “死锁”问题的讨论是针对(  D )的。\"></a>9. “死锁”问题的讨论是针对(  D )的。</h3><p>A.某个进程申请系统中不存在的资源</p>\n<p>B.某个进程申请资源数超过了系统拥有的最大资源数</p>\n<p>C.硬件故障</p>\n<p>D.多个并发进程竞争独占型资源</p>\n<h3 id=\"10-采用资源剥夺法可以解除死锁，还可以采用-B-方法解除死锁。\"><a href=\"#10-采用资源剥夺法可以解除死锁，还可以采用-B-方法解除死锁。\" class=\"headerlink\" title=\"10.采用资源剥夺法可以解除死锁，还可以采用(B   )方法解除死锁。\"></a>10.采用资源剥夺法可以解除死锁，还可以采用(B   )方法解除死锁。</h3><p>A.执行并行操作           B.撤消进程</p>\n<p>C.拒绝分配新资源          D.修改信号量</p>\n<h3 id=\"11-下列对重定位的叙述中，正确的选项是-B-。\"><a href=\"#11-下列对重定位的叙述中，正确的选项是-B-。\" class=\"headerlink\" title=\"11.下列对重定位的叙述中，正确的选项是( B  )。\"></a>11.下列对重定位的叙述中，正确的选项是( B  )。</h3><p>A.经过静态重定位后，指令代码并不发生变化</p>\n<p>B.经过静态重定位后，数据地址和指令地址发生了变化</p>\n<p>C.经过动态重定位后，数据地址和指令地址都发生了变化</p>\n<p>D.经过动态重定位后，数据地址发生了变化而指令地址没有发生变化</p>\n<h3 id=\"12-将主存空闲区按地址顺序从小到大登记在空闲区表中，每次分配时总是顺序查找空闲区表，此种分配算法称为-A-分配算法。\"><a href=\"#12-将主存空闲区按地址顺序从小到大登记在空闲区表中，每次分配时总是顺序查找空闲区表，此种分配算法称为-A-分配算法。\" class=\"headerlink\" title=\"12.将主存空闲区按地址顺序从小到大登记在空闲区表中，每次分配时总是顺序查找空闲区表，此种分配算法称为(   A)分配算法。\"></a>12.将主存空闲区按地址顺序从小到大登记在空闲区表中，每次分配时总是顺序查找空闲区表，此种分配算法称为(   A)分配算法。</h3><p>A.最先适应    B.最优适应    C.最坏适应    D.随机适应</p>\n<h2 id=\"13-某系统采用页式存储管理策略，拥有逻辑地址空间32页，每页2K，拥有物理空间1M，进程的页表有（-B）项\"><a href=\"#13-某系统采用页式存储管理策略，拥有逻辑地址空间32页，每页2K，拥有物理空间1M，进程的页表有（-B）项\" class=\"headerlink\" title=\"13.某系统采用页式存储管理策略，拥有逻辑地址空间32页，每页2K，拥有物理空间1M，进程的页表有（  B）项\"></a>13.某系统采用页式存储管理策略，拥有逻辑地址空间32页，每页2K，拥有物理空间1M，进程的页表有（  B）项</h2><p>A.16       B.32       C.48       D.96</p>\n<h3 id=\"14-在段式存储管理的地址转换时，若段内地址大于段表中该段的长度，则发生（-D）。\"><a href=\"#14-在段式存储管理的地址转换时，若段内地址大于段表中该段的长度，则发生（-D）。\" class=\"headerlink\" title=\"14.在段式存储管理的地址转换时，若段内地址大于段表中该段的长度，则发生（  D）。\"></a>14.在段式存储管理的地址转换时，若段内地址大于段表中该段的长度，则发生（  D）。</h3><p>A.缺页中断             B.溢出中断</p>\n<p>C.硬件故障中断           D.地址越界中断</p>\n<h3 id=\"15-在I-x2F-O设备控制的发展过程中，最主要的推动因素是-C-。\"><a href=\"#15-在I-x2F-O设备控制的发展过程中，最主要的推动因素是-C-。\" class=\"headerlink\" title=\"15.在I&#x2F;O设备控制的发展过程中，最主要的推动因素是(  C )。\"></a>15.在I&#x2F;O设备控制的发展过程中，最主要的推动因素是(  C )。</h3><p>A.提高资源利用率        B.提高系统吞吐量</p>\n<p>C.减少主机对I&#x2F;O控制的干预   D.提高CPU与I&#x2F;O设备的并行操作程度</p>\n<h3 id=\"16-用户程序发出磁盘I-x2F-O请求后，系统的正确处理流程是-B-。\"><a href=\"#16-用户程序发出磁盘I-x2F-O请求后，系统的正确处理流程是-B-。\" class=\"headerlink\" title=\"16.用户程序发出磁盘I&#x2F;O请求后，系统的正确处理流程是(   B)。\"></a>16.用户程序发出磁盘I&#x2F;O请求后，系统的正确处理流程是(   B)。</h3><p>A.用户程序→系统调用处理程序→中断处理程序→设备驱动程序</p>\n<p>B.用户程序→系统调用处理程序→设备驱动程序→中断处理程序</p>\n<p>C.用户程序→设备驱动程序→系统调用处理程序→中断处理程序</p>\n<p>D.用户程序→设备驱动程序→中断处理程序→系统调用处理程序</p>\n<h3 id=\"17-逻辑文件的组织结构是由-C-确定的。\"><a href=\"#17-逻辑文件的组织结构是由-C-确定的。\" class=\"headerlink\" title=\"17.逻辑文件的组织结构是由( C  )确定的。\"></a>17.逻辑文件的组织结构是由( C  )确定的。</h3><p>A.操作系统    B.存储容量    C.用户      D.文件长度</p>\n<h3 id=\"18-在文件的物理结构中，-A-结构不利于文件长度的动态增长。\"><a href=\"#18-在文件的物理结构中，-A-结构不利于文件长度的动态增长。\" class=\"headerlink\" title=\"18.在文件的物理结构中，(  A )结构不利于文件长度的动态增长。\"></a>18.在文件的物理结构中，(  A )结构不利于文件长度的动态增长。</h3><p>A.顺序      B.链接      C.索引      D.Hash</p>\n<h3 id=\"19-文件系统中文件被按照名字存取是为了（-B-）。\"><a href=\"#19-文件系统中文件被按照名字存取是为了（-B-）。\" class=\"headerlink\" title=\"19.文件系统中文件被按照名字存取是为了（ B ）。\"></a>19.文件系统中文件被按照名字存取是为了（ B ）。</h3><p>A.方便操作系统对信息的管理     B.方便用户的使用</p>\n<p>C.确定文件的存取权限        D.加强对文件内容的保密</p>\n<h3 id=\"20-设文件F1当前引用计数值为1，先建立F1的符号链接-软链接-文件F2，再建立F1的硬软链接文件F3，然后删除F1。此时，F2和F3的引用计数值分别是（B-）。\"><a href=\"#20-设文件F1当前引用计数值为1，先建立F1的符号链接-软链接-文件F2，再建立F1的硬软链接文件F3，然后删除F1。此时，F2和F3的引用计数值分别是（B-）。\" class=\"headerlink\" title=\"20.设文件F1当前引用计数值为1，先建立F1的符号链接(软链接)文件F2，再建立F1的硬软链接文件F3，然后删除F1。此时，F2和F3的引用计数值分别是（B  ）。\"></a>20.设文件F1当前引用计数值为1，先建立F1的符号链接(软链接)文件F2，再建立F1的硬软链接文件F3，然后删除F1。此时，F2和F3的引用计数值分别是（B  ）。</h3><p>A.0，1 B.1，1   C.1，2     D.2，1</p>\n<h3 id=\"21-多道批处理系统的主要缺点是-C-。\"><a href=\"#21-多道批处理系统的主要缺点是-C-。\" class=\"headerlink\" title=\"21.多道批处理系统的主要缺点是(C  )。\"></a>21.多道批处理系统的主要缺点是(C  )。</h3><p>  A.CPU利用率低    B.不能并发执行   C.缺少交互性   D.以上都不是</p>\n<h3 id=\"22-下列选项中，操作系统提供给应用程序的接口是-A-。\"><a href=\"#22-下列选项中，操作系统提供给应用程序的接口是-A-。\" class=\"headerlink\" title=\"22.下列选项中，操作系统提供给应用程序的接口是( A ) 。\"></a>22.下列选项中，操作系统提供给应用程序的接口是( A ) 。</h3><p>   A.系统调用      B.中断      C.库函数      D.原语</p>\n<h3 id=\"23-多道程序设计是指-C-。\"><a href=\"#23-多道程序设计是指-C-。\" class=\"headerlink\" title=\"23.多道程序设计是指(C  )。\"></a>23.多道程序设计是指(C  )。</h3><p>A.在多台处理机上同时执行多道程序  B.在多台处理机上同一时刻执行多道程序</p>\n<p>C.在一台处理机上同时执行多道程序  D.在一台处理机上同一时刻执行多道程序</p>\n<h3 id=\"24-有关进程的下列叙述中，-D-是正确的。\"><a href=\"#24-有关进程的下列叙述中，-D-是正确的。\" class=\"headerlink\" title=\"24.有关进程的下列叙述中，(D  )是正确的。\"></a>24.有关进程的下列叙述中，(D  )是正确的。</h3><p>A.进程是静态的文本         B.进程与程序是一一对应的</p>\n<p>C.进程与作业是一一对应的      D.多个进程可以在单个CPU上同时执行</p>\n<h3 id=\"25-下列的进程状态变化中，-C-的变化是不可能发生的。\"><a href=\"#25-下列的进程状态变化中，-C-的变化是不可能发生的。\" class=\"headerlink\" title=\"25.下列的进程状态变化中，( C )的变化是不可能发生的。\"></a>25.下列的进程状态变化中，( C )的变化是不可能发生的。</h3><p>A.运行→就绪   B.运行→等待   C.等待→运行  D.等待→就绪</p>\n<h3 id=\"26-下面所述步骤中，-A-不是创建进程所必需的。\"><a href=\"#26-下面所述步骤中，-A-不是创建进程所必需的。\" class=\"headerlink\" title=\"26.下面所述步骤中，( A )不是创建进程所必需的。\"></a>26.下面所述步骤中，( A )不是创建进程所必需的。</h3><p>  A.由调度程序为进程分配CPU   B.建立一个进程控制块</p>\n<p>  C.为进程分配内存        D.将进程控制块链入就绪队列</p>\n<h3 id=\"27-下列各项中，不是进程调度时机的是-D-。\"><a href=\"#27-下列各项中，不是进程调度时机的是-D-。\" class=\"headerlink\" title=\"27.下列各项中，不是进程调度时机的是(   D)。\"></a>27.下列各项中，不是进程调度时机的是(   D)。</h3><p>A.现运行的进程正常结束或异常结束  B.现运行的进程从运行态进入就绪态</p>\n<p>C.现运行的进程从运行态进入等待态  D.有一进程从等待态进入就绪态</p>\n<h3 id=\"28-在作业调度中，排队等待时间最长的作业被优先调度，这是指-A-调度算法。\"><a href=\"#28-在作业调度中，排队等待时间最长的作业被优先调度，这是指-A-调度算法。\" class=\"headerlink\" title=\"28.在作业调度中，排队等待时间最长的作业被优先调度，这是指(  A )调度算法。\"></a>28.在作业调度中，排队等待时间最长的作业被优先调度，这是指(  A )调度算法。</h3><p>A.先来先服务            B.短作业优先</p>\n<p>C.响应比高优先           D.优先级</p>\n<h3 id=\"29-产生死锁的原因与-D-有关。\"><a href=\"#29-产生死锁的原因与-D-有关。\" class=\"headerlink\" title=\"29.产生死锁的原因与( D  )有关。\"></a>29.产生死锁的原因与( D  )有关。</h3><p>A.与多个进程竞争CPU        B.与多个进程释放资源</p>\n<p>C.仅由于并发进程的执行速度不当  D.除资源分配策略不当外，也与并发进程执行速度不当</p>\n<h3 id=\"30-某计算机系统中有8台打印机，有k个进程竞争使用，每个进程最多需要3台打印机。该系统可能会发生死锁的k的最小值是-C-。\"><a href=\"#30-某计算机系统中有8台打印机，有k个进程竞争使用，每个进程最多需要3台打印机。该系统可能会发生死锁的k的最小值是-C-。\" class=\"headerlink\" title=\"30.某计算机系统中有8台打印机，有k个进程竞争使用，每个进程最多需要3台打印机。该系统可能会发生死锁的k的最小值是( C  )。\"></a>30.某计算机系统中有8台打印机，有k个进程竞争使用，每个进程最多需要3台打印机。该系统可能会发生死锁的k的最小值是( C  )。</h3><p>(最坏情况每bai个进程du卡2台，4个进程全部卡zhi死)</p>\n<p>A.2        B.3        C.4        D.5</p>\n<h3 id=\"31-在虚拟内存管理中，地址变换机构将逻辑地址变换为物理地址，形成该逻辑地址的阶段是-B-。\"><a href=\"#31-在虚拟内存管理中，地址变换机构将逻辑地址变换为物理地址，形成该逻辑地址的阶段是-B-。\" class=\"headerlink\" title=\"31.在虚拟内存管理中，地址变换机构将逻辑地址变换为物理地址，形成该逻辑地址的阶段是(  B )。\"></a>31.在虚拟内存管理中，地址变换机构将逻辑地址变换为物理地址，形成该逻辑地址的阶段是(  B )。</h3><p>A.编辑      B.编译      C.连接      D.装载</p>\n<h3 id=\"32-在系统运行时，对于固定分区的存储管理方式，内存中能并发执行的作业的最大数量是-。\"><a href=\"#32-在系统运行时，对于固定分区的存储管理方式，内存中能并发执行的作业的最大数量是-。\" class=\"headerlink\" title=\"32.在系统运行时，对于固定分区的存储管理方式，内存中能并发执行的作业的最大数量是(   )。\"></a>32.在系统运行时，对于固定分区的存储管理方式，内存中能并发执行的作业的最大数量是(   )。</h3><p>A.用户确定的   B.可变的     C.不受限制的   D.固定的</p>\n<h3 id=\"33-在操作系统的存储管理中，页式分配是（-A-）。\"><a href=\"#33-在操作系统的存储管理中，页式分配是（-A-）。\" class=\"headerlink\" title=\"33.在操作系统的存储管理中，页式分配是（ A ）。\"></a>33.在操作系统的存储管理中，页式分配是（ A ）。</h3><p>A.把程序的逻辑空间和内存的物理空间按同样的尺寸分成若干页</p>\n<p>B.把作业按其所需空间分成若干页</p>\n<p>C.将内存的空闲空间分成若干页</p>\n<p>D.随机地将每个作业的地址空间分成大小相同的若干页</p>\n<h3 id=\"34-在段式存储管理中，下列哪个说法是正确的（-A-）。\"><a href=\"#34-在段式存储管理中，下列哪个说法是正确的（-A-）。\" class=\"headerlink\" title=\"34.在段式存储管理中，下列哪个说法是正确的（ A ）。\"></a>34.在段式存储管理中，下列哪个说法是正确的（ A ）。</h3><p>A.以段为单位分配，每一段是一个连续存储区    B.段与段之间必定不连续</p>\n<p>C.段与段之间必定连续              D.每段是等长的</p>\n<h3 id=\"35-I-x2F-O系统硬件结构分为4级：①设备控制器；②I-x2F-O设备；③计算机；④I-x2F-O通道。按级别由高到低的顺序是-D-。\"><a href=\"#35-I-x2F-O系统硬件结构分为4级：①设备控制器；②I-x2F-O设备；③计算机；④I-x2F-O通道。按级别由高到低的顺序是-D-。\" class=\"headerlink\" title=\"35.I&#x2F;O系统硬件结构分为4级：①设备控制器；②I&#x2F;O设备；③计算机；④I&#x2F;O通道。按级别由高到低的顺序是(   D)。\"></a>35.I&#x2F;O系统硬件结构分为4级：①设备控制器；②I&#x2F;O设备；③计算机；④I&#x2F;O通道。按级别由高到低的顺序是(   D)。</h3><p>A.②-④-①-③   B.③-①-④-②   C.②-①-④-③   D.③-④-①-②</p>\n<h3 id=\"36-I-x2F-O软件一般分为4个层次：用户层、与设备无关软件层、设备驱动程序、中断处理程序。以下工作中，不是由设备驱动程序完成的是-C-。\"><a href=\"#36-I-x2F-O软件一般分为4个层次：用户层、与设备无关软件层、设备驱动程序、中断处理程序。以下工作中，不是由设备驱动程序完成的是-C-。\" class=\"headerlink\" title=\"36.I&#x2F;O软件一般分为4个层次：用户层、与设备无关软件层、设备驱动程序、中断处理程序。以下工作中，不是由设备驱动程序完成的是(  C )。\"></a>36.I&#x2F;O软件一般分为4个层次：用户层、与设备无关软件层、设备驱动程序、中断处理程序。以下工作中，不是由设备驱动程序完成的是(  C )。</h3><p>A.向设备寄存器写命令</p>\n<p>B.检查用户是否有权使用设备</p>\n<p>C.将二进制整数转换成ASCII码以便打印</p>\n<p>D.解释用户的I&#x2F;O请求，并将该请求转化为具体的I&#x2F;O操作</p>\n<h3 id=\"37-以下关于文件组织结构的说法中，错误的是-C-。\"><a href=\"#37-以下关于文件组织结构的说法中，错误的是-C-。\" class=\"headerlink\" title=\"37.以下关于文件组织结构的说法中，错误的是( C  )。\"></a>37.以下关于文件组织结构的说法中，错误的是( C  )。</h3><p>A.文件组织从用户和文件系统的不同角度出发分为逻辑文件和物理文件</p>\n<p>B.逻辑文件是用户概念中的文件，分为流式文件和记录式文件</p>\n<p>C.磁带文件的物理组织方式一般可以采用顺序结构或链接结构</p>\n<p>D.磁盘文件的物理组织方式一般可以采用顺序结构、链接结构或索引结构等</p>\n<h3 id=\"38-采用直接存取（随机存取）方法来读写磁盘上的物理记录时，效率最低的是-C-。\"><a href=\"#38-采用直接存取（随机存取）方法来读写磁盘上的物理记录时，效率最低的是-C-。\" class=\"headerlink\" title=\"38.采用直接存取（随机存取）方法来读写磁盘上的物理记录时，效率最低的是(C   ) 。\"></a>38.采用直接存取（随机存取）方法来读写磁盘上的物理记录时，效率最低的是(C   ) 。</h3><p>A.连续结构文件           B.索引结构文件</p>\n<p>C.隐式链接结构文件         D.显式链接结构文件</p>\n<h3 id=\"39-文件系统采用多级目录结构可以（B-）。\"><a href=\"#39-文件系统采用多级目录结构可以（B-）。\" class=\"headerlink\" title=\"39.文件系统采用多级目录结构可以（B  ）。\"></a>39.文件系统采用多级目录结构可以（B  ）。</h3><p>A.节省存储空间           B.解决命名冲突</p>\n<p>C.缩短文件传送时间         D.减少系统开销</p>\n<h3 id=\"40-以下（-B-）不是磁盘存储空间的常用管理方法。\"><a href=\"#40-以下（-B-）不是磁盘存储空间的常用管理方法。\" class=\"headerlink\" title=\"40.以下（ B ）不是磁盘存储空间的常用管理方法。\"></a>40.以下（ B ）不是磁盘存储空间的常用管理方法。</h3><p>A.位示图     B.记录的成组操作    C.空闲块表  D.空闲块链</p>\n<h3 id=\"41-从用户的观点看，操作系统是-A-。\"><a href=\"#41-从用户的观点看，操作系统是-A-。\" class=\"headerlink\" title=\"41.从用户的观点看，操作系统是(  A)。\"></a>41.从用户的观点看，操作系统是(  A)。</h3><p>A.用户与计算机之间的接口          B.控制和管理计算机系统的资源</p>\n<p>C.合理组织计算机工作流程          D.一个大型的工具软件</p>\n<h3 id=\"42-下列选项中，在用户态执行的是-A-。\"><a href=\"#42-下列选项中，在用户态执行的是-A-。\" class=\"headerlink\" title=\"42.下列选项中，在用户态执行的是(A  ) 。\"></a>42.下列选项中，在用户态执行的是(A  ) 。</h3><p>A.命令解释程序           B.缺页处理程序</p>\n<p>C.进程调度程序           D.时钟中断处理程序</p>\n<h3 id=\"43-在计算机系统中，允许多个程序同时进入内存并运行，这种方法称为-D-。\"><a href=\"#43-在计算机系统中，允许多个程序同时进入内存并运行，这种方法称为-D-。\" class=\"headerlink\" title=\"43.在计算机系统中，允许多个程序同时进入内存并运行，这种方法称为( D )。\"></a>43.在计算机系统中，允许多个程序同时进入内存并运行，这种方法称为( D )。</h3><p>A.SPOOLing技术           B.虚拟存储技术</p>\n<p>C.缓冲技术             D.多道程序设计技术</p>\n<h3 id=\"44-一个进程是-C-。\"><a href=\"#44-一个进程是-C-。\" class=\"headerlink\" title=\"44.一个进程是( C )。\"></a>44.一个进程是( C )。</h3><p>A.由协处理器执行的一个程序     B.一个独立的程序 + 数据集</p>\n<p>C.PCB结构.程序和数据的集合     D.一个独立的程序</p>\n<h3 id=\"45-如果单CPU系统中有n个并发进程，则就绪队列中进程个数最多可达-B-个。\"><a href=\"#45-如果单CPU系统中有n个并发进程，则就绪队列中进程个数最多可达-B-个。\" class=\"headerlink\" title=\"45.如果单CPU系统中有n个并发进程，则就绪队列中进程个数最多可达(B  )个。\"></a>45.如果单CPU系统中有n个并发进程，则就绪队列中进程个数最多可达(B  )个。</h3><p>A.n        B.n-1       C.n-2       D.1</p>\n<h3 id=\"46-通常，用户进程被建立后，-B-。\"><a href=\"#46-通常，用户进程被建立后，-B-。\" class=\"headerlink\" title=\"46.通常，用户进程被建立后，( B )。\"></a>46.通常，用户进程被建立后，( B )。</h3><p> A.便一直存在于系统中，直到被操作人员撒消 </p>\n<p> B.随着作业运行正常或不正常结束而撒消  </p>\n<p> C.随着时间片轮转而撒消与建立  </p>\n<p> D.随着进程的阻塞或唤醒而撒消与建立</p>\n<h3 id=\"47-支持多道程序设计的操作系统在运行过程中，不断地选择新进程运行来实现CPU的共享，下列选项中，-D-不是引起操作系统选择新进程的直接原因。\"><a href=\"#47-支持多道程序设计的操作系统在运行过程中，不断地选择新进程运行来实现CPU的共享，下列选项中，-D-不是引起操作系统选择新进程的直接原因。\" class=\"headerlink\" title=\"47.支持多道程序设计的操作系统在运行过程中，不断地选择新进程运行来实现CPU的共享，下列选项中，(D   )不是引起操作系统选择新进程的直接原因。\"></a>47.支持多道程序设计的操作系统在运行过程中，不断地选择新进程运行来实现CPU的共享，下列选项中，(D   )不是引起操作系统选择新进程的直接原因。</h3><p>A.运行进程的时间片用完       B.运行进程出错</p>\n<p>C.运行进程要等待某一时件发生    D.有新进程进入就绪状态</p>\n<h3 id=\"48-分时系统中进程调度算法通常采用-B-。\"><a href=\"#48-分时系统中进程调度算法通常采用-B-。\" class=\"headerlink\" title=\"48.分时系统中进程调度算法通常采用( B  )。\"></a>48.分时系统中进程调度算法通常采用( B  )。</h3><p>A.响应比高者优先          B.时间片轮转法</p>\n<p>C.先来先服务            D.短作业优先</p>\n<h3 id=\"49-在操作系统中，所谓“死锁”是指-B-。\"><a href=\"#49-在操作系统中，所谓“死锁”是指-B-。\" class=\"headerlink\" title=\"49.在操作系统中，所谓“死锁”是指( B  )。\"></a>49.在操作系统中，所谓“死锁”是指( B  )。</h3><p>A.程序死循环   B.多个进程彼此等待资源而不能前进的状态</p>\n<p>C.硬件故障    D.时间片太短，进程的调进调出太频繁而效率太低</p>\n<h3 id=\"50-在多进程的并发系统中，肯定不会因竞争-D-而产生死锁。\"><a href=\"#50-在多进程的并发系统中，肯定不会因竞争-D-而产生死锁。\" class=\"headerlink\" title=\"50.在多进程的并发系统中，肯定不会因竞争(   D)而产生死锁。\"></a>50.在多进程的并发系统中，肯定不会因竞争(   D)而产生死锁。</h3><p>A.打印机     B.磁带机     C.磁盘      D.CPU</p>\n<h3 id=\"51-把目标程序中的逻辑地址转换成主存空间的物理地址称为-B-。\"><a href=\"#51-把目标程序中的逻辑地址转换成主存空间的物理地址称为-B-。\" class=\"headerlink\" title=\"51.把目标程序中的逻辑地址转换成主存空间的物理地址称为(   B)。\"></a>51.把目标程序中的逻辑地址转换成主存空间的物理地址称为(   B)。</h3><p>A.存储分配    B.地址重定位   C.地址保护    D.程序移动</p>\n<h3 id=\"52-在下述存储管理方案中，-D-管理方式要求作业的逻辑地址与占有主存的存储区域都是连续的。\"><a href=\"#52-在下述存储管理方案中，-D-管理方式要求作业的逻辑地址与占有主存的存储区域都是连续的。\" class=\"headerlink\" title=\"52.在下述存储管理方案中，( D  )管理方式要求作业的逻辑地址与占有主存的存储区域都是连续的。\"></a>52.在下述存储管理方案中，( D  )管理方式要求作业的逻辑地址与占有主存的存储区域都是连续的。</h3><p>A.段页式      B.页式       C.段式       D.可变分区</p>\n<h3 id=\"53-页式存储管理中，每次从主存中取指令或取操作数，当读快表失败时，要读（B-）次主存。\"><a href=\"#53-页式存储管理中，每次从主存中取指令或取操作数，当读快表失败时，要读（B-）次主存。\" class=\"headerlink\" title=\"53.页式存储管理中，每次从主存中取指令或取操作数，当读快表失败时，要读（B  ）次主存。\"></a>53.页式存储管理中，每次从主存中取指令或取操作数，当读快表失败时，要读（B  ）次主存。</h3><p>A.1        B.2        C.3        D.4</p>\n<h3 id=\"54-采用段页式存储管理，在CPU中应设置（-A）寄存器。\"><a href=\"#54-采用段页式存储管理，在CPU中应设置（-A）寄存器。\" class=\"headerlink\" title=\"54.采用段页式存储管理，在CPU中应设置（  A）寄存器。\"></a>54.采用段页式存储管理，在CPU中应设置（  A）寄存器。</h3><p>A.段表和页表控制 B.段表控制    C.页表控制    D.界地址</p>\n<h3 id=\"55-硬件采用了中断和通道技术，使得-B-。\"><a href=\"#55-硬件采用了中断和通道技术，使得-B-。\" class=\"headerlink\" title=\"55.硬件采用了中断和通道技术，使得( B  )。\"></a>55.硬件采用了中断和通道技术，使得( B  )。</h3><p> A.CPU与外设能紧密结合        B.CPU与外设能并行工作</p>\n<p> C.CPU速度提高            D.外设速度提高</p>\n<h3 id=\"56-程序员利用系统调用打开I-x2F-O设备时，通常使用的设备标识符是-A-。\"><a href=\"#56-程序员利用系统调用打开I-x2F-O设备时，通常使用的设备标识符是-A-。\" class=\"headerlink\" title=\"56.程序员利用系统调用打开I&#x2F;O设备时，通常使用的设备标识符是(A   )。\"></a>56.程序员利用系统调用打开I&#x2F;O设备时，通常使用的设备标识符是(A   )。</h3><p>A.逻辑设备名   B.物理设备名   C.主设备号    D.从设备号</p>\n<h3 id=\"57-下列选项中，-B-不是删除文件所需要完成的工作。\"><a href=\"#57-下列选项中，-B-不是删除文件所需要完成的工作。\" class=\"headerlink\" title=\"57.下列选项中，(  B )不是删除文件所需要完成的工作。\"></a>57.下列选项中，(  B )不是删除文件所需要完成的工作。</h3><p>A.释放文件所占用的存储空间</p>\n<p>B.对文件原占用的存储单元全部清零</p>\n<p>C.删除该文件的目录项，即文件控制块(FCB)</p>\n<p>D.若文件为共享文件，还要对共享设置进行处理</p>\n<h3 id=\"58-下列文件物理结构中，适合随机访问且易于文件扩展的是-B-。\"><a href=\"#58-下列文件物理结构中，适合随机访问且易于文件扩展的是-B-。\" class=\"headerlink\" title=\"58.下列文件物理结构中，适合随机访问且易于文件扩展的是( B  )。\"></a>58.下列文件物理结构中，适合随机访问且易于文件扩展的是( B  )。</h3><p>A.连续结构             B.索引结构</p>\n<p>C.链式结构且磁盘块定长        D.链式结构且磁盘块变长</p>\n<h3 id=\"59-不包含在文件控制块（又称文件目录项）中的信息是-（AA-）。\"><a href=\"#59-不包含在文件控制块（又称文件目录项）中的信息是-（AA-）。\" class=\"headerlink\" title=\"59.不包含在文件控制块（又称文件目录项）中的信息是 （AA  ）。\"></a>59.不包含在文件控制块（又称文件目录项）中的信息是 （AA  ）。</h3><p>A.存储介质标志           B.文件名</p>\n<p>C.存取控制信息           D.文件的物理结构</p>\n<h3 id=\"60-某操作系统的文件系统中，采用3个字节表示磁盘块号，每个磁盘块大小为512字节。该系统中每个（逻辑）磁盘允许的最大容量是（-C-）字节。\"><a href=\"#60-某操作系统的文件系统中，采用3个字节表示磁盘块号，每个磁盘块大小为512字节。该系统中每个（逻辑）磁盘允许的最大容量是（-C-）字节。\" class=\"headerlink\" title=\"60.某操作系统的文件系统中，采用3个字节表示磁盘块号，每个磁盘块大小为512字节。该系统中每个（逻辑）磁盘允许的最大容量是（ C ）字节。\"></a>60.某操作系统的文件系统中，采用3个字节表示磁盘块号，每个磁盘块大小为512字节。该系统中每个（逻辑）磁盘允许的最大容量是（ C ）字节。</h3><p>A.2G  B.4G  C.8G  D.16G</p>\n<h3 id=\"答案：\"><a href=\"#答案：\" class=\"headerlink\" title=\"答案：\"></a>答案：</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">1.C   2.D   3.B   4.D   5.B\n\n 6.C   7.C   8.C   9.D  10.B\n\n11.B  12.A  13.B  14.D  15.C\n\n16.B  17.C  18.A  19.B  20.B\n\n21.C  22.A  23.C  24.D  25.C\n\n26.A  27.D   28.A  29.D  30.C\n\n31.B  32.D  33.A  34.A  35.D\n\n36.C  37.C  38.C  39.B  40.B\n\n41.A   42.A  43.D  44.C   45.B\n\n46.B   47.D  48.B   49.B  50.D\n\n51.B  52.D  53.B   54.A  55.B\n\n56.A  57.B  58.B   59.A  60.C<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1、试说明进程在三个基本状态之间转换的典型原因。\"><a href=\"#1、试说明进程在三个基本状态之间转换的典型原因。\" class=\"headerlink\" title=\"1、试说明进程在三个基本状态之间转换的典型原因。\"></a>1、试说明进程在三个基本状态之间转换的典型原因。</h3><p>答案：（1）就绪状态→执行状态：进程分配到CPU资源 （2）执行状态→就绪状态：时间片用完 （3）执行状态→阻塞状态：I&#x2F;O请求 （4）阻塞状态→就绪状态：I&#x2F;O完成 </p>\n<h3 id=\"2、什么是基于顺序搜索的动态分区分配算法？它可分为哪几种？\"><a href=\"#2、什么是基于顺序搜索的动态分区分配算法？它可分为哪几种？\" class=\"headerlink\" title=\"2、什么是基于顺序搜索的动态分区分配算法？它可分为哪几种？\"></a>2、什么是基于顺序搜索的动态分区分配算法？它可分为哪几种？</h3><p>答案：为了实现动态分区式分配，将系统中的空闲分区组织成空闲分区表或空闲分区链。所谓顺序搜索，是指按表或链的组织顺序，检索表或链上记录的空闲分区，去寻找一个最符合算法的、大小能满足要求的分区。 </p>\n<p>分区存储管理中常采用的分配策略有：首次适应算法、循环首次适应算法、最佳适应算法、最坏适应算法。</p>\n<h3 id=\"3、试说明低级调度的主要功能。\"><a href=\"#3、试说明低级调度的主要功能。\" class=\"headerlink\" title=\"3、试说明低级调度的主要功能。\"></a>3、试说明低级调度的主要功能。</h3><p>答案：（1）保存处理机的现场信息（2）按某种算法选取进程（3）把处理机分配给进程。</p>\n<h3 id=\"4、试从动态性，并发性和独立性上比较进程和程序\"><a href=\"#4、试从动态性，并发性和独立性上比较进程和程序\" class=\"headerlink\" title=\"4、试从动态性，并发性和独立性上比较进程和程序?\"></a>4、试从动态性，并发性和独立性上比较进程和程序?</h3><p>答案：(1)动态性是进程最基本的特性，表现为由创建而产生，由调度而执行，因得不到资源而暂停执行，由撤销而消亡。进程有一定的生命期，而程序只是一组有序的指令集合，是静态实体。</p>\n<p>(2)并发性是进程的重要特征，同时也是OS 的重要特征。引入进程的目的正是为了使其程序能和其它进程的程序并发执行，而程序是不能并发执行的。</p>\n<p>(3)独立性是指进程实体是一个能独立运行的基本单位，也是系统中独立获得资源和独立调度的基本单位。对于未建立任何进程的程序，不能作为独立单位参加运行。</p>\n<h3 id=\"5、实现虚拟存储器需要哪些硬件支持？\"><a href=\"#5、实现虚拟存储器需要哪些硬件支持？\" class=\"headerlink\" title=\"5、实现虚拟存储器需要哪些硬件支持？\"></a>5、实现虚拟存储器需要哪些硬件支持？</h3><p>答案：</p>\n<p>（1）请求分页（段）的页（段）表机制</p>\n<p>（2）缺页（段）中断机构</p>\n<p>（3）地址变换机构</p>\n<h3 id=\"6、引入缓冲的主要原因是什么？\"><a href=\"#6、引入缓冲的主要原因是什么？\" class=\"headerlink\" title=\"6、引入缓冲的主要原因是什么？\"></a>6、引入缓冲的主要原因是什么？</h3><p>答案：</p>\n<p>缓和CPU与I&#x2F;O设备之间速度不匹配的矛盾；</p>\n<p>减少对CPU的中断频率；</p>\n<p>放宽对中断响应时间的限制；</p>\n<p>解决数据力度不匹配的问题；</p>\n<p>提高CPU和I&#x2F;O设备之间的并行性。</p>\n<h3 id=\"7、处理机管理有哪些主要功能？其主要任务是什么？\"><a href=\"#7、处理机管理有哪些主要功能？其主要任务是什么？\" class=\"headerlink\" title=\"7、处理机管理有哪些主要功能？其主要任务是什么？\"></a>7、处理机管理有哪些主要功能？其主要任务是什么？</h3><p>答案：处理机管理的主要功能是：进程管理、进程同步、进程通信和处理机调度； 进程管理：为作业创建进程，撤销已结束进程，控制进程在运行过程中的状态转换。 进程同步：为多个进程（含线程）的运行进行协调。进程 通信：用来实现在相互合作的进程之间的信息交换。 处理机调度： （1）作业调度。从后备队里按照一定的算法，选出若干个作业，为他们分配运行所需的资源。（2）进程调度：从进程的就绪队列中，按照一定算法选出一个进程，把处理机分配给 它，并设臵运行现场，使进程投入执行。</p>\n<h3 id=\"8、虚拟存储器有哪些特征？其中最本质的特征是什么？\"><a href=\"#8、虚拟存储器有哪些特征？其中最本质的特征是什么？\" class=\"headerlink\" title=\"8、虚拟存储器有哪些特征？其中最本质的特征是什么？\"></a>8、虚拟存储器有哪些特征？其中最本质的特征是什么？</h3><p>答案：虚拟存储器有多次性、对换性、虚拟性三大特征。最本质的特征是虚拟性。</p>\n<h3 id=\"9、文件系统的模型-可分为三层，试说明其每一层所包含的基本内容。\"><a href=\"#9、文件系统的模型-可分为三层，试说明其每一层所包含的基本内容。\" class=\"headerlink\" title=\"9、文件系统的模型 可分为三层，试说明其每一层所包含的基本内容。\"></a>9、文件系统的模型 可分为三层，试说明其每一层所包含的基本内容。</h3><p>答案：第一层：对象及其属性说明（文件、目录、硬盘或磁带存储空间）； </p>\n<p>第二层：对对象操纵和管理的软件集合（I&#x2F;O控制层即设备驱动程序、基本文件系统即物理I&#x2F;O层、基本I&#x2F;O管理程序或文件组织模块层、逻辑文件系统层） 第三层：文件系统接口（命令接口&#x2F;图形化用户接口与程序接口）。</p>\n<h3 id=\"10、文件管理有哪些主要功能？其主要任务是什么？\"><a href=\"#10、文件管理有哪些主要功能？其主要任务是什么？\" class=\"headerlink\" title=\"10、文件管理有哪些主要功能？其主要任务是什么？\"></a>10、文件管理有哪些主要功能？其主要任务是什么？</h3><p>答案：文件管理主要功能：文件存储空间的管理、目录管理、文件的读（写）管理和保护。 文件管理的主要任务：管理用户文件和系统文件，方便用户使用，保证文件安全性。</p>\n<h3 id=\"11、试从调度性、并发性、拥有资源性及系统开销方面对进程和线程进行比较。\"><a href=\"#11、试从调度性、并发性、拥有资源性及系统开销方面对进程和线程进行比较。\" class=\"headerlink\" title=\"11、试从调度性、并发性、拥有资源性及系统开销方面对进程和线程进行比较。\"></a>11、试从调度性、并发性、拥有资源性及系统开销方面对进程和线程进行比较。</h3><p>答案： a. 调度性。在传统的操作系统中，拥有资源的基本单位和独立调度、分派的基本单位都是进程，在引入线程的OS中，则把线程作为调度和分派的基本单位，而把进程作为资源拥有的基本单位； b. 并发性。在引入线程的OS中，不仅进程之间可以并发执行，而且在一个进程中的多个线程之间，亦可并发执行，因而使OS具有更好的并发性； c. 拥有资源。无论是传统的操作系统，还是引入了线程的操作系统，进程始终是拥有资源的一个基本单位，而线程除了拥有一点在运行时必不可少的资源外，本身基本不拥有系统资源，但它可以访问其隶属进程的资源； d. 开销。由于创建或撤销进程时，系统都要为之分配和回收资源，如内存空间等，进程切换时所要保存和设置的现场信息也要明显地多于线程，因此，操作系统在创建、撤消和切换进程时所付出的开销将显著地大于线程。</p>\n<h3 id=\"12、与文件系统有关的软件可分为哪几个层次？\"><a href=\"#12、与文件系统有关的软件可分为哪几个层次？\" class=\"headerlink\" title=\"12、与文件系统有关的软件可分为哪几个层次？\"></a>12、与文件系统有关的软件可分为哪几个层次？</h3><p>答案：一般地，把与文件系统有关的软件分为四个层次：</p>\n<ol>\n<li>I&#x2F;O控制层，是文件系统的最低层，主要由磁盘驱动程序等组成，也可成为设备驱动程序层</li>\n<li>基本文件系统层，主要用于处理内存与磁盘之间数据块的交换。</li>\n<li>基本I&#x2F;O管理程序，该层用于完成与磁盘I&#x2F;O有关的事务，如将文件逻辑块号转换为物理块号，管理磁盘中的空闲盘块，I&#x2F;O缓冲的指定等。</li>\n<li>逻辑文件系统，用于处理与记录和文件相关的操作，如允许用户和应用程序使用符号文件名访问文件及记录，实现对文件的记录和保护等。</li>\n</ol>\n<h3 id=\"13-简述操作系统的基本特征和功能。\"><a href=\"#13-简述操作系统的基本特征和功能。\" class=\"headerlink\" title=\"13.简述操作系统的基本特征和功能。\"></a>13.简述操作系统的基本特征和功能。</h3><p>答：基本特征：并发、共享、异步、虚拟。</p>\n<p>  功能：处理机管理、存储器管理、设备管理、文件管理、用户接口。</p>\n<h3 id=\"14-试比较进程与程序的差异。\"><a href=\"#14-试比较进程与程序的差异。\" class=\"headerlink\" title=\"14.试比较进程与程序的差异。\"></a>14.试比较进程与程序的差异。</h3><p>答：（1）程序是一个静态概念，而进程是一个动态概念，是程序的一次执行；</p>\n<p> （2）进程具有并行特性，而程序没有；</p>\n<p>  （3）进程和程序不是一一对应的，一个程序可对应多个进程；一个进程可以执行一个或几个程序。</p>\n<ol start=\"15\">\n<li>某进程调度程序采用基于优先数(priority)的调度策略，即选择优先数最小的进程运行，进程创建时由用户指定一个nice作为静态优先数。为了动态调整优先数，引入运行时间cpuTime和等待时间waitTime，初值均为0。进程处于执行态时，cpuTime定时加1，且waitTime置0；进程处于就绪态时，cpuTime置0，waitTime定时加1。请回答下列问题。</li>\n</ol>\n<p>(1)若调度程序只将nice的值作为进程的优先数，即priority&#x3D;nice，则可能会出现饥饿现象，为什么?</p>\n<p>(2)使用nice、cpuTime和waitTime设计一种动态优先数计算方法，以避免产生饥饿现象，并说明waitTime的作用。</p>\n<p>答：（1）由于采用了静态优先数，当就绪队列中总有优先数较小的进程时，优先数较大的进程一直没有机会运行，因而会出现饥饿现象。</p>\n<p>（2）优先数的计算公式为：</p>\n<p>priority&#x3D;nice+k1<em>cpuTime- k2</em>waitTime,其中k1&gt;0, k2&gt;0。waitTime可使长时间等待的进程的优先数减少。</p>\n<ol start=\"16\">\n<li>SPOOLing系统由哪几部分组成？以打印机为例说明如何利用SPOOLing技术实现多个进程对打印机的</li>\n</ol>\n<p>答 组成：(1)输入井和输出井,(2)输入和输出缓冲区,(3)输入(收容)进程SPi 和输出(提取)进程Spo。</p>\n<p>当用户进程请求打印输出时， SPOOLing系统同意为它打印输出， 但并不真正立即把打印机分配给该用户进程， 而只为它做两件事： ① 由输出进程在输出井中为之申请一个空闲磁盘块区， 并将要打印的数据送入其中； ② 输出进程再为用户进程申请一张空白的用户请求打印表，并将用户的打印要求填入其中， 再将该表挂到请求打印队列上。</p>\n<p>当打印机空闲，输出进程将从请求打印队列的对首取出一张请求打印表，根据表中的要求将打印的数据从输出井传送到内存缓冲区，再由打印机打印….。</p>\n<h3 id=\"20-一个例子的形式讲解逻辑地址到物理地址的转换：\"><a href=\"#20-一个例子的形式讲解逻辑地址到物理地址的转换：\" class=\"headerlink\" title=\"20.一个例子的形式讲解逻辑地址到物理地址的转换：\"></a>20.一个例子的形式讲解逻辑地址到物理地址的转换：</h3><p>某虚拟存储器的用户编程空间共32个页面，每页为1KB，内存为16KB。假定某时刻一用户页表中已调入内存的页面的页号和物理块号的对照表如下：</p>\n<table>\n<thead>\n<tr>\n<th>页号</th>\n<th>物理块号</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>3</td>\n</tr>\n<tr>\n<td>1</td>\n<td>7</td>\n</tr>\n<tr>\n<td>2</td>\n<td>11</td>\n</tr>\n<tr>\n<td>3</td>\n<td>8</td>\n</tr>\n</tbody></table>\n<p>则逻辑地址0A5C(H)所对应的物理地址是什么？要求：写出主要计算过程。 </p>\n<p>****解题过程****：</p>\n<p>​    首先要知道页式存储管理的逻辑地址分为两部分：页号和页内地址。物理地址分为两部分：</p>\n<p>关系为：逻辑地址＝　页号＋页内地址</p>\n<p>​           物理地址＝　块号＋页内地址；</p>\n<p><strong>分析题</strong>：已知：用户编程空间共３２个页面，２ˆ５　＝　３２　得知页号部分占５位，由“每页为1KB”，1K&#x3D;2^10，可知内页地址占10位。</p>\n<p>由“内存为16KB”，２^４＝１６得知块号占4位。</p>\n<p>​    逻辑地址0A5C（H）所对应的二进制表示形式是：００００１０１００１０１１１００，后十位１００１０１１１００是页内地址，</p>\n<p>０００１０为为页号，页号化为十进制是２，在对照表中找到２对应的物理块号是１１,１１转换二进制是１０１１，即可求出物理地址为１０１１１００１０１１１００，化成十六进制为２Ｅ５Ｃ；</p>\n<p>即则逻辑地址0A5C(H)所对应的物理地址是２Ｅ５Ｃ；</p>\n<h3 id=\"15：分页技术例题\"><a href=\"#15：分页技术例题\" class=\"headerlink\" title=\"15：分页技术例题\"></a>15：分页技术例题</h3><p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201212203201.png\" alt=\"来自周巨\"></p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201212203823.png\"></p>\n<hr>\n<p>参考文章:</p>\n<p><a href=\"https://blog.csdn.net/Ding_0110M/article/details/89071793\">操作系统中的中断（详细介绍+图片理解）</a></p>\n<p><a href=\"https://blog.csdn.net/qq_38499859/article/details/81052662?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control\">操作系统13————存储器管理之分页存储</a></p>\n<p><a href=\"https://blog.csdn.net/qq_38499859/article/details/81054286\">操作系统14————存储器管理之分段存储&amp;段页存储</a></p>\n<p><a href=\"https://blog.csdn.net/qq_35827280/article/details/85267248\">操作系统选择题</a></p>\n","text":"知识点：第一章：操作系统引论操作系统有硬件和软件组成，硬件是CPUC软件建立与活动的基础，而软件是对硬件功能的扩充。硬件包括CPU、内存、I&#x2F;O设备和总线等，软件通常分为应用软件、支撑软件和系统软件。 冯洛伊曼体系：存储器、运算器、控制器、输入设备、输出设备。 操作系统...","link":"","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":19,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9%EF%BC%9A\"><span class=\"toc-text\">知识点：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BC%95%E8%AE%BA\"><span class=\"toc-text\">第一章：操作系统引论</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%86%AF%E6%B4%9B%E4%BC%8A%E6%9B%BC%E4%BD%93%E7%B3%BB%EF%BC%9A\"><span class=\"toc-text\">冯洛伊曼体系：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD%EF%BC%9A\"><span class=\"toc-text\">操作系统的基本功能：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BA%94%E5%A4%A7%E5%8A%9F%E8%83%BD%EF%BC%9A\"><span class=\"toc-text\">操作系统五大功能：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9A%E4%B9%89%EF%BC%9A\"><span class=\"toc-text\">操作系统定义：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8F%91%E5%B1%95%E7%9A%84%E5%8A%A8%E5%8A%9B%EF%BC%9A\"><span class=\"toc-text\">操作系统发展的动力：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E6%9C%AC%E7%A7%8D%E7%B1%BB%EF%BC%9A\"><span class=\"toc-text\">操作系统基本种类：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E6%9C%AC%E7%89%B9%E5%BE%81%EF%BC%9A\"><span class=\"toc-text\">操作系统基本特征：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%EF%BC%9A\"><span class=\"toc-text\">操作系统结构：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E7%BB%9F%E5%88%9D%E5%90%AF%E7%9A%84%E5%BC%95%E5%AF%BC%E8%BF%87%E7%A8%8B%EF%BC%9A\"><span class=\"toc-text\">系统初启的引导过程：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%84%B1%E6%9C%BAI-x2F-O%EF%BC%9A\"><span class=\"toc-text\">脱机I&#x2F;O：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%81%94%E6%9C%BAI-x2F-O%EF%BC%9A\"><span class=\"toc-text\">联机I&#x2F;O：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A1%AC%E4%BB%B6\"><span class=\"toc-text\">硬件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6\"><span class=\"toc-text\">软件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E9%81%93%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">单道程序设计</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E9%81%93%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">多道程序设计</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B9%B6%E5%8F%91\"><span class=\"toc-text\">并发</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%90%9E%E5%90%90%E9%87%8F\"><span class=\"toc-text\">吞吐量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%97%B6\"><span class=\"toc-text\">分时</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%97%B6\"><span class=\"toc-text\">实时</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">系统调用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%BA%E7%94%A8%E6%88%B7%E6%8F%90%E4%BE%9B%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%8C%85%E6%8B%AC%EF%BC%9A\"><span class=\"toc-text\">操作系统为用户提供的服务包括：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E6%80%81%E5%92%8C%E7%94%A8%E6%88%B7%E6%80%81\"><span class=\"toc-text\">核心态和用户态</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1%E5%AE%9E%E6%97%B6%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BF%85%E9%A1%BB%E9%A6%96%E5%85%88%E8%80%83%E8%99%91\"><span class=\"toc-text\">设计实时操作系统必须首先考虑</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%9D%83%E6%8C%87%E4%BB%A4%E5%92%8C%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">特权指令和系统调用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%87%87%E7%94%A8%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84%E7%9A%84%E5%A5%BD%E5%A4%84\"><span class=\"toc-text\">采用层次结构的好处</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E5%86%85%E6%A0%B8%E6%A8%A1%E5%BC%8F%E8%AE%BE%E8%AE%A1%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">微内核模式设计系统的优点</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD\"><span class=\"toc-text\">中断</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E8%AF%AD\"><span class=\"toc-text\">原语</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#RAM\"><span class=\"toc-text\">RAM:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ROM\"><span class=\"toc-text\">ROM:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#EPROM\"><span class=\"toc-text\">EPROM:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#BIOS\"><span class=\"toc-text\">BIOS:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%97%B6%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">实时操作系统</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%93%8D%E5%BA%94%E6%AF%94\"><span class=\"toc-text\">响应比</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8-VS-%E5%BA%93%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">系统调用 VS 库函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E7%AB%A0%EF%BC%9A%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B\"><span class=\"toc-text\">第二章：进程和线程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E5%8F%AF%E8%A1%A8%E8%BF%B0%E4%B8%BA%EF%BC%9A\"><span class=\"toc-text\">进程可表述为：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E9%97%B4%E8%BD%AC%E5%8C%96%EF%BC%9A\"><span class=\"toc-text\">进程状态间转化：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#PCB\"><span class=\"toc-text\">PCB</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E7%A8%8B%EF%BC%9A\"><span class=\"toc-text\">线程：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E7%A8%8B%E4%B8%A4%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F%EF%BC%9A\"><span class=\"toc-text\">线程两种实现方式：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%B4%E7%95%8C%E8%B5%84%E6%BA%90%EF%BC%9A\"><span class=\"toc-text\">临界资源：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%B4%E7%95%8C%E5%8C%BA%E5%9F%9F%EF%BC%88CS%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">临界区域（CS）：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%A1%E7%A8%8B\"><span class=\"toc-text\">管程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%95%E5%85%A5%E8%BF%9B%E7%A8%8B%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">为什么引入进程概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">进程和程序</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BA%92%E6%96%A5%E4%B8%8E%E5%90%8C%E6%AD%A5%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">进程的互斥与同步概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%B4%E7%95%8C%E5%8C%BA%E8%BF%9B%E5%85%A5%E5%87%86%E5%88%99%EF%BC%9A\"><span class=\"toc-text\">临界区进入准则：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1\"><span class=\"toc-text\">进程通信</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">消息传递系统</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%9A%E6%AD%BB%E9%94%81\"><span class=\"toc-text\">第三章：死锁</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%BB%E9%94%81%EF%BC%9A\"><span class=\"toc-text\">死锁：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%A7%E7%94%9F%E7%9A%84%E5%8E%9F%E5%9B%A0%EF%BC%9A\"><span class=\"toc-text\">产生的原因：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%A7%E7%94%9F%E6%9D%A1%E4%BB%B6%EF%BC%9A\"><span class=\"toc-text\">产生条件：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E5%BE%85%E6%AD%BB%E9%94%81%E7%9A%84%E7%AD%96%E7%95%A5%EF%BC%9A\"><span class=\"toc-text\">对待死锁的策略：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%BB%E9%94%81%E9%A2%84%E9%98%B2\"><span class=\"toc-text\">死锁预防</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%BB%E9%94%81%E9%81%BF%E5%85%8D%EF%BC%9A\"><span class=\"toc-text\">死锁避免：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%BB%E9%94%81%E7%9A%84%E6%A3%80%E6%B5%8B%E5%92%8C%E6%81%A2%E5%A4%8D\"><span class=\"toc-text\">死锁的检测和恢复</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B5%84%E6%BA%90%E5%88%86%E9%85%8D%E5%9B%BE\"><span class=\"toc-text\">资源分配图</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E7%BB%9F%E9%80%89%E6%8B%A9%E2%80%9C%E7%89%BA%E7%89%B2%E8%80%85%E2%80%9D%E7%9A%84%E4%B8%BB%E8%A6%81%E4%BE%9D%E6%8D%AE%EF%BC%9A\"><span class=\"toc-text\">系统选择“牺牲者”的主要依据：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9A%E8%B0%83%E5%BA%A6\"><span class=\"toc-text\">第四章：调度</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CPU%E8%B0%83%E5%BA%A6%EF%BC%9A\"><span class=\"toc-text\">CPU调度：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6%E5%88%86%E4%B8%BA%E4%B8%89%E7%BA%A7\"><span class=\"toc-text\">处理机调度分为三级</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E7%BA%A7%E8%B0%83%E5%BA%A6\"><span class=\"toc-text\">中级调度</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E4%B8%9A%E8%B0%83%E5%BA%A6%EF%BC%88%E9%AB%98%E7%BA%A7%E8%B0%83%E5%BA%A6%EF%BC%89%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD%EF%BC%9A\"><span class=\"toc-text\">作业调度（高级调度）的基本功能：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E4%B8%9A%E7%8A%B6%E6%80%81%EF%BC%9A\"><span class=\"toc-text\">作业状态：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%EF%BC%88%E4%BD%8E%E7%BA%A7%E8%B0%83%E5%BA%A6%EF%BC%89\"><span class=\"toc-text\">进程调度（低级调度）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E5%BA%A6%E5%87%86%E5%88%99\"><span class=\"toc-text\">调度准则</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%84%E4%BB%B7%E8%B0%83%E5%BA%A6%E7%AD%96%E7%95%A5%E7%9A%84%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87\"><span class=\"toc-text\">评价调度策略的性能指标</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#CPU%E5%88%A9%E7%94%A8%E7%8E%87\"><span class=\"toc-text\">CPU利用率</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%90%9E%E5%90%90%E9%87%8F-1\"><span class=\"toc-text\">吞吐量</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%91%A8%E8%BD%AC%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">周转时间</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">等待时间</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%93%8D%E5%BA%94%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">响应时间</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">调度算法：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E7%A8%8B%E8%B0%83%E5%BA%A6%EF%BC%9A\"><span class=\"toc-text\">线程调度：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%97%B6%E8%B0%83%E5%BA%A6%EF%BC%9A\"><span class=\"toc-text\">实时调度：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%97%B6%E4%BB%BB%E5%8A%A1%E7%B1%BB%E5%9E%8B%EF%BC%9A\"><span class=\"toc-text\">实时任务类型：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%A1%AC%E5%AE%9E%E6%97%B6%E4%BB%BB%E5%8A%A1%EF%BC%9A\"><span class=\"toc-text\">硬实时任务：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E5%AE%9E%E6%97%B6%E4%BB%BB%E5%8A%A1%EF%BC%9A\"><span class=\"toc-text\">软实时任务：</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD-1\"><span class=\"toc-text\">中断</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E7%9A%84%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">中断的概念</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E6%BA%90%EF%BC%9A\"><span class=\"toc-text\">中断源：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">中断请求</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%96%AD%E7%82%B9\"><span class=\"toc-text\">断点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">中断系统</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%BD%9C%E7%94%A8%EF%BC%9A\"><span class=\"toc-text\">中断系统的作用：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E7%B1%BB%E5%9E%8B%EF%BC%9A\"><span class=\"toc-text\">中断类型：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E7%9A%84%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B%EF%BC%9A\"><span class=\"toc-text\">中断的处理过程：</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6%E7%9A%84%E4%B8%BB%E8%A6%81%E7%9B%AE%E7%9A%84\"><span class=\"toc-text\">处理机调度的主要目的</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%95%E5%85%A5%E4%B8%AD%E7%BA%A7%E8%B0%83%E5%BA%A6%E7%9A%84%E7%9B%AE%E7%9A%84%EF%BC%9A\"><span class=\"toc-text\">引入中级调度的目的：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E4%B8%9A%E8%B0%83%E5%BA%A6%E4%B8%8E%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E4%B9%8B%E9%97%B4%E7%9A%84%E5%B7%AE%E5%88%AB%EF%BC%9A\"><span class=\"toc-text\">作业调度与进程调度之间的差别：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%94%E7%AB%A0%EF%BC%9A%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">第五章：存储管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E5%9C%B0%E5%9D%80%EF%BC%9A\"><span class=\"toc-text\">逻辑地址：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%89%A9%E7%90%86%E5%9C%B0%E5%9D%80%EF%BC%9A\"><span class=\"toc-text\">物理地址：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%87%8D%E5%AE%9A%E4%BD%8D%EF%BC%9A\"><span class=\"toc-text\">重定位：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E9%87%8D%E5%AE%9A%E4%BD%8D%EF%BC%9A\"><span class=\"toc-text\">静态重定位：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E9%87%8D%E5%AE%9A%E4%BD%8D%EF%BC%9A\"><span class=\"toc-text\">动态重定位：</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%8C%BA%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">分区法：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9B%BA%E5%AE%9A%E5%88%86%E5%8C%BA%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">固定分区法：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E5%88%86%E5%8C%BA%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">动态分区法：</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%84%E7%90%86%E7%A2%8E%E7%89%87%E9%97%AE%E9%A2%98%EF%BC%9A\"><span class=\"toc-text\">处理碎片问题：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%B4%A7%E7%BC%A9\"><span class=\"toc-text\">紧缩</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%86%E9%A1%B5%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">分页管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E9%A1%B5%E8%A1%A8\"><span class=\"toc-text\">页表</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%AE%B5%E7%AE%A1%E7%90%86%EF%BC%9A\"><span class=\"toc-text\">分段管理：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E6%AE%B5%E8%A1%A8\"><span class=\"toc-text\">段表</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%AE%B5%E9%A1%B5%E5%BC%8F%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">段页式存储管理方式</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A8%A1%E5%BC%8F%EF%BC%9A\"><span class=\"toc-text\">存储管理的基本模式：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9A%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">第六章：文件系统</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%EF%BC%9A\"><span class=\"toc-text\">文件系统功能：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%A4%E7%A7%8D%E5%BD%A2%E5%BC%8F%E7%9A%84%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">两种形式的结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8%EF%BC%9F%E5%AE%83%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9F%BA%E6%9C%AC%E7%89%B9%E5%BE%81%EF%BC%9F\"><span class=\"toc-text\">什么是虚拟存储器？它有哪些基本特征？</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%EF%BC%9A\"><span class=\"toc-text\">题目：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87-B-%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F%E6%9D%A5%E4%BD%BF%E7%94%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E3%80%82\"><span class=\"toc-text\">1.用户可以通过( B) 两种方式来使用计算机。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E6%98%AF%E7%94%B1%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8F%90%E4%BE%9B%E7%BB%99%E7%94%A8%E6%88%B7%E7%9A%84%EF%BC%8C%E5%AE%83-B-%E3%80%82\"><span class=\"toc-text\">2.系统调用是由操作系统提供给用户的，它(B ) 。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E7%9A%84%E7%9B%AE%E7%9A%84%E6%98%AF-A%EF%BC%89\"><span class=\"toc-text\">3.系统调用的目的是(A）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E7%94%A8%E6%88%B7%E5%9C%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD%E8%AF%95%E5%9B%BE%E8%AF%BB%E6%9F%90%E6%96%87%E4%BB%B6%E7%9A%84%E7%AC%AC100%E4%B8%AA%E9%80%BB%E8%BE%91%E5%9D%97%EF%BC%8C%E4%BD%BF%E7%94%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8F%90%E4%BE%9B%E7%9A%84-B-%E6%8E%A5%E5%8F%A3%E3%80%82\"><span class=\"toc-text\">4.用户在程序中试图读某文件的第100个逻辑块，使用操作系统提供的(B ) 接口。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%94%A8%E6%88%B7%E9%80%9A%E4%BF%A1%E6%8E%A5%E5%8F%A3%E9%80%9A%E5%B8%B8%E4%B8%8D%E5%8C%85%E6%8B%AC-%EF%BC%89\"><span class=\"toc-text\">5.操作系统与用户通信接口通常不包括(）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E4%B8%8B%E5%88%97%E9%80%89%E9%A1%B9%E4%B8%AD%EF%BC%8C-%E4%B8%8D%E5%B1%9E%E4%BA%8E%E5%A4%9A%E9%81%93%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%89%B9%E5%BE%81%E6%98%AF-C-%E3%80%82\"><span class=\"toc-text\">6.下列选项中， 不属于多道程序设计的基本特征是( C) 。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%BC%80%E6%9C%BA%E5%90%8E%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%9C%80%E7%BB%88%E8%A2%AB%E5%8A%A0%E8%BD%BD%E5%88%B0-A-%E3%80%82-2013%E5%B9%B4%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%81%94%E8%80%83%E7%9C%9F%E9%A2%98\"><span class=\"toc-text\">7.计算机开机后，操作系统最终被加载到( A) 。[2013年计算机联考真题]</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E6%89%B9%E5%A4%84%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%B8%BB%E8%A6%81%E7%BC%BA%E7%82%B9%E6%98%AF-D-%E3%80%82\"><span class=\"toc-text\">8.批处理系统的主要缺点是( D) 。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E4%B8%BB%E8%A6%81%E6%9C%89-B-%E3%80%82\"><span class=\"toc-text\">9.操作系统的基本类型主要有(B )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-%E4%B8%8B%E5%88%97%E5%85%B3%E4%BA%8E%E6%89%B9%E5%A4%84%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8F%99%E8%BF%B0%E4%B8%AD%EF%BC%8C%E6%AD%A3%E7%A1%AE%E7%9A%84%E6%98%AF-A-%E3%80%82\"><span class=\"toc-text\">10.下列关于批处理系统的叙述中，正确的是(A )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-%E4%B8%8E%E5%8D%95%E9%81%93%E7%A8%8B%E5%BA%8F%E7%B3%BB%E7%BB%9F%E7%9B%B8%E6%AF%94%EF%BC%8C%E5%A4%9A%E9%81%93%E7%A8%8B%E5%BA%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%BC%98%E7%82%B9%E6%98%AF-D-%E3%80%82\"><span class=\"toc-text\">11.与单道程序系统相比，多道程序系统的优点是( D) 。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12-%E5%AE%9E%E6%97%B6%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BF%85%E9%A1%BB%E5%9C%A8-B-%E5%86%85%E5%A4%84%E7%90%86%E6%9D%A5%E8%87%AA%E5%A4%96%E9%83%A8%E7%9A%84%E4%BA%8B%E4%BB%B6%E3%80%82\"><span class=\"toc-text\">12.实时操作系统必须在( B) 内处理来自外部的事件。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#13-%E5%AE%9E%E6%97%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%EF%BC%8C%E9%80%9A%E5%B8%B8%E9%87%87%E7%94%A8-C-%E7%AE%97%E6%B3%95%E3%80%82\"><span class=\"toc-text\">13.实时系统的进程调度，通常采用( C) 算法。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#14-%E5%88%86%E6%97%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%B8%80%E4%B8%AA%E9%87%8D%E8%A6%81%E6%80%A7%E8%83%BD%E6%98%AF%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%93%8D%E5%BA%94%E6%97%B6%E9%97%B4-%E5%AF%B9%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-C-%E5%9B%A0%E7%B4%A0%E8%BF%9B%E8%A1%8C%E6%94%B9%E8%BF%9B%E6%9C%89%E5%88%A9%E4%BA%8E%E6%94%B9%E5%96%84%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%93%8D%E5%BA%94%E6%97%B6%E9%97%B4%E3%80%82\"><span class=\"toc-text\">14.分时系统的一个重要性能是系统的响应时间,对操作系统(C ) 因素进行改进有利于改善系统的响应时间。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#16-%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E6%8A%80%E6%9C%AF%E6%98%AF%EF%BC%88A%EF%BC%89%E3%80%82\"><span class=\"toc-text\">16    虚拟存储技术是（A）。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#17-%E6%AE%B5%E9%A1%B5%E5%BC%8F%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E6%B1%B2%E5%8F%96%E4%BA%86%E9%A1%B5%E5%BC%8F%E7%AE%A1%E7%90%86%E5%92%8C%E6%AE%B5%E5%BC%8F%E7%AE%A1%E7%90%86%E7%9A%84%E9%95%BF%E5%A4%84%EF%BC%8C%E5%85%B6%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E7%BB%93%E5%90%88%E4%BA%86%E9%A1%B5%E5%BC%8F%E5%92%8C%E6%AE%B5%E5%BC%8F%E7%AE%A1%E7%90%86%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3%EF%BC%8C%E5%8D%B3%EF%BC%88B%EF%BC%89%E3%80%82\"><span class=\"toc-text\">17.段页式存储管理汲取了页式管理和段式管理的长处，其实现原理结合了页式和段式管理的基本思想，即（B）。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#18-%EF%BC%88B%EF%BC%89%E6%98%AF%E6%8C%87%E5%B0%86%E4%BD%9C%E4%B8%9A%E4%B8%8D%E9%9C%80%E8%A6%81%E6%88%96%E6%9A%82%E6%97%B6%E4%B8%8D%E9%9C%80%E8%A6%81%E7%9A%84%E9%83%A8%E5%88%86%E7%A7%BB%E5%88%B0%E5%A4%96%E5%AD%98%EF%BC%8C%E8%AE%A9%E5%87%BA%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E4%BB%A5%E8%B0%83%E5%85%A5%E5%85%B6%E4%BB%96%E6%89%80%E9%9C%80%E6%95%B0%E6%8D%AE%E3%80%82\"><span class=\"toc-text\">18.（B）是指将作业不需要或暂时不需要的部分移到外存，让出内存空间以调入其他所需数据。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#19-%E9%80%9A%E9%81%93%E6%98%AF%E4%B8%80%E7%A7%8D%EF%BC%88C%EF%BC%89%E3%80%82\"><span class=\"toc-text\">19.通道是一种（C）。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%B8%8B%E9%9D%A2%E5%90%84%E9%A1%B9%E4%B8%AD%EF%BC%8C-C-%E4%B8%8D%E6%98%AF%E5%BC%95%E5%85%A5%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%9C%80%E4%B8%BB%E8%A6%81%E7%9B%AE%E7%9A%84%E3%80%82\"><span class=\"toc-text\">1.下面各项中， (C  ) 不是引入操作系统的最主要目的。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%88%86%E6%97%B6%E7%B3%BB%E7%BB%9F%E5%93%8D%E5%BA%94%E6%97%B6%E9%97%B4%E4%B8%8E-D-%E6%9C%89%E5%85%B3%E3%80%82\"><span class=\"toc-text\">2.分时系统响应时间与(  D)有关。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E9%87%87%E7%94%A8%E5%A4%9A%E9%81%93%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%83%BD-B-%E3%80%82\"><span class=\"toc-text\">3.采用多道程序设计能( B )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E4%B8%8B%E9%9D%A2%E5%AF%B9%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%8F%8F%E8%BF%B0%E4%B8%AD%EF%BC%8C%E9%94%99%E8%AF%AF%E7%9A%84%E6%98%AF-D-%E3%80%82\"><span class=\"toc-text\">4.下面对进程的描述中，错误的是( D )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E5%A4%9A%E9%81%93%E7%A8%8B%E5%BA%8F%E7%B3%BB%E7%BB%9F%E4%B8%AD%EF%BC%8C%E5%BD%93-B-%E6%97%B6%EF%BC%8C%E8%BF%9B%E7%A8%8B%E4%BB%8E%E6%89%A7%E8%A1%8C%E7%8A%B6%E6%80%81%E8%BD%AC%E5%8F%98%E4%B8%BA%E5%B0%B1%E7%BB%AA%E7%8A%B6%E6%80%81%E3%80%82\"><span class=\"toc-text\">5.多道程序系统中，当( B )时，进程从执行状态转变为就绪状态。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E4%B8%8B%E5%88%97%E9%80%89%E9%A1%B9%E4%B8%AD%EF%BC%8C%E5%AF%BC%E8%87%B4%E5%88%9B%E5%BB%BA%E6%96%B0%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%93%8D%E4%BD%9C%E6%98%AF-C-%E3%80%82\"><span class=\"toc-text\">6.下列选项中，导致创建新进程的操作是( C )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E4%B8%8B%E5%88%97%E5%9B%A0%E7%B4%A0%E4%B8%AD%EF%BC%8C-C-%E4%B8%8D%E4%B8%80%E5%AE%9A%E6%98%AF%E5%BC%95%E8%B5%B7%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%9A%84%E5%9B%A0%E7%B4%A0%E3%80%82\"><span class=\"toc-text\">7.下列因素中，( C  )不一定是引起进程调度的因素。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E4%B8%80%E7%A7%8D%E6%97%A2%E6%9C%89%E5%88%A9%E4%BA%8E%E7%9F%AD%E5%B0%8F%E4%BD%9C%E4%B8%9A%E5%8F%88%E5%85%BC%E9%A1%BE%E5%88%B0%E9%95%BF%E4%BD%9C%E4%B8%9A%E7%9A%84%E4%BD%9C%E4%B8%9A%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%E6%98%AF-C-%E3%80%82\"><span class=\"toc-text\">8.一种既有利于短小作业又兼顾到长作业的作业调度算法是( C  )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-%E2%80%9C%E6%AD%BB%E9%94%81%E2%80%9D%E9%97%AE%E9%A2%98%E7%9A%84%E8%AE%A8%E8%AE%BA%E6%98%AF%E9%92%88%E5%AF%B9-D-%E7%9A%84%E3%80%82\"><span class=\"toc-text\">9. “死锁”问题的讨论是针对(  D )的。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-%E9%87%87%E7%94%A8%E8%B5%84%E6%BA%90%E5%89%A5%E5%A4%BA%E6%B3%95%E5%8F%AF%E4%BB%A5%E8%A7%A3%E9%99%A4%E6%AD%BB%E9%94%81%EF%BC%8C%E8%BF%98%E5%8F%AF%E4%BB%A5%E9%87%87%E7%94%A8-B-%E6%96%B9%E6%B3%95%E8%A7%A3%E9%99%A4%E6%AD%BB%E9%94%81%E3%80%82\"><span class=\"toc-text\">10.采用资源剥夺法可以解除死锁，还可以采用(B   )方法解除死锁。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-%E4%B8%8B%E5%88%97%E5%AF%B9%E9%87%8D%E5%AE%9A%E4%BD%8D%E7%9A%84%E5%8F%99%E8%BF%B0%E4%B8%AD%EF%BC%8C%E6%AD%A3%E7%A1%AE%E7%9A%84%E9%80%89%E9%A1%B9%E6%98%AF-B-%E3%80%82\"><span class=\"toc-text\">11.下列对重定位的叙述中，正确的选项是( B  )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12-%E5%B0%86%E4%B8%BB%E5%AD%98%E7%A9%BA%E9%97%B2%E5%8C%BA%E6%8C%89%E5%9C%B0%E5%9D%80%E9%A1%BA%E5%BA%8F%E4%BB%8E%E5%B0%8F%E5%88%B0%E5%A4%A7%E7%99%BB%E8%AE%B0%E5%9C%A8%E7%A9%BA%E9%97%B2%E5%8C%BA%E8%A1%A8%E4%B8%AD%EF%BC%8C%E6%AF%8F%E6%AC%A1%E5%88%86%E9%85%8D%E6%97%B6%E6%80%BB%E6%98%AF%E9%A1%BA%E5%BA%8F%E6%9F%A5%E6%89%BE%E7%A9%BA%E9%97%B2%E5%8C%BA%E8%A1%A8%EF%BC%8C%E6%AD%A4%E7%A7%8D%E5%88%86%E9%85%8D%E7%AE%97%E6%B3%95%E7%A7%B0%E4%B8%BA-A-%E5%88%86%E9%85%8D%E7%AE%97%E6%B3%95%E3%80%82\"><span class=\"toc-text\">12.将主存空闲区按地址顺序从小到大登记在空闲区表中，每次分配时总是顺序查找空闲区表，此种分配算法称为(   A)分配算法。</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#13-%E6%9F%90%E7%B3%BB%E7%BB%9F%E9%87%87%E7%94%A8%E9%A1%B5%E5%BC%8F%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E7%AD%96%E7%95%A5%EF%BC%8C%E6%8B%A5%E6%9C%89%E9%80%BB%E8%BE%91%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B432%E9%A1%B5%EF%BC%8C%E6%AF%8F%E9%A1%B52K%EF%BC%8C%E6%8B%A5%E6%9C%89%E7%89%A9%E7%90%86%E7%A9%BA%E9%97%B41M%EF%BC%8C%E8%BF%9B%E7%A8%8B%E7%9A%84%E9%A1%B5%E8%A1%A8%E6%9C%89%EF%BC%88-B%EF%BC%89%E9%A1%B9\"><span class=\"toc-text\">13.某系统采用页式存储管理策略，拥有逻辑地址空间32页，每页2K，拥有物理空间1M，进程的页表有（  B）项</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#14-%E5%9C%A8%E6%AE%B5%E5%BC%8F%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E7%9A%84%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2%E6%97%B6%EF%BC%8C%E8%8B%A5%E6%AE%B5%E5%86%85%E5%9C%B0%E5%9D%80%E5%A4%A7%E4%BA%8E%E6%AE%B5%E8%A1%A8%E4%B8%AD%E8%AF%A5%E6%AE%B5%E7%9A%84%E9%95%BF%E5%BA%A6%EF%BC%8C%E5%88%99%E5%8F%91%E7%94%9F%EF%BC%88-D%EF%BC%89%E3%80%82\"><span class=\"toc-text\">14.在段式存储管理的地址转换时，若段内地址大于段表中该段的长度，则发生（  D）。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#15-%E5%9C%A8I-x2F-O%E8%AE%BE%E5%A4%87%E6%8E%A7%E5%88%B6%E7%9A%84%E5%8F%91%E5%B1%95%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E6%9C%80%E4%B8%BB%E8%A6%81%E7%9A%84%E6%8E%A8%E5%8A%A8%E5%9B%A0%E7%B4%A0%E6%98%AF-C-%E3%80%82\"><span class=\"toc-text\">15.在I&#x2F;O设备控制的发展过程中，最主要的推动因素是(  C )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#16-%E7%94%A8%E6%88%B7%E7%A8%8B%E5%BA%8F%E5%8F%91%E5%87%BA%E7%A3%81%E7%9B%98I-x2F-O%E8%AF%B7%E6%B1%82%E5%90%8E%EF%BC%8C%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B%E6%98%AF-B-%E3%80%82\"><span class=\"toc-text\">16.用户程序发出磁盘I&#x2F;O请求后，系统的正确处理流程是(   B)。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#17-%E9%80%BB%E8%BE%91%E6%96%87%E4%BB%B6%E7%9A%84%E7%BB%84%E7%BB%87%E7%BB%93%E6%9E%84%E6%98%AF%E7%94%B1-C-%E7%A1%AE%E5%AE%9A%E7%9A%84%E3%80%82\"><span class=\"toc-text\">17.逻辑文件的组织结构是由( C  )确定的。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#18-%E5%9C%A8%E6%96%87%E4%BB%B6%E7%9A%84%E7%89%A9%E7%90%86%E7%BB%93%E6%9E%84%E4%B8%AD%EF%BC%8C-A-%E7%BB%93%E6%9E%84%E4%B8%8D%E5%88%A9%E4%BA%8E%E6%96%87%E4%BB%B6%E9%95%BF%E5%BA%A6%E7%9A%84%E5%8A%A8%E6%80%81%E5%A2%9E%E9%95%BF%E3%80%82\"><span class=\"toc-text\">18.在文件的物理结构中，(  A )结构不利于文件长度的动态增长。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#19-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B8%AD%E6%96%87%E4%BB%B6%E8%A2%AB%E6%8C%89%E7%85%A7%E5%90%8D%E5%AD%97%E5%AD%98%E5%8F%96%E6%98%AF%E4%B8%BA%E4%BA%86%EF%BC%88-B-%EF%BC%89%E3%80%82\"><span class=\"toc-text\">19.文件系统中文件被按照名字存取是为了（ B ）。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#20-%E8%AE%BE%E6%96%87%E4%BB%B6F1%E5%BD%93%E5%89%8D%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0%E5%80%BC%E4%B8%BA1%EF%BC%8C%E5%85%88%E5%BB%BA%E7%AB%8BF1%E7%9A%84%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5-%E8%BD%AF%E9%93%BE%E6%8E%A5-%E6%96%87%E4%BB%B6F2%EF%BC%8C%E5%86%8D%E5%BB%BA%E7%AB%8BF1%E7%9A%84%E7%A1%AC%E8%BD%AF%E9%93%BE%E6%8E%A5%E6%96%87%E4%BB%B6F3%EF%BC%8C%E7%84%B6%E5%90%8E%E5%88%A0%E9%99%A4F1%E3%80%82%E6%AD%A4%E6%97%B6%EF%BC%8CF2%E5%92%8CF3%E7%9A%84%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0%E5%80%BC%E5%88%86%E5%88%AB%E6%98%AF%EF%BC%88B-%EF%BC%89%E3%80%82\"><span class=\"toc-text\">20.设文件F1当前引用计数值为1，先建立F1的符号链接(软链接)文件F2，再建立F1的硬软链接文件F3，然后删除F1。此时，F2和F3的引用计数值分别是（B  ）。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#21-%E5%A4%9A%E9%81%93%E6%89%B9%E5%A4%84%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%B8%BB%E8%A6%81%E7%BC%BA%E7%82%B9%E6%98%AF-C-%E3%80%82\"><span class=\"toc-text\">21.多道批处理系统的主要缺点是(C  )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#22-%E4%B8%8B%E5%88%97%E9%80%89%E9%A1%B9%E4%B8%AD%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8F%90%E4%BE%9B%E7%BB%99%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8E%A5%E5%8F%A3%E6%98%AF-A-%E3%80%82\"><span class=\"toc-text\">22.下列选项中，操作系统提供给应用程序的接口是( A ) 。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#23-%E5%A4%9A%E9%81%93%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E6%98%AF%E6%8C%87-C-%E3%80%82\"><span class=\"toc-text\">23.多道程序设计是指(C  )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#24-%E6%9C%89%E5%85%B3%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%B8%8B%E5%88%97%E5%8F%99%E8%BF%B0%E4%B8%AD%EF%BC%8C-D-%E6%98%AF%E6%AD%A3%E7%A1%AE%E7%9A%84%E3%80%82\"><span class=\"toc-text\">24.有关进程的下列叙述中，(D  )是正确的。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#25-%E4%B8%8B%E5%88%97%E7%9A%84%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E5%8F%98%E5%8C%96%E4%B8%AD%EF%BC%8C-C-%E7%9A%84%E5%8F%98%E5%8C%96%E6%98%AF%E4%B8%8D%E5%8F%AF%E8%83%BD%E5%8F%91%E7%94%9F%E7%9A%84%E3%80%82\"><span class=\"toc-text\">25.下列的进程状态变化中，( C )的变化是不可能发生的。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#26-%E4%B8%8B%E9%9D%A2%E6%89%80%E8%BF%B0%E6%AD%A5%E9%AA%A4%E4%B8%AD%EF%BC%8C-A-%E4%B8%8D%E6%98%AF%E5%88%9B%E5%BB%BA%E8%BF%9B%E7%A8%8B%E6%89%80%E5%BF%85%E9%9C%80%E7%9A%84%E3%80%82\"><span class=\"toc-text\">26.下面所述步骤中，( A )不是创建进程所必需的。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#27-%E4%B8%8B%E5%88%97%E5%90%84%E9%A1%B9%E4%B8%AD%EF%BC%8C%E4%B8%8D%E6%98%AF%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E6%97%B6%E6%9C%BA%E7%9A%84%E6%98%AF-D-%E3%80%82\"><span class=\"toc-text\">27.下列各项中，不是进程调度时机的是(   D)。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#28-%E5%9C%A8%E4%BD%9C%E4%B8%9A%E8%B0%83%E5%BA%A6%E4%B8%AD%EF%BC%8C%E6%8E%92%E9%98%9F%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4%E6%9C%80%E9%95%BF%E7%9A%84%E4%BD%9C%E4%B8%9A%E8%A2%AB%E4%BC%98%E5%85%88%E8%B0%83%E5%BA%A6%EF%BC%8C%E8%BF%99%E6%98%AF%E6%8C%87-A-%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%E3%80%82\"><span class=\"toc-text\">28.在作业调度中，排队等待时间最长的作业被优先调度，这是指(  A )调度算法。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#29-%E4%BA%A7%E7%94%9F%E6%AD%BB%E9%94%81%E7%9A%84%E5%8E%9F%E5%9B%A0%E4%B8%8E-D-%E6%9C%89%E5%85%B3%E3%80%82\"><span class=\"toc-text\">29.产生死锁的原因与( D  )有关。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#30-%E6%9F%90%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%AD%E6%9C%898%E5%8F%B0%E6%89%93%E5%8D%B0%E6%9C%BA%EF%BC%8C%E6%9C%89k%E4%B8%AA%E8%BF%9B%E7%A8%8B%E7%AB%9E%E4%BA%89%E4%BD%BF%E7%94%A8%EF%BC%8C%E6%AF%8F%E4%B8%AA%E8%BF%9B%E7%A8%8B%E6%9C%80%E5%A4%9A%E9%9C%80%E8%A6%813%E5%8F%B0%E6%89%93%E5%8D%B0%E6%9C%BA%E3%80%82%E8%AF%A5%E7%B3%BB%E7%BB%9F%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%8F%91%E7%94%9F%E6%AD%BB%E9%94%81%E7%9A%84k%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E6%98%AF-C-%E3%80%82\"><span class=\"toc-text\">30.某计算机系统中有8台打印机，有k个进程竞争使用，每个进程最多需要3台打印机。该系统可能会发生死锁的k的最小值是( C  )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#31-%E5%9C%A8%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%AD%EF%BC%8C%E5%9C%B0%E5%9D%80%E5%8F%98%E6%8D%A2%E6%9C%BA%E6%9E%84%E5%B0%86%E9%80%BB%E8%BE%91%E5%9C%B0%E5%9D%80%E5%8F%98%E6%8D%A2%E4%B8%BA%E7%89%A9%E7%90%86%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%BD%A2%E6%88%90%E8%AF%A5%E9%80%BB%E8%BE%91%E5%9C%B0%E5%9D%80%E7%9A%84%E9%98%B6%E6%AE%B5%E6%98%AF-B-%E3%80%82\"><span class=\"toc-text\">31.在虚拟内存管理中，地址变换机构将逻辑地址变换为物理地址，形成该逻辑地址的阶段是(  B )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#32-%E5%9C%A8%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C%E6%97%B6%EF%BC%8C%E5%AF%B9%E4%BA%8E%E5%9B%BA%E5%AE%9A%E5%88%86%E5%8C%BA%E7%9A%84%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E6%96%B9%E5%BC%8F%EF%BC%8C%E5%86%85%E5%AD%98%E4%B8%AD%E8%83%BD%E5%B9%B6%E5%8F%91%E6%89%A7%E8%A1%8C%E7%9A%84%E4%BD%9C%E4%B8%9A%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E6%98%AF-%E3%80%82\"><span class=\"toc-text\">32.在系统运行时，对于固定分区的存储管理方式，内存中能并发执行的作业的最大数量是(   )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#33-%E5%9C%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E4%B8%AD%EF%BC%8C%E9%A1%B5%E5%BC%8F%E5%88%86%E9%85%8D%E6%98%AF%EF%BC%88-A-%EF%BC%89%E3%80%82\"><span class=\"toc-text\">33.在操作系统的存储管理中，页式分配是（ A ）。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#34-%E5%9C%A8%E6%AE%B5%E5%BC%8F%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E4%B8%AD%EF%BC%8C%E4%B8%8B%E5%88%97%E5%93%AA%E4%B8%AA%E8%AF%B4%E6%B3%95%E6%98%AF%E6%AD%A3%E7%A1%AE%E7%9A%84%EF%BC%88-A-%EF%BC%89%E3%80%82\"><span class=\"toc-text\">34.在段式存储管理中，下列哪个说法是正确的（ A ）。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#35-I-x2F-O%E7%B3%BB%E7%BB%9F%E7%A1%AC%E4%BB%B6%E7%BB%93%E6%9E%84%E5%88%86%E4%B8%BA4%E7%BA%A7%EF%BC%9A%E2%91%A0%E8%AE%BE%E5%A4%87%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%9B%E2%91%A1I-x2F-O%E8%AE%BE%E5%A4%87%EF%BC%9B%E2%91%A2%E8%AE%A1%E7%AE%97%E6%9C%BA%EF%BC%9B%E2%91%A3I-x2F-O%E9%80%9A%E9%81%93%E3%80%82%E6%8C%89%E7%BA%A7%E5%88%AB%E7%94%B1%E9%AB%98%E5%88%B0%E4%BD%8E%E7%9A%84%E9%A1%BA%E5%BA%8F%E6%98%AF-D-%E3%80%82\"><span class=\"toc-text\">35.I&#x2F;O系统硬件结构分为4级：①设备控制器；②I&#x2F;O设备；③计算机；④I&#x2F;O通道。按级别由高到低的顺序是(   D)。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#36-I-x2F-O%E8%BD%AF%E4%BB%B6%E4%B8%80%E8%88%AC%E5%88%86%E4%B8%BA4%E4%B8%AA%E5%B1%82%E6%AC%A1%EF%BC%9A%E7%94%A8%E6%88%B7%E5%B1%82%E3%80%81%E4%B8%8E%E8%AE%BE%E5%A4%87%E6%97%A0%E5%85%B3%E8%BD%AF%E4%BB%B6%E5%B1%82%E3%80%81%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E3%80%81%E4%B8%AD%E6%96%AD%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F%E3%80%82%E4%BB%A5%E4%B8%8B%E5%B7%A5%E4%BD%9C%E4%B8%AD%EF%BC%8C%E4%B8%8D%E6%98%AF%E7%94%B1%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E5%AE%8C%E6%88%90%E7%9A%84%E6%98%AF-C-%E3%80%82\"><span class=\"toc-text\">36.I&#x2F;O软件一般分为4个层次：用户层、与设备无关软件层、设备驱动程序、中断处理程序。以下工作中，不是由设备驱动程序完成的是(  C )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#37-%E4%BB%A5%E4%B8%8B%E5%85%B3%E4%BA%8E%E6%96%87%E4%BB%B6%E7%BB%84%E7%BB%87%E7%BB%93%E6%9E%84%E7%9A%84%E8%AF%B4%E6%B3%95%E4%B8%AD%EF%BC%8C%E9%94%99%E8%AF%AF%E7%9A%84%E6%98%AF-C-%E3%80%82\"><span class=\"toc-text\">37.以下关于文件组织结构的说法中，错误的是( C  )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#38-%E9%87%87%E7%94%A8%E7%9B%B4%E6%8E%A5%E5%AD%98%E5%8F%96%EF%BC%88%E9%9A%8F%E6%9C%BA%E5%AD%98%E5%8F%96%EF%BC%89%E6%96%B9%E6%B3%95%E6%9D%A5%E8%AF%BB%E5%86%99%E7%A3%81%E7%9B%98%E4%B8%8A%E7%9A%84%E7%89%A9%E7%90%86%E8%AE%B0%E5%BD%95%E6%97%B6%EF%BC%8C%E6%95%88%E7%8E%87%E6%9C%80%E4%BD%8E%E7%9A%84%E6%98%AF-C-%E3%80%82\"><span class=\"toc-text\">38.采用直接存取（随机存取）方法来读写磁盘上的物理记录时，效率最低的是(C   ) 。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#39-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E9%87%87%E7%94%A8%E5%A4%9A%E7%BA%A7%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E5%8F%AF%E4%BB%A5%EF%BC%88B-%EF%BC%89%E3%80%82\"><span class=\"toc-text\">39.文件系统采用多级目录结构可以（B  ）。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#40-%E4%BB%A5%E4%B8%8B%EF%BC%88-B-%EF%BC%89%E4%B8%8D%E6%98%AF%E7%A3%81%E7%9B%98%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E7%9A%84%E5%B8%B8%E7%94%A8%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95%E3%80%82\"><span class=\"toc-text\">40.以下（ B ）不是磁盘存储空间的常用管理方法。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#41-%E4%BB%8E%E7%94%A8%E6%88%B7%E7%9A%84%E8%A7%82%E7%82%B9%E7%9C%8B%EF%BC%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%98%AF-A-%E3%80%82\"><span class=\"toc-text\">41.从用户的观点看，操作系统是(  A)。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#42-%E4%B8%8B%E5%88%97%E9%80%89%E9%A1%B9%E4%B8%AD%EF%BC%8C%E5%9C%A8%E7%94%A8%E6%88%B7%E6%80%81%E6%89%A7%E8%A1%8C%E7%9A%84%E6%98%AF-A-%E3%80%82\"><span class=\"toc-text\">42.下列选项中，在用户态执行的是(A  ) 。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#43-%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%AD%EF%BC%8C%E5%85%81%E8%AE%B8%E5%A4%9A%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%90%8C%E6%97%B6%E8%BF%9B%E5%85%A5%E5%86%85%E5%AD%98%E5%B9%B6%E8%BF%90%E8%A1%8C%EF%BC%8C%E8%BF%99%E7%A7%8D%E6%96%B9%E6%B3%95%E7%A7%B0%E4%B8%BA-D-%E3%80%82\"><span class=\"toc-text\">43.在计算机系统中，允许多个程序同时进入内存并运行，这种方法称为( D )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#44-%E4%B8%80%E4%B8%AA%E8%BF%9B%E7%A8%8B%E6%98%AF-C-%E3%80%82\"><span class=\"toc-text\">44.一个进程是( C )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#45-%E5%A6%82%E6%9E%9C%E5%8D%95CPU%E7%B3%BB%E7%BB%9F%E4%B8%AD%E6%9C%89n%E4%B8%AA%E5%B9%B6%E5%8F%91%E8%BF%9B%E7%A8%8B%EF%BC%8C%E5%88%99%E5%B0%B1%E7%BB%AA%E9%98%9F%E5%88%97%E4%B8%AD%E8%BF%9B%E7%A8%8B%E4%B8%AA%E6%95%B0%E6%9C%80%E5%A4%9A%E5%8F%AF%E8%BE%BE-B-%E4%B8%AA%E3%80%82\"><span class=\"toc-text\">45.如果单CPU系统中有n个并发进程，则就绪队列中进程个数最多可达(B  )个。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#46-%E9%80%9A%E5%B8%B8%EF%BC%8C%E7%94%A8%E6%88%B7%E8%BF%9B%E7%A8%8B%E8%A2%AB%E5%BB%BA%E7%AB%8B%E5%90%8E%EF%BC%8C-B-%E3%80%82\"><span class=\"toc-text\">46.通常，用户进程被建立后，( B )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#47-%E6%94%AF%E6%8C%81%E5%A4%9A%E9%81%93%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9C%A8%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E4%B8%8D%E6%96%AD%E5%9C%B0%E9%80%89%E6%8B%A9%E6%96%B0%E8%BF%9B%E7%A8%8B%E8%BF%90%E8%A1%8C%E6%9D%A5%E5%AE%9E%E7%8E%B0CPU%E7%9A%84%E5%85%B1%E4%BA%AB%EF%BC%8C%E4%B8%8B%E5%88%97%E9%80%89%E9%A1%B9%E4%B8%AD%EF%BC%8C-D-%E4%B8%8D%E6%98%AF%E5%BC%95%E8%B5%B7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%80%89%E6%8B%A9%E6%96%B0%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%9B%B4%E6%8E%A5%E5%8E%9F%E5%9B%A0%E3%80%82\"><span class=\"toc-text\">47.支持多道程序设计的操作系统在运行过程中，不断地选择新进程运行来实现CPU的共享，下列选项中，(D   )不是引起操作系统选择新进程的直接原因。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#48-%E5%88%86%E6%97%B6%E7%B3%BB%E7%BB%9F%E4%B8%AD%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%E9%80%9A%E5%B8%B8%E9%87%87%E7%94%A8-B-%E3%80%82\"><span class=\"toc-text\">48.分时系统中进程调度算法通常采用( B  )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#49-%E5%9C%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%AD%EF%BC%8C%E6%89%80%E8%B0%93%E2%80%9C%E6%AD%BB%E9%94%81%E2%80%9D%E6%98%AF%E6%8C%87-B-%E3%80%82\"><span class=\"toc-text\">49.在操作系统中，所谓“死锁”是指( B  )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#50-%E5%9C%A8%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E4%B8%AD%EF%BC%8C%E8%82%AF%E5%AE%9A%E4%B8%8D%E4%BC%9A%E5%9B%A0%E7%AB%9E%E4%BA%89-D-%E8%80%8C%E4%BA%A7%E7%94%9F%E6%AD%BB%E9%94%81%E3%80%82\"><span class=\"toc-text\">50.在多进程的并发系统中，肯定不会因竞争(   D)而产生死锁。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#51-%E6%8A%8A%E7%9B%AE%E6%A0%87%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E9%80%BB%E8%BE%91%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2%E6%88%90%E4%B8%BB%E5%AD%98%E7%A9%BA%E9%97%B4%E7%9A%84%E7%89%A9%E7%90%86%E5%9C%B0%E5%9D%80%E7%A7%B0%E4%B8%BA-B-%E3%80%82\"><span class=\"toc-text\">51.把目标程序中的逻辑地址转换成主存空间的物理地址称为(   B)。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#52-%E5%9C%A8%E4%B8%8B%E8%BF%B0%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88%E4%B8%AD%EF%BC%8C-D-%E7%AE%A1%E7%90%86%E6%96%B9%E5%BC%8F%E8%A6%81%E6%B1%82%E4%BD%9C%E4%B8%9A%E7%9A%84%E9%80%BB%E8%BE%91%E5%9C%B0%E5%9D%80%E4%B8%8E%E5%8D%A0%E6%9C%89%E4%B8%BB%E5%AD%98%E7%9A%84%E5%AD%98%E5%82%A8%E5%8C%BA%E5%9F%9F%E9%83%BD%E6%98%AF%E8%BF%9E%E7%BB%AD%E7%9A%84%E3%80%82\"><span class=\"toc-text\">52.在下述存储管理方案中，( D  )管理方式要求作业的逻辑地址与占有主存的存储区域都是连续的。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#53-%E9%A1%B5%E5%BC%8F%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E4%B8%AD%EF%BC%8C%E6%AF%8F%E6%AC%A1%E4%BB%8E%E4%B8%BB%E5%AD%98%E4%B8%AD%E5%8F%96%E6%8C%87%E4%BB%A4%E6%88%96%E5%8F%96%E6%93%8D%E4%BD%9C%E6%95%B0%EF%BC%8C%E5%BD%93%E8%AF%BB%E5%BF%AB%E8%A1%A8%E5%A4%B1%E8%B4%A5%E6%97%B6%EF%BC%8C%E8%A6%81%E8%AF%BB%EF%BC%88B-%EF%BC%89%E6%AC%A1%E4%B8%BB%E5%AD%98%E3%80%82\"><span class=\"toc-text\">53.页式存储管理中，每次从主存中取指令或取操作数，当读快表失败时，要读（B  ）次主存。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#54-%E9%87%87%E7%94%A8%E6%AE%B5%E9%A1%B5%E5%BC%8F%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%EF%BC%8C%E5%9C%A8CPU%E4%B8%AD%E5%BA%94%E8%AE%BE%E7%BD%AE%EF%BC%88-A%EF%BC%89%E5%AF%84%E5%AD%98%E5%99%A8%E3%80%82\"><span class=\"toc-text\">54.采用段页式存储管理，在CPU中应设置（  A）寄存器。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#55-%E7%A1%AC%E4%BB%B6%E9%87%87%E7%94%A8%E4%BA%86%E4%B8%AD%E6%96%AD%E5%92%8C%E9%80%9A%E9%81%93%E6%8A%80%E6%9C%AF%EF%BC%8C%E4%BD%BF%E5%BE%97-B-%E3%80%82\"><span class=\"toc-text\">55.硬件采用了中断和通道技术，使得( B  )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#56-%E7%A8%8B%E5%BA%8F%E5%91%98%E5%88%A9%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E6%89%93%E5%BC%80I-x2F-O%E8%AE%BE%E5%A4%87%E6%97%B6%EF%BC%8C%E9%80%9A%E5%B8%B8%E4%BD%BF%E7%94%A8%E7%9A%84%E8%AE%BE%E5%A4%87%E6%A0%87%E8%AF%86%E7%AC%A6%E6%98%AF-A-%E3%80%82\"><span class=\"toc-text\">56.程序员利用系统调用打开I&#x2F;O设备时，通常使用的设备标识符是(A   )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#57-%E4%B8%8B%E5%88%97%E9%80%89%E9%A1%B9%E4%B8%AD%EF%BC%8C-B-%E4%B8%8D%E6%98%AF%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E6%89%80%E9%9C%80%E8%A6%81%E5%AE%8C%E6%88%90%E7%9A%84%E5%B7%A5%E4%BD%9C%E3%80%82\"><span class=\"toc-text\">57.下列选项中，(  B )不是删除文件所需要完成的工作。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#58-%E4%B8%8B%E5%88%97%E6%96%87%E4%BB%B6%E7%89%A9%E7%90%86%E7%BB%93%E6%9E%84%E4%B8%AD%EF%BC%8C%E9%80%82%E5%90%88%E9%9A%8F%E6%9C%BA%E8%AE%BF%E9%97%AE%E4%B8%94%E6%98%93%E4%BA%8E%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E7%9A%84%E6%98%AF-B-%E3%80%82\"><span class=\"toc-text\">58.下列文件物理结构中，适合随机访问且易于文件扩展的是( B  )。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#59-%E4%B8%8D%E5%8C%85%E5%90%AB%E5%9C%A8%E6%96%87%E4%BB%B6%E6%8E%A7%E5%88%B6%E5%9D%97%EF%BC%88%E5%8F%88%E7%A7%B0%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E9%A1%B9%EF%BC%89%E4%B8%AD%E7%9A%84%E4%BF%A1%E6%81%AF%E6%98%AF-%EF%BC%88AA-%EF%BC%89%E3%80%82\"><span class=\"toc-text\">59.不包含在文件控制块（又称文件目录项）中的信息是 （AA  ）。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#60-%E6%9F%90%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B8%AD%EF%BC%8C%E9%87%87%E7%94%A83%E4%B8%AA%E5%AD%97%E8%8A%82%E8%A1%A8%E7%A4%BA%E7%A3%81%E7%9B%98%E5%9D%97%E5%8F%B7%EF%BC%8C%E6%AF%8F%E4%B8%AA%E7%A3%81%E7%9B%98%E5%9D%97%E5%A4%A7%E5%B0%8F%E4%B8%BA512%E5%AD%97%E8%8A%82%E3%80%82%E8%AF%A5%E7%B3%BB%E7%BB%9F%E4%B8%AD%E6%AF%8F%E4%B8%AA%EF%BC%88%E9%80%BB%E8%BE%91%EF%BC%89%E7%A3%81%E7%9B%98%E5%85%81%E8%AE%B8%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AE%B9%E9%87%8F%E6%98%AF%EF%BC%88-C-%EF%BC%89%E5%AD%97%E8%8A%82%E3%80%82\"><span class=\"toc-text\">60.某操作系统的文件系统中，采用3个字节表示磁盘块号，每个磁盘块大小为512字节。该系统中每个（逻辑）磁盘允许的最大容量是（ C ）字节。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88%EF%BC%9A\"><span class=\"toc-text\">答案：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E8%AF%95%E8%AF%B4%E6%98%8E%E8%BF%9B%E7%A8%8B%E5%9C%A8%E4%B8%89%E4%B8%AA%E5%9F%BA%E6%9C%AC%E7%8A%B6%E6%80%81%E4%B9%8B%E9%97%B4%E8%BD%AC%E6%8D%A2%E7%9A%84%E5%85%B8%E5%9E%8B%E5%8E%9F%E5%9B%A0%E3%80%82\"><span class=\"toc-text\">1、试说明进程在三个基本状态之间转换的典型原因。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E5%9F%BA%E4%BA%8E%E9%A1%BA%E5%BA%8F%E6%90%9C%E7%B4%A2%E7%9A%84%E5%8A%A8%E6%80%81%E5%88%86%E5%8C%BA%E5%88%86%E9%85%8D%E7%AE%97%E6%B3%95%EF%BC%9F%E5%AE%83%E5%8F%AF%E5%88%86%E4%B8%BA%E5%93%AA%E5%87%A0%E7%A7%8D%EF%BC%9F\"><span class=\"toc-text\">2、什么是基于顺序搜索的动态分区分配算法？它可分为哪几种？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E8%AF%95%E8%AF%B4%E6%98%8E%E4%BD%8E%E7%BA%A7%E8%B0%83%E5%BA%A6%E7%9A%84%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD%E3%80%82\"><span class=\"toc-text\">3、试说明低级调度的主要功能。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E3%80%81%E8%AF%95%E4%BB%8E%E5%8A%A8%E6%80%81%E6%80%A7%EF%BC%8C%E5%B9%B6%E5%8F%91%E6%80%A7%E5%92%8C%E7%8B%AC%E7%AB%8B%E6%80%A7%E4%B8%8A%E6%AF%94%E8%BE%83%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">4、试从动态性，并发性和独立性上比较进程和程序?</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%AE%9E%E7%8E%B0%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8%E9%9C%80%E8%A6%81%E5%93%AA%E4%BA%9B%E7%A1%AC%E4%BB%B6%E6%94%AF%E6%8C%81%EF%BC%9F\"><span class=\"toc-text\">5、实现虚拟存储器需要哪些硬件支持？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6%E3%80%81%E5%BC%95%E5%85%A5%E7%BC%93%E5%86%B2%E7%9A%84%E4%B8%BB%E8%A6%81%E5%8E%9F%E5%9B%A0%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">6、引入缓冲的主要原因是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7%E3%80%81%E5%A4%84%E7%90%86%E6%9C%BA%E7%AE%A1%E7%90%86%E6%9C%89%E5%93%AA%E4%BA%9B%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD%EF%BC%9F%E5%85%B6%E4%B8%BB%E8%A6%81%E4%BB%BB%E5%8A%A1%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">7、处理机管理有哪些主要功能？其主要任务是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8%E3%80%81%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8%E6%9C%89%E5%93%AA%E4%BA%9B%E7%89%B9%E5%BE%81%EF%BC%9F%E5%85%B6%E4%B8%AD%E6%9C%80%E6%9C%AC%E8%B4%A8%E7%9A%84%E7%89%B9%E5%BE%81%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">8、虚拟存储器有哪些特征？其中最本质的特征是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9%E3%80%81%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%A8%A1%E5%9E%8B-%E5%8F%AF%E5%88%86%E4%B8%BA%E4%B8%89%E5%B1%82%EF%BC%8C%E8%AF%95%E8%AF%B4%E6%98%8E%E5%85%B6%E6%AF%8F%E4%B8%80%E5%B1%82%E6%89%80%E5%8C%85%E5%90%AB%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%86%85%E5%AE%B9%E3%80%82\"><span class=\"toc-text\">9、文件系统的模型 可分为三层，试说明其每一层所包含的基本内容。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10%E3%80%81%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E6%9C%89%E5%93%AA%E4%BA%9B%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD%EF%BC%9F%E5%85%B6%E4%B8%BB%E8%A6%81%E4%BB%BB%E5%8A%A1%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">10、文件管理有哪些主要功能？其主要任务是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11%E3%80%81%E8%AF%95%E4%BB%8E%E8%B0%83%E5%BA%A6%E6%80%A7%E3%80%81%E5%B9%B6%E5%8F%91%E6%80%A7%E3%80%81%E6%8B%A5%E6%9C%89%E8%B5%84%E6%BA%90%E6%80%A7%E5%8F%8A%E7%B3%BB%E7%BB%9F%E5%BC%80%E9%94%80%E6%96%B9%E9%9D%A2%E5%AF%B9%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E8%BF%9B%E8%A1%8C%E6%AF%94%E8%BE%83%E3%80%82\"><span class=\"toc-text\">11、试从调度性、并发性、拥有资源性及系统开销方面对进程和线程进行比较。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12%E3%80%81%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%9C%89%E5%85%B3%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8F%AF%E5%88%86%E4%B8%BA%E5%93%AA%E5%87%A0%E4%B8%AA%E5%B1%82%E6%AC%A1%EF%BC%9F\"><span class=\"toc-text\">12、与文件系统有关的软件可分为哪几个层次？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#13-%E7%AE%80%E8%BF%B0%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%89%B9%E5%BE%81%E5%92%8C%E5%8A%9F%E8%83%BD%E3%80%82\"><span class=\"toc-text\">13.简述操作系统的基本特征和功能。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#14-%E8%AF%95%E6%AF%94%E8%BE%83%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%B7%AE%E5%BC%82%E3%80%82\"><span class=\"toc-text\">14.试比较进程与程序的差异。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#20-%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90%E7%9A%84%E5%BD%A2%E5%BC%8F%E8%AE%B2%E8%A7%A3%E9%80%BB%E8%BE%91%E5%9C%B0%E5%9D%80%E5%88%B0%E7%89%A9%E7%90%86%E5%9C%B0%E5%9D%80%E7%9A%84%E8%BD%AC%E6%8D%A2%EF%BC%9A\"><span class=\"toc-text\">20.一个例子的形式讲解逻辑地址到物理地址的转换：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#15%EF%BC%9A%E5%88%86%E9%A1%B5%E6%8A%80%E6%9C%AF%E4%BE%8B%E9%A2%98\"><span class=\"toc-text\">15：分页技术例题</span></a></li></ol></li></ol>","author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"操作系统之信号量、P、V操作","uid":"510210968f59787c491612129c395946","slug":"操作系统之信号量、P、V操作","date":"2020-12-09T07:43:00.000Z","updated":"2022-03-30T16:00:00.487Z","comments":true,"path":"api/articles/操作系统之信号量、P、V操作.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforhexo/20201202142708.jpg","text":"信号量是最早出现的用来解决进程同步与互斥问题的机制(也可实现进程通信)，包括一个称为信 号量的变量及对它进行的两个原语操作。信号量为一个整数，我们设这个信号量为：sem。很显然，我们规定在sem大于等于零的时候代表可供并发进程使用的 资源实体数，sem小于零的时候，表示正在等待使...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}}},"next_post":{"title":"Kali linux Vmware安装","uid":"3117370124352cd5a86df0b68c224fcb","slug":"Kali-linux-Vmware安装","date":"2020-12-05T13:20:00.000Z","updated":"2020-12-05T14:28:10.095Z","comments":true,"path":"api/articles/Kali-linux-Vmware安装.json","keywords":null,"cover":[],"text":"一、kalilinux下载 根据电脑配置选择合适的版本，在这里我选择的是64位版本， 二、vmware安装打开VMware 创建适合KALI的虚拟机，使用自定义的配置方法，点击下一步 三、激活 语言设置汉语就可 ","link":"","photos":[],"count_time":{"symbolsCount":137,"symbolsTime":"1 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":19,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kali","slug":"kali","count":1,"path":"api/tags/kali.json"},{"name":"linux","slug":"linux","count":1,"path":"api/tags/linux.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}}}}