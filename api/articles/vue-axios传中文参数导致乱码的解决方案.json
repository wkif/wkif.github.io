{"title":"vue axios传中文参数导致乱码的解决方案","uid":"77ab0fbeb021db0c986d25c4c83eb7f1","slug":"vue-axios传中文参数导致乱码的解决方案","date":"2020-12-25T09:59:00.000Z","updated":"2020-12-25T10:15:28.383Z","comments":true,"path":"api/articles/vue-axios传中文参数导致乱码的解决方案.json","keywords":null,"cover":[],"content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var that = this;</span><br><span class=\"line\">         var name = that.signform.signname;</span><br><span class=\"line\">         var username = that.signform.signusername;</span><br><span class=\"line\">         var password = that.signform.signpassword;</span><br><span class=\"line\">         var user_type = that.sign_user_type;</span><br><span class=\"line\">         var email = that.signform.mailAddress;</span><br><span class=\"line\">         var studentid = that.signform.studentid;</span><br><span class=\"line\">         this.$axios(&#123;</span><br><span class=\"line\">           method: &quot;post&quot;,</span><br><span class=\"line\">           url:</span><br><span class=\"line\">             this.$api +</span><br><span class=\"line\">             `/Register/?name=$&#123;name&#125;&amp;username=$&#123;username&#125;&amp;password=$&#123;password&#125;&amp;user_type=$&#123;user_type&#125;&amp;email=$&#123;email&#125;&amp;studentid=$&#123;studentid&#125;`, //利用了字符串模板来携带id</span><br><span class=\"line\">         &#125;)</span><br><span class=\"line\">           .then((res) =&gt; &#123;</span><br><span class=\"line\">             console.log(res);</span><br><span class=\"line\">             this.changeCode();</span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\">           .catch((req) =&gt; &#123;</span><br><span class=\"line\">             // console.log(req);</span><br><span class=\"line\">           &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>在vue axios post 请求注册用户时，刚开始通过如上字符拼接形式调用api时，在服务器后端出现了utf-8汉语乱码：</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201225180537.png\"></p>\n<p>图中name字段本是中文，服务器后端出现了utf-8汉语乱码，</p>\n<p>查询bing后有如下几种解决办法：</p>\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201225180735.png\"></p>\n<p>其中有添加</p>\n<ol>\n<li>headers: {</li>\n<li>​            “Content-Type”: “application&#x2F;x-www-form-urlencoded;charset&#x3D;UTF-8”</li>\n<li>​                                    },</li>\n</ol>\n<p>但个人实验了一下没有解决问题，</p>\n<p>之后又试了下js函数把字符转换，没有解决问题。</p>\n<h2 id=\"方法：\"><a href=\"#方法：\" class=\"headerlink\" title=\"方法：\"></a>方法：</h2><p>使用vue axios推荐的vue-axios的使用及其get与post网络请求</p>\n<p>即：</p>\n<p>get请求时用如下方式代替字符拼接方式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">// Optionally the request above could also be done as</span><br><span class=\"line\">axios.get(&#x27;/user&#x27;, &#123;</span><br><span class=\"line\">    params: &#123;</span><br><span class=\"line\">      ID: 12345</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(function (response) &#123;</span><br><span class=\"line\">    console.log(response);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(function (error) &#123;</span><br><span class=\"line\">    console.log(error);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>post请求时一样：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios.post(&#x27;/user&#x27;, &#123;</span><br><span class=\"line\">    firstName: &#x27;Fred&#x27;,</span><br><span class=\"line\">    lastName: &#x27;Flintstone&#x27;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(function (response) &#123;</span><br><span class=\"line\">    console.log(response);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(function (error) &#123;</span><br><span class=\"line\">    console.log(error);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n\n\n<p>所以项目中最终采取的代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">let data = new FormData();</span><br><span class=\"line\">data.append(&quot;name&quot;, this.signform.signname);</span><br><span class=\"line\">data.append(&quot;username&quot;, this.signform.signusername);</span><br><span class=\"line\">data.append(&quot;password&quot;, this.signform.signpassword);</span><br><span class=\"line\">data.append(&quot;user_type&quot;, this.sign_user_type);</span><br><span class=\"line\">data.append(&quot;email&quot;, this.signform.mailAddress);</span><br><span class=\"line\">data.append(&quot;studentid&quot;, this.signform.studentid);</span><br><span class=\"line\">console.log(data);</span><br><span class=\"line\">var that = this;</span><br><span class=\"line\">axios</span><br><span class=\"line\">  .post(this.$api + &quot;/Register/&quot;, data) //以slash结尾</span><br><span class=\"line\">  .then(function (response) &#123;</span><br><span class=\"line\">    console.log(response.data);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch((err) =&gt; &#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://gitee.com/wkkif/PicGoimg/raw/master/img/20201225181426.png\"></p>\n<p>注意的时此时后台时没有显示字段的，但是数据库里已经加入了（注册功能哈）。</p>\n","text":"问题描述1234567891011121314151617181920var that = this; var name = that.signform.signname; var username = that.signform.signusername; var passwo...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Vue","slug":"Vue","count":1,"path":"api/tags/Vue.json"},{"name":"Axios","slug":"Axios","count":1,"path":"api/tags/Axios.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">问题描述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">方法：</span></a></li></ol>","author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"C语言知识点","date":"2021-01-05T06:52:00.000Z","updated":"2022-03-30T16:10:12.416Z","comments":true,"path":"api/articles/C语言知识点.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/wkif/imgforTeachingDemo/202203310008758.jpg","text":"输入未知长度字符数组1234567891011121314151617181920#include &lt;stdio.h&gt;int main()&#123; char array_num[100] ; int i = 0, length; do &#123; scanf(&...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":15,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"C语言","slug":"C语言","count":2,"path":"api/tags/C语言.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}}},"next_post":{"title":"操作系统之调度","uid":"6636482fc925ef3fdf260b6b326d9fbf","slug":"操作系统之调度","date":"2020-12-09T13:40:00.000Z","updated":"2022-03-30T15:59:38.731Z","comments":true,"path":"api/articles/操作系统之调度.json","keywords":null,"cover":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforhexo/20201202142647.jpg","text":"调度调度的基本概念调度研究的问题：当有一堆任务要处理，但由于资源有限，这些事情没法同时处理。这就需要确定某种规则来决定处理这些任务的顺序，这就是调度研究的问题。 举个有味道的例子：现在有4个人要上厕所(他们几乎同时到达)，他们分别需要使用厕所3分钟、10分钟、1分钟、4分钟。但是...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":15,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"author":{"name":"kif","slug":"blog-author","avatar":"https://kifimg.oss-cn-beijing.aliyuncs.com/imgforteachingdemo/20201127203438.png","link":"/","description":"时间再拉长一点，让我有时间收拾一下心情","socials":{"github":"https://github.com/wkif","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_54739682?type=blog","juejin":"","customs":{}}}}}